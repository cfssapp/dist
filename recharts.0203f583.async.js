(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[5],{"4XXU":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ component_Legend; });\n__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ component_Tooltip; });\n__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ component_ResponsiveContainer; });\n__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ cartesian_CartesianGrid; });\n__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ cartesian_Line; });\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ cartesian_Area; });\n__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ cartesian_Bar; });\n__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ cartesian_XAxis; });\n__webpack_require__.d(__webpack_exports__, "l", function() { return /* reexport */ cartesian_YAxis; });\n__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ LineChart; });\n__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ BarChart; });\n__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ AreaChart; });\n\n// UNUSED EXPORTS: Surface, Layer, Cell, Text, Label, LabelList, Customized, Sector, Curve, Rectangle, Polygon, Dot, Cross, Symbols, PolarGrid, PolarRadiusAxis, PolarAngleAxis, Pie, Radar, RadialBar, Brush, ReferenceLine, ReferenceDot, ReferenceArea, CartesianAxis, Scatter, ZAxis, ErrorBar, PieChart, Treemap, Sankey, RadarChart, ScatterChart, RadialBarChart, ComposedChart, Funnel, FunnelChart, Trapezoid, Global\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("q1tI");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__("TSYQ");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: ./node_modules/lodash/isObject.js\nvar isObject = __webpack_require__("GoyQ");\nvar isObject_default = /*#__PURE__*/__webpack_require__.n(isObject);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/types.js\n\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n\nvar SVGContainerPropKeys = [\'viewBox\', \'children\'];\nvar SVGElementPropKeys = [\'className\', \'color\', \'height\', \'id\', \'lang\', \'max\', \'media\', \'method\', \'min\', \'name\', \'style\', \'target\', \'type\', \'width\', \'role\', \'tabIndex\', \'accentHeight\', \'accumulate\', \'additive\', \'alignmentBaseline\', \'allowReorder\', \'alphabetic\', \'amplitude\', \'arabicForm\', \'ascent\', \'attributeName\', \'attributeType\', \'autoReverse\', \'azimuth\', \'baseFrequency\', \'baselineShift\', \'baseProfile\', \'bbox\', \'begin\', \'bias\', \'by\', \'calcMode\', \'capHeight\', \'clip\', \'clipPath\', \'clipPathUnits\', \'clipRule\', \'colorInterpolation\', \'colorInterpolationFilters\', \'colorProfile\', \'colorRendering\', \'contentScriptType\', \'contentStyleType\', \'cursor\', \'cx\', \'cy\', \'d\', \'decelerate\', \'descent\', \'diffuseConstant\', \'direction\', \'display\', \'divisor\', \'dominantBaseline\', \'dur\', \'dx\', \'dy\', \'edgeMode\', \'elevation\', \'enableBackground\', \'end\', \'exponent\', \'externalResourcesRequired\', \'fill\', \'fillOpacity\', \'fillRule\', \'filter\', \'filterRes\', \'filterUnits\', \'floodColor\', \'floodOpacity\', \'focusable\', \'fontFamily\', \'fontSize\', \'fontSizeAdjust\', \'fontStretch\', \'fontStyle\', \'fontVariant\', \'fontWeight\', \'format\', \'from\', \'fx\', \'fy\', \'g1\', \'g2\', \'glyphName\', \'glyphOrientationHorizontal\', \'glyphOrientationVertical\', \'glyphRef\', \'gradientTransform\', \'gradientUnits\', \'hanging\', \'horizAdvX\', \'horizOriginX\', \'href\', \'ideographic\', \'imageRendering\', \'in2\', \'in\', \'intercept\', \'k1\', \'k2\', \'k3\', \'k4\', \'k\', \'kernelMatrix\', \'kernelUnitLength\', \'kerning\', \'keyPoints\', \'keySplines\', \'keyTimes\', \'lengthAdjust\', \'letterSpacing\', \'lightingColor\', \'limitingConeAngle\', \'local\', \'markerEnd\', \'markerHeight\', \'markerMid\', \'markerStart\', \'markerUnits\', \'markerWidth\', \'mask\', \'maskContentUnits\', \'maskUnits\', \'mathematical\', \'mode\', \'numOctaves\', \'offset\', \'opacity\', \'operator\', \'order\', \'orient\', \'orientation\', \'origin\', \'overflow\', \'overlinePosition\', \'overlineThickness\', \'paintOrder\', \'panose1\', \'pathLength\', \'patternContentUnits\', \'patternTransform\', \'patternUnits\', \'pointerEvents\', \'points\', \'pointsAtX\', \'pointsAtY\', \'pointsAtZ\', \'preserveAlpha\', \'preserveAspectRatio\', \'primitiveUnits\', \'r\', \'radius\', \'refX\', \'refY\', \'renderingIntent\', \'repeatCount\', \'repeatDur\', \'requiredExtensions\', \'requiredFeatures\', \'restart\', \'result\', \'rotate\', \'rx\', \'ry\', \'seed\', \'shapeRendering\', \'slope\', \'spacing\', \'specularConstant\', \'specularExponent\', \'speed\', \'spreadMethod\', \'startOffset\', \'stdDeviation\', \'stemh\', \'stemv\', \'stitchTiles\', \'stopColor\', \'stopOpacity\', \'strikethroughPosition\', \'strikethroughThickness\', \'string\', \'stroke\', \'strokeDasharray\', \'strokeDashoffset\', \'strokeLinecap\', \'strokeLinejoin\', \'strokeMiterlimit\', \'strokeOpacity\', \'strokeWidth\', \'surfaceScale\', \'systemLanguage\', \'tableValues\', \'targetX\', \'targetY\', \'textAnchor\', \'textDecoration\', \'textLength\', \'textRendering\', \'to\', \'transform\', \'u1\', \'u2\', \'underlinePosition\', \'underlineThickness\', \'unicode\', \'unicodeBidi\', \'unicodeRange\', \'unitsPerEm\', \'vAlphabetic\', \'values\', \'vectorEffect\', \'version\', \'vertAdvY\', \'vertOriginX\', \'vertOriginY\', \'vHanging\', \'vIdeographic\', \'viewTarget\', \'visibility\', \'vMathematical\', \'widths\', \'wordSpacing\', \'writingMode\', \'x1\', \'x2\', \'x\', \'xChannelSelector\', \'xHeight\', \'xlinkActuate\', \'xlinkArcrole\', \'xlinkHref\', \'xlinkRole\', \'xlinkShow\', \'xlinkTitle\', \'xlinkType\', \'xmlBase\', \'xmlLang\', \'xmlns\', \'xmlnsXlink\', \'xmlSpace\', \'y1\', \'y2\', \'y\', \'yChannelSelector\', \'z\', \'zoomAndPan\', \'ref\', \'key\', \'angle\'];\nvar EventKeys = [\'dangerouslySetInnerHTML\', \'onCopy\', \'onCopyCapture\', \'onCut\', \'onCutCapture\', \'onPaste\', \'onPasteCapture\', \'onCompositionEnd\', \'onCompositionEndCapture\', \'onCompositionStart\', \'onCompositionStartCapture\', \'onCompositionUpdate\', \'onCompositionUpdateCapture\', \'onFocus\', \'onFocusCapture\', \'onBlur\', \'onBlurCapture\', \'onChange\', \'onChangeCapture\', \'onBeforeInput\', \'onBeforeInputCapture\', \'onInput\', \'onInputCapture\', \'onReset\', \'onResetCapture\', \'onSubmit\', \'onSubmitCapture\', \'onInvalid\', \'onInvalidCapture\', \'onLoad\', \'onLoadCapture\', \'onError\', \'onErrorCapture\', \'onKeyDown\', \'onKeyDownCapture\', \'onKeyPress\', \'onKeyPressCapture\', \'onKeyUp\', \'onKeyUpCapture\', \'onAbort\', \'onAbortCapture\', \'onCanPlay\', \'onCanPlayCapture\', \'onCanPlayThrough\', \'onCanPlayThroughCapture\', \'onDurationChange\', \'onDurationChangeCapture\', \'onEmptied\', \'onEmptiedCapture\', \'onEncrypted\', \'onEncryptedCapture\', \'onEnded\', \'onEndedCapture\', \'onLoadedData\', \'onLoadedDataCapture\', \'onLoadedMetadata\', \'onLoadedMetadataCapture\', \'onLoadStart\', \'onLoadStartCapture\', \'onPause\', \'onPauseCapture\', \'onPlay\', \'onPlayCapture\', \'onPlaying\', \'onPlayingCapture\', \'onProgress\', \'onProgressCapture\', \'onRateChange\', \'onRateChangeCapture\', \'onSeeked\', \'onSeekedCapture\', \'onSeeking\', \'onSeekingCapture\', \'onStalled\', \'onStalledCapture\', \'onSuspend\', \'onSuspendCapture\', \'onTimeUpdate\', \'onTimeUpdateCapture\', \'onVolumeChange\', \'onVolumeChangeCapture\', \'onWaiting\', \'onWaitingCapture\', \'onAuxClick\', \'onAuxClickCapture\', \'onClick\', \'onClickCapture\', \'onContextMenu\', \'onContextMenuCapture\', \'onDoubleClick\', \'onDoubleClickCapture\', \'onDrag\', \'onDragCapture\', \'onDragEnd\', \'onDragEndCapture\', \'onDragEnter\', \'onDragEnterCapture\', \'onDragExit\', \'onDragExitCapture\', \'onDragLeave\', \'onDragLeaveCapture\', \'onDragOver\', \'onDragOverCapture\', \'onDragStart\', \'onDragStartCapture\', \'onDrop\', \'onDropCapture\', \'onMouseDown\', \'onMouseDownCapture\', \'onMouseEnter\', \'onMouseLeave\', \'onMouseMove\', \'onMouseMoveCapture\', \'onMouseOut\', \'onMouseOutCapture\', \'onMouseOver\', \'onMouseOverCapture\', \'onMouseUp\', \'onMouseUpCapture\', \'onSelect\', \'onSelectCapture\', \'onTouchCancel\', \'onTouchCancelCapture\', \'onTouchEnd\', \'onTouchEndCapture\', \'onTouchMove\', \'onTouchMoveCapture\', \'onTouchStart\', \'onTouchStartCapture\', \'onPointerDown\', \'onPointerDownCapture\', \'onPointerMove\', \'onPointerMoveCapture\', \'onPointerUp\', \'onPointerUpCapture\', \'onPointerCancel\', \'onPointerCancelCapture\', \'onPointerEnter\', \'onPointerEnterCapture\', \'onPointerLeave\', \'onPointerLeaveCapture\', \'onPointerOver\', \'onPointerOverCapture\', \'onPointerOut\', \'onPointerOutCapture\', \'onGotPointerCapture\', \'onGotPointerCaptureCapture\', \'onLostPointerCapture\', \'onLostPointerCaptureCapture\', \'onScroll\', \'onScrollCapture\', \'onWheel\', \'onWheelCapture\', \'onAnimationStart\', \'onAnimationStartCapture\', \'onAnimationEnd\', \'onAnimationEndCapture\', \'onAnimationIteration\', \'onAnimationIterationCapture\', \'onTransitionEnd\', \'onTransitionEndCapture\']; // Animation Types => TODO: Should be moved when react-smooth is typescriptified.\n\nvar types_filterProps = function filterProps(props, includeEvents, isSvg) {\n  if (!props || typeof props === \'function\' || typeof props === \'boolean\') {\n    return null;\n  }\n\n  var inputProps = props;\n\n  if (Object(react["isValidElement"])(props)) {\n    inputProps = props.props;\n  }\n\n  if (!isObject_default()(inputProps)) {\n    return null;\n  }\n\n  var out = {};\n  Object.keys(inputProps).forEach(function (key) {\n    // viewBox only exist in <svg />\n    if (SVGElementPropKeys.includes(key) || isSvg && SVGContainerPropKeys.includes(key) || includeEvents && EventKeys.includes(key)) {\n      out[key] = inputProps[key];\n    }\n  });\n  return out;\n};\nvar types_adaptEventHandlers = function adaptEventHandlers(props, newHandler) {\n  if (!props || typeof props === \'function\' || typeof props === \'boolean\') {\n    return null;\n  }\n\n  var inputProps = props;\n\n  if (Object(react["isValidElement"])(props)) {\n    inputProps = props.props;\n  }\n\n  if (!isObject_default()(inputProps)) {\n    return null;\n  }\n\n  var out = {};\n  Object.keys(inputProps).forEach(function (key) {\n    if (EventKeys.includes(key)) {\n      out[key] = newHandler || function (e) {\n        return inputProps[key](inputProps, e);\n      };\n    }\n  });\n  return out;\n};\n\nvar getEventHandlerOfChild = function getEventHandlerOfChild(originalHandler, data, index) {\n  return function (e) {\n    originalHandler(data, index, e);\n    return null;\n  };\n};\n\nvar types_adaptEventsOfChild = function adaptEventsOfChild(props, data, index) {\n  if (!isObject_default()(props) || _typeof(props) !== \'object\') {\n    return null;\n  }\n\n  var out = null;\n  Object.keys(props).forEach(function (key) {\n    var item = props[key];\n\n    if (EventKeys.includes(key) && typeof item === \'function\') {\n      if (!out) out = {};\n      out[key] = getEventHandlerOfChild(item, data, index);\n    }\n  });\n  return out;\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/container/Surface.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * @fileOverview Surface\n */\n\n\n\n\nfunction Surface(props) {\n  var children = props.children,\n      width = props.width,\n      height = props.height,\n      viewBox = props.viewBox,\n      className = props.className,\n      style = props.style,\n      others = _objectWithoutProperties(props, ["children", "width", "height", "viewBox", "className", "style"]);\n\n  var svgView = viewBox || {\n    width: width,\n    height: height,\n    x: 0,\n    y: 0\n  };\n  var layerClass = classnames_default()(\'recharts-surface\', className);\n  return /*#__PURE__*/react_default.a.createElement("svg", _extends({}, types_filterProps(others, true, true), {\n    className: layerClass,\n    width: width,\n    height: height,\n    style: style,\n    viewBox: "".concat(svgView.x, " ").concat(svgView.y, " ").concat(svgView.width, " ").concat(svgView.height),\n    version: "1.1"\n  }), children);\n}\n\n/* harmony default export */ var container_Surface = (Surface);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/container/Layer.js\nfunction Layer_extends() { Layer_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Layer_extends.apply(this, arguments); }\n\nfunction Layer_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Layer_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Layer_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * @fileOverview Layer\n */\n\n\n\n\nfunction Layer(props) {\n  var children = props.children,\n      className = props.className,\n      others = Layer_objectWithoutProperties(props, ["children", "className"]);\n\n  var layerClass = classnames_default()(\'recharts-layer\', className);\n  return /*#__PURE__*/react_default.a.createElement("g", Layer_extends({\n    className: layerClass\n  }, types_filterProps(others, true)), children);\n}\n\n/* harmony default export */ var container_Layer = (Layer);\n// EXTERNAL MODULE: ./node_modules/lodash/isFunction.js\nvar isFunction = __webpack_require__("lSCD");\nvar isFunction_default = /*#__PURE__*/__webpack_require__.n(isFunction);\n\n// EXTERNAL MODULE: ./node_modules/lodash/uniqBy.js\nvar uniqBy = __webpack_require__("qPyV");\nvar uniqBy_default = /*#__PURE__*/__webpack_require__.n(uniqBy);\n\n// EXTERNAL MODULE: ./node_modules/lodash/upperFirst.js\nvar upperFirst = __webpack_require__("gQMU");\nvar upperFirst_default = /*#__PURE__*/__webpack_require__.n(upperFirst);\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol/circle.js\nvar circle = __webpack_require__("GvAG");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol/cross.js\nvar cross = __webpack_require__("oKyY");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol/diamond.js\nvar diamond = __webpack_require__("ms7Z");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol/square.js\nvar square = __webpack_require__("1afE");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol/star.js\nvar star = __webpack_require__("CAOx");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol/triangle.js\nvar triangle = __webpack_require__("rkAg");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol/wye.js\nvar wye = __webpack_require__("xJQu");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/symbol.js\nvar src_symbol = __webpack_require__("kVCJ");\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Symbols.js\n\n\nfunction Symbols_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Symbols_typeof = function _typeof(obj) { return typeof obj; }; } else { Symbols_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Symbols_typeof(obj); }\n\nfunction Symbols_extends() { Symbols_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Symbols_extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (Symbols_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Curve\n */\n\n\n\n\nvar symbolFactories = {\n  symbolCircle: circle["a" /* default */],\n  symbolCross: cross["a" /* default */],\n  symbolDiamond: diamond["a" /* default */],\n  symbolSquare: square["a" /* default */],\n  symbolStar: star["a" /* default */],\n  symbolTriangle: triangle["a" /* default */],\n  symbolWye: wye["a" /* default */]\n};\nvar RADIAN = Math.PI / 180;\n\nvar Symbols_getSymbolFactory = function getSymbolFactory(type) {\n  var name = "symbol".concat(upperFirst_default()(type));\n  return symbolFactories[name] || circle["a" /* default */];\n};\n\nvar calculateAreaSize = function calculateAreaSize(size, sizeType, type) {\n  if (sizeType === \'area\') {\n    return size;\n  }\n\n  switch (type) {\n    case \'cross\':\n      return 5 * size * size / 9;\n\n    case \'diamond\':\n      return 0.5 * size * size / Math.sqrt(3);\n\n    case \'square\':\n      return size * size;\n\n    case \'star\':\n      {\n        var angle = 18 * RADIAN;\n        return 1.25 * size * size * (Math.tan(angle) - Math.tan(angle * 2) * Math.pow(Math.tan(angle), 2));\n      }\n\n    case \'triangle\':\n      return Math.sqrt(3) * size * size / 4;\n\n    case \'wye\':\n      return (21 - 10 * Math.sqrt(3)) * size * size / 8;\n\n    default:\n      return Math.PI * size * size / 4;\n  }\n};\n\nvar Symbols_Symbols = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Symbols, _PureComponent);\n\n  var _super = _createSuper(Symbols);\n\n  function Symbols() {\n    _classCallCheck(this, Symbols);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Symbols, [{\n    key: "getPath",\n\n    /**\n     * Calculate the path of curve\n     * @return {String} path\n     */\n    value: function getPath() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          sizeType = _this$props.sizeType,\n          type = _this$props.type;\n      var symbolFactory = Symbols_getSymbolFactory(type);\n      var symbol = Object(src_symbol["a" /* default */])().type(symbolFactory).size(calculateAreaSize(size, sizeType, type));\n      return symbol();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          cx = _this$props2.cx,\n          cy = _this$props2.cy,\n          size = _this$props2.size;\n\n      if (cx === +cx && cy === +cy && size === +size) {\n        return /*#__PURE__*/react_default.a.createElement("path", Symbols_extends({}, types_filterProps(this.props, true), {\n          className: classnames_default()(\'recharts-symbols\', className),\n          transform: "translate(".concat(cx, ", ").concat(cy, ")"),\n          d: this.getPath()\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return Symbols;\n}(react["PureComponent"]);\n\nSymbols_Symbols.defaultProps = {\n  type: \'circle\',\n  size: 64,\n  sizeType: \'area\'\n};\n\nSymbols_Symbols.registerSymbol = function (key, factory) {\n  symbolFactories["symbol".concat(upperFirst_default()(key))] = factory;\n};\n\n/* harmony default export */ var shape_Symbols = (Symbols_Symbols);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/DefaultLegendContent.js\nfunction DefaultLegendContent_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { DefaultLegendContent_typeof = function _typeof(obj) { return typeof obj; }; } else { DefaultLegendContent_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return DefaultLegendContent_typeof(obj); }\n\nfunction DefaultLegendContent_extends() { DefaultLegendContent_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return DefaultLegendContent_extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction DefaultLegendContent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction DefaultLegendContent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DefaultLegendContent_createClass(Constructor, protoProps, staticProps) { if (protoProps) DefaultLegendContent_defineProperties(Constructor.prototype, protoProps); if (staticProps) DefaultLegendContent_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction DefaultLegendContent_createSuper(Derived) { return function () { var Super = DefaultLegendContent_getPrototypeOf(Derived), result; if (DefaultLegendContent_isNativeReflectConstruct()) { var NewTarget = DefaultLegendContent_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return DefaultLegendContent_possibleConstructorReturn(this, result); }; }\n\nfunction DefaultLegendContent_possibleConstructorReturn(self, call) { if (call && (DefaultLegendContent_typeof(call) === "object" || typeof call === "function")) { return call; } return DefaultLegendContent_assertThisInitialized(self); }\n\nfunction DefaultLegendContent_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction DefaultLegendContent_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction DefaultLegendContent_getPrototypeOf(o) { DefaultLegendContent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DefaultLegendContent_getPrototypeOf(o); }\n\nfunction DefaultLegendContent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DefaultLegendContent_setPrototypeOf(subClass, superClass); }\n\nfunction DefaultLegendContent_setPrototypeOf(o, p) { DefaultLegendContent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DefaultLegendContent_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Default Legend Content\n */\n\n\n\n\n\nvar SIZE = 32;\n\nvar DefaultLegendContent_DefaultLegendContent = /*#__PURE__*/function (_PureComponent) {\n  DefaultLegendContent_inherits(DefaultLegendContent, _PureComponent);\n\n  var _super = DefaultLegendContent_createSuper(DefaultLegendContent);\n\n  function DefaultLegendContent() {\n    DefaultLegendContent_classCallCheck(this, DefaultLegendContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  DefaultLegendContent_createClass(DefaultLegendContent, [{\n    key: "renderIcon",\n\n    /**\n     * Render the path of icon\n     * @param {Object} data Data of each legend item\n     * @return {String} Path element\n     */\n    value: function renderIcon(data) {\n      var inactiveColor = this.props.inactiveColor;\n      var halfSize = SIZE / 2;\n      var sixthSize = SIZE / 6;\n      var thirdSize = SIZE / 3;\n      var color = data.inactive ? inactiveColor : data.color;\n\n      if (data.type === \'plainline\') {\n        return /*#__PURE__*/react_default.a.createElement("line", {\n          strokeWidth: 4,\n          fill: "none",\n          stroke: color,\n          strokeDasharray: data.payload.strokeDasharray,\n          x1: 0,\n          y1: halfSize,\n          x2: SIZE,\n          y2: halfSize,\n          className: "recharts-legend-icon"\n        });\n      }\n\n      if (data.type === \'line\') {\n        return /*#__PURE__*/react_default.a.createElement("path", {\n          strokeWidth: 4,\n          fill: "none",\n          stroke: color,\n          d: "M0,".concat(halfSize, "h").concat(thirdSize, "\\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(2 * thirdSize, ",").concat(halfSize, "\\n            H").concat(SIZE, "M").concat(2 * thirdSize, ",").concat(halfSize, "\\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(thirdSize, ",").concat(halfSize),\n          className: "recharts-legend-icon"\n        });\n      }\n\n      if (data.type === \'rect\') {\n        return /*#__PURE__*/react_default.a.createElement("path", {\n          stroke: "none",\n          fill: color,\n          d: "M0,".concat(SIZE / 8, "h").concat(SIZE, "v").concat(SIZE * 3 / 4, "h").concat(-SIZE, "z"),\n          className: "recharts-legend-icon"\n        });\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(shape_Symbols, {\n        fill: color,\n        cx: halfSize,\n        cy: halfSize,\n        size: SIZE,\n        sizeType: "diameter",\n        type: data.type\n      });\n    }\n    /**\n     * Draw items of legend\n     * @return {ReactElement} Items\n     */\n\n  }, {\n    key: "renderItems",\n    value: function renderItems() {\n      var _this = this;\n\n      var _this$props = this.props,\n          payload = _this$props.payload,\n          iconSize = _this$props.iconSize,\n          layout = _this$props.layout,\n          formatter = _this$props.formatter,\n          inactiveColor = _this$props.inactiveColor;\n      var viewBox = {\n        x: 0,\n        y: 0,\n        width: SIZE,\n        height: SIZE\n      };\n      var itemStyle = {\n        display: layout === \'horizontal\' ? \'inline-block\' : \'block\',\n        marginRight: 10\n      };\n      var svgStyle = {\n        display: \'inline-block\',\n        verticalAlign: \'middle\',\n        marginRight: 4\n      };\n      return payload.map(function (entry, i) {\n        var _classNames;\n\n        var finalFormatter = entry.formatter || formatter;\n        var className = classnames_default()((_classNames = {\n          \'recharts-legend-item\': true\n        }, _defineProperty(_classNames, "legend-item-".concat(i), true), _defineProperty(_classNames, "inactive", entry.inactive), _classNames));\n\n        if (entry.type === \'none\') {\n          return null;\n        }\n\n        var color = entry.inactive ? inactiveColor : entry.color;\n        return /*#__PURE__*/react_default.a.createElement("li", DefaultLegendContent_extends({\n          className: className,\n          style: itemStyle,\n          key: "legend-item-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }, types_adaptEventsOfChild(_this.props, entry, i)), /*#__PURE__*/react_default.a.createElement(container_Surface, {\n          width: iconSize,\n          height: iconSize,\n          viewBox: viewBox,\n          style: svgStyle\n        }, _this.renderIcon(entry)), /*#__PURE__*/react_default.a.createElement("span", {\n          className: "recharts-legend-item-text",\n          style: {\n            color: color\n          }\n        }, finalFormatter ? finalFormatter(entry.value, entry, i) : entry.value));\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props2 = this.props,\n          payload = _this$props2.payload,\n          layout = _this$props2.layout,\n          align = _this$props2.align;\n\n      if (!payload || !payload.length) {\n        return null;\n      }\n\n      var finalStyle = {\n        padding: 0,\n        margin: 0,\n        textAlign: layout === \'horizontal\' ? align : \'left\'\n      };\n      return /*#__PURE__*/react_default.a.createElement("ul", {\n        className: "recharts-default-legend",\n        style: finalStyle\n      }, this.renderItems());\n    }\n  }]);\n\n  return DefaultLegendContent;\n}(react["PureComponent"]);\n\nDefaultLegendContent_DefaultLegendContent.displayName = \'Legend\';\nDefaultLegendContent_DefaultLegendContent.defaultProps = {\n  iconSize: 14,\n  layout: \'horizontal\',\n  align: \'center\',\n  verticalAlign: \'middle\',\n  inactiveColor: \'#ccc\'\n};\n/* harmony default export */ var component_DefaultLegendContent = (DefaultLegendContent_DefaultLegendContent);\n// EXTERNAL MODULE: ./node_modules/lodash/get.js\nvar get = __webpack_require__("mwIZ");\nvar get_default = /*#__PURE__*/__webpack_require__.n(get);\n\n// EXTERNAL MODULE: ./node_modules/lodash/isArray.js\nvar isArray = __webpack_require__("Z0cm");\nvar isArray_default = /*#__PURE__*/__webpack_require__.n(isArray);\n\n// EXTERNAL MODULE: ./node_modules/lodash/isNaN.js\nvar lodash_isNaN = __webpack_require__("GODc");\nvar isNaN_default = /*#__PURE__*/__webpack_require__.n(lodash_isNaN);\n\n// EXTERNAL MODULE: ./node_modules/lodash/isNumber.js\nvar lodash_isNumber = __webpack_require__("UB5X");\nvar isNumber_default = /*#__PURE__*/__webpack_require__.n(lodash_isNumber);\n\n// EXTERNAL MODULE: ./node_modules/lodash/isString.js\nvar isString = __webpack_require__("4qC0");\nvar isString_default = /*#__PURE__*/__webpack_require__.n(isString);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/DataUtils.js\n\n\n\n\n\nvar mathSign = function mathSign(value) {\n  if (value === 0) {\n    return 0;\n  }\n\n  if (value > 0) {\n    return 1;\n  }\n\n  return -1;\n};\nvar DataUtils_isPercent = function isPercent(value) {\n  return isString_default()(value) && value.indexOf(\'%\') === value.length - 1;\n};\nvar DataUtils_isNumber = function isNumber(value) {\n  return isNumber_default()(value) && !isNaN_default()(value);\n};\nvar DataUtils_isNumOrStr = function isNumOrStr(value) {\n  return DataUtils_isNumber(value) || isString_default()(value);\n};\nvar idCounter = 0;\nvar uniqueId = function uniqueId(prefix) {\n  var id = ++idCounter;\n  return "".concat(prefix || \'\').concat(id);\n};\n/**\n * Get percent value of a total value\n * @param {Number|String} percent A percent\n * @param {Number} totalValue     Total value\n * @param {NUmber} defaultValue   The value returned when percent is undefined or invalid\n * @param {Boolean} validate      If set to be true, the result will be validated\n * @return {Number} value\n */\n\nvar DataUtils_getPercentValue = function getPercentValue(percent, totalValue) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!DataUtils_isNumber(percent) && !isString_default()(percent)) {\n    return defaultValue;\n  }\n\n  var value;\n\n  if (DataUtils_isPercent(percent)) {\n    var index = percent.indexOf(\'%\');\n    value = totalValue * parseFloat(percent.slice(0, index)) / 100;\n  } else {\n    value = +percent;\n  }\n\n  if (isNaN_default()(value)) {\n    value = defaultValue;\n  }\n\n  if (validate && value > totalValue) {\n    value = totalValue;\n  }\n\n  return value;\n};\nvar getAnyElementOfObject = function getAnyElementOfObject(obj) {\n  if (!obj) {\n    return null;\n  }\n\n  var keys = Object.keys(obj);\n\n  if (keys && keys.length) {\n    return obj[keys[0]];\n  }\n\n  return null;\n};\nvar DataUtils_hasDuplicate = function hasDuplicate(ary) {\n  if (!isArray_default()(ary)) {\n    return false;\n  }\n\n  var len = ary.length;\n  var cache = {};\n\n  for (var i = 0; i < len; i++) {\n    if (!cache[ary[i]]) {\n      cache[ary[i]] = true;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n};\nvar interpolateNumber = function interpolateNumber(numberA, numberB) {\n  if (DataUtils_isNumber(numberA) && DataUtils_isNumber(numberB)) {\n    return function (t) {\n      return numberA + t * (numberB - numberA);\n    };\n  }\n\n  return function () {\n    return numberB;\n  };\n};\nfunction findEntryInArray(ary, specifiedKey, specifiedValue) {\n  if (!ary || !ary.length) {\n    return null;\n  }\n\n  return ary.find(function (entry) {\n    return entry && (typeof specifiedKey === \'function\' ? specifiedKey(entry) : get_default()(entry, specifiedKey)) === specifiedValue;\n  });\n}\n/**\n * The least square linear regression\n * @param {Array} data The array of points\n * @returns {Object} The domain of x, and the parameter of linear function\n */\n\nvar getLinearRegression = function getLinearRegression(data) {\n  if (!data || !data.length) {\n    return null;\n  }\n\n  var len = data.length;\n  var xsum = 0;\n  var ysum = 0;\n  var xysum = 0;\n  var xxsum = 0;\n  var xmin = Infinity;\n  var xmax = -Infinity;\n\n  for (var i = 0; i < len; i++) {\n    xsum += data[i].cx;\n    ysum += data[i].cy;\n    xysum += data[i].cx * data[i].cy;\n    xxsum += data[i].cx * data[i].cx;\n    xmin = Math.min(xmin, data[i].cx);\n    xmax = Math.max(xmax, data[i].cx);\n  }\n\n  var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;\n  return {\n    xmin: xmin,\n    xmax: xmax,\n    a: a,\n    b: (ysum - a * xsum) / len\n  };\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/Legend.js\n\n\n\nfunction Legend_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Legend_typeof = function _typeof(obj) { return typeof obj; }; } else { Legend_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Legend_typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Legend_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Legend_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Legend_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Legend_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Legend_createClass(Constructor, protoProps, staticProps) { if (protoProps) Legend_defineProperties(Constructor.prototype, protoProps); if (staticProps) Legend_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Legend_createSuper(Derived) { return function () { var Super = Legend_getPrototypeOf(Derived), result; if (Legend_isNativeReflectConstruct()) { var NewTarget = Legend_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Legend_possibleConstructorReturn(this, result); }; }\n\nfunction Legend_possibleConstructorReturn(self, call) { if (call && (Legend_typeof(call) === "object" || typeof call === "function")) { return call; } return Legend_assertThisInitialized(self); }\n\nfunction Legend_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Legend_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Legend_getPrototypeOf(o) { Legend_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Legend_getPrototypeOf(o); }\n\nfunction Legend_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Legend_setPrototypeOf(subClass, superClass); }\n\nfunction Legend_setPrototypeOf(o, p) { Legend_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Legend_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Legend\n */\n\n\n\n\nfunction defaultUniqBy(entry) {\n  return entry.value;\n}\n\nfunction getUniqPayload(option, payload) {\n  if (option === true) {\n    return uniqBy_default()(payload, defaultUniqBy);\n  }\n\n  if (isFunction_default()(option)) {\n    return uniqBy_default()(payload, option);\n  }\n\n  return payload;\n}\n\nfunction Legend_renderContent(content, props) {\n  if (react_default.a.isValidElement(content)) {\n    return react_default.a.cloneElement(content, props);\n  }\n\n  if (isFunction_default()(content)) {\n    return react_default.a.createElement(content, props);\n  }\n\n  return /*#__PURE__*/react_default.a.createElement(component_DefaultLegendContent, props);\n}\n\nvar EPS = 1;\n\nvar Legend_Legend = /*#__PURE__*/function (_PureComponent) {\n  Legend_inherits(Legend, _PureComponent);\n\n  var _super = Legend_createSuper(Legend);\n\n  function Legend() {\n    var _this;\n\n    Legend_classCallCheck(this, Legend);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.wrapperNode = void 0;\n    _this.state = {\n      boxWidth: -1,\n      boxHeight: -1\n    };\n    return _this;\n  }\n\n  Legend_createClass(Legend, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.updateBBox();\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate() {\n      this.updateBBox();\n    }\n  }, {\n    key: "getBBox",\n    value: function getBBox() {\n      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {\n        return this.wrapperNode.getBoundingClientRect();\n      }\n\n      return null;\n    }\n  }, {\n    key: "getBBoxSnapshot",\n    value: function getBBoxSnapshot() {\n      var _this$state = this.state,\n          boxWidth = _this$state.boxWidth,\n          boxHeight = _this$state.boxHeight;\n\n      if (boxWidth >= 0 && boxHeight >= 0) {\n        return {\n          width: boxWidth,\n          height: boxHeight\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: "getDefaultPosition",\n    value: function getDefaultPosition(style) {\n      var _this$props = this.props,\n          layout = _this$props.layout,\n          align = _this$props.align,\n          verticalAlign = _this$props.verticalAlign,\n          margin = _this$props.margin,\n          chartWidth = _this$props.chartWidth,\n          chartHeight = _this$props.chartHeight;\n      var hPos, vPos;\n\n      if (!style || (style.left === undefined || style.left === null) && (style.right === undefined || style.right === null)) {\n        if (align === \'center\' && layout === \'vertical\') {\n          var _box = this.getBBoxSnapshot() || {\n            width: 0\n          };\n\n          hPos = {\n            left: ((chartWidth || 0) - _box.width) / 2\n          };\n        } else {\n          hPos = align === \'right\' ? {\n            right: margin && margin.right || 0\n          } : {\n            left: margin && margin.left || 0\n          };\n        }\n      }\n\n      if (!style || (style.top === undefined || style.top === null) && (style.bottom === undefined || style.bottom === null)) {\n        if (verticalAlign === \'middle\') {\n          var _box2 = this.getBBoxSnapshot() || {\n            height: 0\n          };\n\n          vPos = {\n            top: ((chartHeight || 0) - _box2.height) / 2\n          };\n        } else {\n          vPos = verticalAlign === \'bottom\' ? {\n            bottom: margin && margin.bottom || 0\n          } : {\n            top: margin && margin.top || 0\n          };\n        }\n      }\n\n      return _objectSpread({}, hPos, {}, vPos);\n    }\n  }, {\n    key: "updateBBox",\n    value: function updateBBox() {\n      var _this$state2 = this.state,\n          boxWidth = _this$state2.boxWidth,\n          boxHeight = _this$state2.boxHeight;\n      var onBBoxUpdate = this.props.onBBoxUpdate;\n\n      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {\n        var _box3 = this.wrapperNode.getBoundingClientRect();\n\n        if (Math.abs(_box3.width - boxWidth) > EPS || Math.abs(_box3.height - boxHeight) > EPS) {\n          this.setState({\n            boxWidth: _box3.width,\n            boxHeight: _box3.height\n          }, function () {\n            if (onBBoxUpdate) {\n              onBBoxUpdate(_box3);\n            }\n          });\n        }\n      } else if (boxWidth !== -1 || boxHeight !== -1) {\n        this.setState({\n          boxWidth: -1,\n          boxHeight: -1\n        }, function () {\n          if (onBBoxUpdate) {\n            onBBoxUpdate(null);\n          }\n        });\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          content = _this$props2.content,\n          width = _this$props2.width,\n          height = _this$props2.height,\n          wrapperStyle = _this$props2.wrapperStyle,\n          payloadUniqBy = _this$props2.payloadUniqBy,\n          payload = _this$props2.payload;\n\n      var outerStyle = _objectSpread({\n        position: \'absolute\',\n        width: width || \'auto\',\n        height: height || \'auto\'\n      }, this.getDefaultPosition(wrapperStyle), {}, wrapperStyle);\n\n      return /*#__PURE__*/react_default.a.createElement("div", {\n        className: "recharts-legend-wrapper",\n        style: outerStyle,\n        ref: function ref(node) {\n          _this2.wrapperNode = node;\n        }\n      }, Legend_renderContent(content, _objectSpread({}, this.props, {\n        payload: getUniqPayload(payloadUniqBy, payload)\n      })));\n    }\n  }], [{\n    key: "getWithHeight",\n    value: function getWithHeight(item, chartWidth) {\n      var layout = item.props.layout;\n\n      if (layout === \'vertical\' && DataUtils_isNumber(item.props.height)) {\n        return {\n          height: item.props.height\n        };\n      }\n\n      if (layout === \'horizontal\') {\n        return {\n          width: item.props.width || chartWidth\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Legend;\n}(react["PureComponent"]);\n\nLegend_Legend.displayName = \'Legend\';\nLegend_Legend.defaultProps = {\n  iconSize: 14,\n  layout: \'horizontal\',\n  align: \'center\',\n  verticalAlign: \'bottom\'\n};\n/* harmony default export */ var component_Legend = (Legend_Legend);\n// EXTERNAL MODULE: ./node_modules/lodash/isNil.js\nvar isNil = __webpack_require__("J2iB");\nvar isNil_default = /*#__PURE__*/__webpack_require__.n(isNil);\n\n// EXTERNAL MODULE: ./node_modules/react-smooth/es6/index.js + 8 modules\nvar es6 = __webpack_require__("hCD6");\n\n// EXTERNAL MODULE: ./node_modules/lodash/sortBy.js\nvar sortBy = __webpack_require__("xweI");\nvar sortBy_default = /*#__PURE__*/__webpack_require__.n(sortBy);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/DefaultTooltipContent.js\n\n\n\n\nfunction DefaultTooltipContent_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { DefaultTooltipContent_typeof = function _typeof(obj) { return typeof obj; }; } else { DefaultTooltipContent_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return DefaultTooltipContent_typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction DefaultTooltipContent_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction DefaultTooltipContent_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { DefaultTooltipContent_ownKeys(Object(source), true).forEach(function (key) { DefaultTooltipContent_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { DefaultTooltipContent_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction DefaultTooltipContent_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction DefaultTooltipContent_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction DefaultTooltipContent_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DefaultTooltipContent_createClass(Constructor, protoProps, staticProps) { if (protoProps) DefaultTooltipContent_defineProperties(Constructor.prototype, protoProps); if (staticProps) DefaultTooltipContent_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction DefaultTooltipContent_createSuper(Derived) { return function () { var Super = DefaultTooltipContent_getPrototypeOf(Derived), result; if (DefaultTooltipContent_isNativeReflectConstruct()) { var NewTarget = DefaultTooltipContent_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return DefaultTooltipContent_possibleConstructorReturn(this, result); }; }\n\nfunction DefaultTooltipContent_possibleConstructorReturn(self, call) { if (call && (DefaultTooltipContent_typeof(call) === "object" || typeof call === "function")) { return call; } return DefaultTooltipContent_assertThisInitialized(self); }\n\nfunction DefaultTooltipContent_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction DefaultTooltipContent_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction DefaultTooltipContent_getPrototypeOf(o) { DefaultTooltipContent_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DefaultTooltipContent_getPrototypeOf(o); }\n\nfunction DefaultTooltipContent_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) DefaultTooltipContent_setPrototypeOf(subClass, superClass); }\n\nfunction DefaultTooltipContent_setPrototypeOf(o, p) { DefaultTooltipContent_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DefaultTooltipContent_setPrototypeOf(o, p); }\n\n\n\n\n\nfunction defaultFormatter(value) {\n  return isArray_default()(value) && DataUtils_isNumOrStr(value[0]) && DataUtils_isNumOrStr(value[1]) ? value.join(\' ~ \') : value;\n}\n\nvar DefaultTooltipContent_DefaultTooltipContent = /*#__PURE__*/function (_PureComponent) {\n  DefaultTooltipContent_inherits(DefaultTooltipContent, _PureComponent);\n\n  var _super = DefaultTooltipContent_createSuper(DefaultTooltipContent);\n\n  function DefaultTooltipContent() {\n    DefaultTooltipContent_classCallCheck(this, DefaultTooltipContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  DefaultTooltipContent_createClass(DefaultTooltipContent, [{\n    key: "renderContent",\n    value: function renderContent() {\n      var _this$props = this.props,\n          payload = _this$props.payload,\n          separator = _this$props.separator,\n          formatter = _this$props.formatter,\n          itemStyle = _this$props.itemStyle,\n          itemSorter = _this$props.itemSorter;\n\n      if (payload && payload.length) {\n        var listStyle = {\n          padding: 0,\n          margin: 0\n        };\n        var items = (itemSorter ? sortBy_default()(payload, itemSorter) : payload).map(function (entry, i) {\n          if (entry.type === \'none\') {\n            return null;\n          }\n\n          var finalItemStyle = DefaultTooltipContent_objectSpread({\n            display: \'block\',\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: entry.color || \'#000\'\n          }, itemStyle);\n\n          var finalFormatter = entry.formatter || formatter || defaultFormatter;\n          var name = entry.name,\n              value = entry.value;\n\n          if (finalFormatter) {\n            var formatted = finalFormatter(value, name, entry, i, payload);\n\n            if (Array.isArray(formatted)) {\n              var _formatted = _slicedToArray(formatted, 2);\n\n              value = _formatted[0];\n              name = _formatted[1];\n            } else {\n              value = formatted;\n            }\n          }\n\n          return (\n            /*#__PURE__*/\n            // eslint-disable-next-line react/no-array-index-key\n            react_default.a.createElement("li", {\n              className: "recharts-tooltip-item",\n              key: "tooltip-item-".concat(i),\n              style: finalItemStyle\n            }, DataUtils_isNumOrStr(name) ? /*#__PURE__*/react_default.a.createElement("span", {\n              className: "recharts-tooltip-item-name"\n            }, name) : null, DataUtils_isNumOrStr(name) ? /*#__PURE__*/react_default.a.createElement("span", {\n              className: "recharts-tooltip-item-separator"\n            }, separator) : null, /*#__PURE__*/react_default.a.createElement("span", {\n              className: "recharts-tooltip-item-value"\n            }, value), /*#__PURE__*/react_default.a.createElement("span", {\n              className: "recharts-tooltip-item-unit"\n            }, entry.unit || \'\'))\n          );\n        });\n        return /*#__PURE__*/react_default.a.createElement("ul", {\n          className: "recharts-tooltip-item-list",\n          style: listStyle\n        }, items);\n      }\n\n      return null;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props2 = this.props,\n          wrapperClassName = _this$props2.wrapperClassName,\n          contentStyle = _this$props2.contentStyle,\n          labelClassName = _this$props2.labelClassName,\n          labelStyle = _this$props2.labelStyle,\n          label = _this$props2.label,\n          labelFormatter = _this$props2.labelFormatter,\n          payload = _this$props2.payload;\n\n      var finalStyle = DefaultTooltipContent_objectSpread({\n        margin: 0,\n        padding: 10,\n        backgroundColor: \'#fff\',\n        border: \'1px solid #ccc\',\n        whiteSpace: \'nowrap\'\n      }, contentStyle);\n\n      var finalLabelStyle = DefaultTooltipContent_objectSpread({\n        margin: 0\n      }, labelStyle);\n\n      var hasLabel = !isNil_default()(label);\n      var finalLabel = hasLabel ? label : \'\';\n      var wrapperCN = classnames_default()(\'recharts-default-tooltip\', wrapperClassName);\n      var labelCN = classnames_default()(\'recharts-tooltip-label\', labelClassName);\n\n      if (hasLabel && labelFormatter) {\n        finalLabel = labelFormatter(label, payload);\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("div", {\n        className: wrapperCN,\n        style: finalStyle\n      }, /*#__PURE__*/react_default.a.createElement("p", {\n        className: labelCN,\n        style: finalLabelStyle\n      }, react_default.a.isValidElement(finalLabel) ? finalLabel : "".concat(finalLabel)), this.renderContent());\n    }\n  }]);\n\n  return DefaultTooltipContent;\n}(react["PureComponent"]);\n\nDefaultTooltipContent_DefaultTooltipContent.displayName = \'DefaultTooltipContent\';\nDefaultTooltipContent_DefaultTooltipContent.defaultProps = {\n  separator: \' : \',\n  contentStyle: {},\n  itemStyle: {},\n  labelStyle: {}\n};\n/* harmony default export */ var component_DefaultTooltipContent = (DefaultTooltipContent_DefaultTooltipContent);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/Global.js\nvar parseIsSsrByDefault = function parseIsSsrByDefault() {\n  return !(typeof window !== \'undefined\' && window.document && window.document.createElement && window.setTimeout);\n};\n\nvar Global = {\n  isSsr: parseIsSsrByDefault(),\n  get: function get(key) {\n    return Global[key];\n  },\n  set: function set(key, value) {\n    if (typeof key === \'string\') {\n      Global[key] = value;\n    } else {\n      var keys = Object.keys(key);\n\n      if (keys && keys.length) {\n        keys.forEach(function (k) {\n          Global[k] = key[k];\n        });\n      }\n    }\n  }\n};\n/* harmony default export */ var util_Global = (Global);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/Tooltip.js\n\n\n\n\nfunction Tooltip_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Tooltip_typeof = function _typeof(obj) { return typeof obj; }; } else { Tooltip_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Tooltip_typeof(obj); }\n\nfunction Tooltip_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Tooltip_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Tooltip_ownKeys(Object(source), true).forEach(function (key) { Tooltip_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Tooltip_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Tooltip_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Tooltip_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Tooltip_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Tooltip_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tooltip_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tooltip_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Tooltip_createSuper(Derived) { return function () { var Super = Tooltip_getPrototypeOf(Derived), result; if (Tooltip_isNativeReflectConstruct()) { var NewTarget = Tooltip_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Tooltip_possibleConstructorReturn(this, result); }; }\n\nfunction Tooltip_possibleConstructorReturn(self, call) { if (call && (Tooltip_typeof(call) === "object" || typeof call === "function")) { return call; } return Tooltip_assertThisInitialized(self); }\n\nfunction Tooltip_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Tooltip_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Tooltip_getPrototypeOf(o) { Tooltip_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Tooltip_getPrototypeOf(o); }\n\nfunction Tooltip_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Tooltip_setPrototypeOf(subClass, superClass); }\n\nfunction Tooltip_setPrototypeOf(o, p) { Tooltip_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Tooltip_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Tooltip\n */\n\n\n\n\n\n\nvar CLS_PREFIX = \'recharts-tooltip-wrapper\';\nvar Tooltip_EPS = 1;\n\nfunction Tooltip_defaultUniqBy(entry) {\n  return entry.dataKey;\n}\n\nfunction Tooltip_getUniqPayload(option, payload) {\n  if (option === true) {\n    return uniqBy_default()(payload, Tooltip_defaultUniqBy);\n  }\n\n  if (isFunction_default()(option)) {\n    return uniqBy_default()(payload, option);\n  }\n\n  return payload;\n}\n\nfunction Tooltip_renderContent(content, props) {\n  if (react_default.a.isValidElement(content)) {\n    return react_default.a.cloneElement(content, props);\n  }\n\n  if (isFunction_default()(content)) {\n    return react_default.a.createElement(content, props);\n  }\n\n  return /*#__PURE__*/react_default.a.createElement(component_DefaultTooltipContent, props);\n}\n\nvar Tooltip_Tooltip = /*#__PURE__*/function (_PureComponent) {\n  Tooltip_inherits(Tooltip, _PureComponent);\n\n  var _super = Tooltip_createSuper(Tooltip);\n\n  function Tooltip() {\n    var _this;\n\n    Tooltip_classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      boxWidth: -1,\n      boxHeight: -1\n    };\n    _this.wrapperNode = void 0;\n\n    _this.getTranslate = function (_ref) {\n      var key = _ref.key,\n          tooltipDimension = _ref.tooltipDimension,\n          viewBoxDimension = _ref.viewBoxDimension;\n      var _this$props = _this.props,\n          allowEscapeViewBox = _this$props.allowEscapeViewBox,\n          coordinate = _this$props.coordinate,\n          offset = _this$props.offset,\n          position = _this$props.position,\n          viewBox = _this$props.viewBox;\n\n      if (position && DataUtils_isNumber(position[key])) {\n        return position[key];\n      }\n\n      var restricted = coordinate[key] - tooltipDimension - offset;\n      var unrestricted = coordinate[key] + offset;\n\n      if (allowEscapeViewBox[key]) {\n        return unrestricted;\n      }\n\n      var tooltipBoundary = coordinate[key] + tooltipDimension + offset;\n      var viewBoxBoundary = viewBox[key] + viewBoxDimension;\n\n      if (tooltipBoundary > viewBoxBoundary) {\n        return Math.max(restricted, viewBox[key]);\n      }\n\n      return Math.max(unrestricted, viewBox[key]);\n    };\n\n    return _this;\n  }\n\n  Tooltip_createClass(Tooltip, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.updateBBox();\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate() {\n      this.updateBBox();\n    }\n  }, {\n    key: "updateBBox",\n    value: function updateBBox() {\n      var _this$state = this.state,\n          boxWidth = _this$state.boxWidth,\n          boxHeight = _this$state.boxHeight;\n\n      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {\n        var box = this.wrapperNode.getBoundingClientRect();\n\n        if (Math.abs(box.width - boxWidth) > Tooltip_EPS || Math.abs(box.height - boxHeight) > Tooltip_EPS) {\n          this.setState({\n            boxWidth: box.width,\n            boxHeight: box.height\n          });\n        }\n      } else if (boxWidth !== -1 || boxHeight !== -1) {\n        this.setState({\n          boxWidth: -1,\n          boxHeight: -1\n        });\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _classNames,\n          _this2 = this;\n\n      var _this$props2 = this.props,\n          payload = _this$props2.payload,\n          isAnimationActive = _this$props2.isAnimationActive,\n          animationDuration = _this$props2.animationDuration,\n          animationEasing = _this$props2.animationEasing,\n          filterNull = _this$props2.filterNull,\n          payloadUniqBy = _this$props2.payloadUniqBy;\n      var finalPayload = Tooltip_getUniqPayload(payloadUniqBy, filterNull && payload && payload.length ? payload.filter(function (entry) {\n        return !isNil_default()(entry.value);\n      }) : payload);\n      var hasPayload = finalPayload && finalPayload.length;\n      var _this$props3 = this.props,\n          content = _this$props3.content,\n          viewBox = _this$props3.viewBox,\n          coordinate = _this$props3.coordinate,\n          position = _this$props3.position,\n          active = _this$props3.active,\n          wrapperStyle = _this$props3.wrapperStyle;\n\n      var outerStyle = Tooltip_objectSpread({\n        pointerEvents: \'none\',\n        visibility: active && hasPayload ? \'visible\' : \'hidden\',\n        position: \'absolute\',\n        top: 0,\n        left: 0\n      }, wrapperStyle);\n\n      var translateX, translateY;\n\n      if (position && DataUtils_isNumber(position.x) && DataUtils_isNumber(position.y)) {\n        translateX = position.x;\n        translateY = position.y;\n      } else {\n        var _this$state2 = this.state,\n            boxWidth = _this$state2.boxWidth,\n            boxHeight = _this$state2.boxHeight;\n\n        if (boxWidth > 0 && boxHeight > 0 && coordinate) {\n          translateX = this.getTranslate({\n            key: \'x\',\n            tooltipDimension: boxWidth,\n            viewBoxDimension: viewBox.width\n          });\n          translateY = this.getTranslate({\n            key: \'y\',\n            tooltipDimension: boxHeight,\n            viewBoxDimension: viewBox.height\n          });\n        } else {\n          outerStyle.visibility = \'hidden\';\n        }\n      }\n\n      outerStyle = Tooltip_objectSpread({}, Object(es6["b" /* translateStyle */])({\n        transform: this.props.useTranslate3d ? "translate3d(".concat(translateX, "px, ").concat(translateY, "px, 0)") : "translate(".concat(translateX, "px, ").concat(translateY, "px)")\n      }), {}, outerStyle);\n\n      if (isAnimationActive && active) {\n        outerStyle = Tooltip_objectSpread({}, Object(es6["b" /* translateStyle */])({\n          transition: "transform ".concat(animationDuration, "ms ").concat(animationEasing)\n        }), {}, outerStyle);\n      }\n\n      var cls = classnames_default()(CLS_PREFIX, (_classNames = {}, Tooltip_defineProperty(_classNames, "".concat(CLS_PREFIX, "-right"), DataUtils_isNumber(translateX) && coordinate && DataUtils_isNumber(coordinate.x) && translateX >= coordinate.x), Tooltip_defineProperty(_classNames, "".concat(CLS_PREFIX, "-left"), DataUtils_isNumber(translateX) && coordinate && DataUtils_isNumber(coordinate.x) && translateX < coordinate.x), Tooltip_defineProperty(_classNames, "".concat(CLS_PREFIX, "-bottom"), DataUtils_isNumber(translateY) && coordinate && DataUtils_isNumber(coordinate.y) && translateY >= coordinate.y), Tooltip_defineProperty(_classNames, "".concat(CLS_PREFIX, "-top"), DataUtils_isNumber(translateY) && coordinate && DataUtils_isNumber(coordinate.y) && translateY < coordinate.y), _classNames));\n      return /*#__PURE__*/react_default.a.createElement("div", {\n        className: cls,\n        style: outerStyle,\n        ref: function ref(node) {\n          _this2.wrapperNode = node;\n        }\n      }, Tooltip_renderContent(content, Tooltip_objectSpread({}, this.props, {\n        payload: finalPayload\n      })));\n    }\n  }]);\n\n  return Tooltip;\n}(react["PureComponent"]);\n\nTooltip_Tooltip.displayName = \'Tooltip\';\nTooltip_Tooltip.defaultProps = {\n  active: false,\n  allowEscapeViewBox: {\n    x: false,\n    y: false\n  },\n  offset: 10,\n  viewBox: {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0\n  },\n  coordinate: {\n    x: 0,\n    y: 0\n  },\n  cursorStyle: {},\n  separator: \' : \',\n  wrapperStyle: {},\n  contentStyle: {},\n  itemStyle: {},\n  labelStyle: {},\n  cursor: true,\n  trigger: \'hover\',\n  isAnimationActive: !util_Global.isSsr,\n  animationEasing: \'ease\',\n  animationDuration: 400,\n  filterNull: true,\n  useTranslate3d: false\n};\n/* harmony default export */ var component_Tooltip = (Tooltip_Tooltip);\n// EXTERNAL MODULE: ./node_modules/lodash/debounce.js\nvar debounce = __webpack_require__("sEfC");\nvar debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);\n\n// EXTERNAL MODULE: ./node_modules/react-resize-detector/lib/esm/index.js + 16 modules\nvar esm = __webpack_require__("yUt2");\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/LogUtils.js\n/* eslint no-console: 0 */\nvar isDev = "production" !== \'production\';\nvar warn = function warn(condition, format) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  if (isDev && typeof console !== \'undefined\' && console.warn) {\n    if (format === undefined) {\n      console.warn(\'LogUtils requires an error message argument\');\n    }\n\n    if (!condition) {\n      if (format === undefined) {\n        console.warn(\'Minified exception occurred; use the non-minified dev environment \' + \'for the full error message and additional helpful warnings.\');\n      } else {\n        var argIndex = 0;\n        console.warn(format.replace(/%s/g, function () {\n          return args[argIndex++];\n        }));\n      }\n    }\n  }\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/ResponsiveContainer.js\n\n\nfunction ResponsiveContainer_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { ResponsiveContainer_typeof = function _typeof(obj) { return typeof obj; }; } else { ResponsiveContainer_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return ResponsiveContainer_typeof(obj); }\n\nfunction ResponsiveContainer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction ResponsiveContainer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ResponsiveContainer_createClass(Constructor, protoProps, staticProps) { if (protoProps) ResponsiveContainer_defineProperties(Constructor.prototype, protoProps); if (staticProps) ResponsiveContainer_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ResponsiveContainer_createSuper(Derived) { return function () { var Super = ResponsiveContainer_getPrototypeOf(Derived), result; if (ResponsiveContainer_isNativeReflectConstruct()) { var NewTarget = ResponsiveContainer_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return ResponsiveContainer_possibleConstructorReturn(this, result); }; }\n\nfunction ResponsiveContainer_possibleConstructorReturn(self, call) { if (call && (ResponsiveContainer_typeof(call) === "object" || typeof call === "function")) { return call; } return ResponsiveContainer_assertThisInitialized(self); }\n\nfunction ResponsiveContainer_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction ResponsiveContainer_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ResponsiveContainer_getPrototypeOf(o) { ResponsiveContainer_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return ResponsiveContainer_getPrototypeOf(o); }\n\nfunction ResponsiveContainer_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) ResponsiveContainer_setPrototypeOf(subClass, superClass); }\n\nfunction ResponsiveContainer_setPrototypeOf(o, p) { ResponsiveContainer_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return ResponsiveContainer_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Wrapper component to make charts adapt to the size of parent * DOM\n */\n\n\n\n\n\n\nvar ResponsiveContainer_ResponsiveContainer = /*#__PURE__*/function (_Component) {\n  ResponsiveContainer_inherits(ResponsiveContainer, _Component);\n\n  var _super = ResponsiveContainer_createSuper(ResponsiveContainer);\n\n  function ResponsiveContainer(props) {\n    var _this;\n\n    ResponsiveContainer_classCallCheck(this, ResponsiveContainer);\n\n    _this = _super.call(this, props);\n    _this.handleResize = void 0;\n    _this.mounted = void 0;\n    _this.container = void 0;\n\n    _this.updateDimensionsImmediate = function () {\n      if (!_this.mounted) {\n        return;\n      }\n\n      var newSize = _this.getContainerSize();\n\n      if (newSize) {\n        var _this$state = _this.state,\n            oldWidth = _this$state.containerWidth,\n            oldHeight = _this$state.containerHeight;\n        var containerWidth = newSize.containerWidth,\n            containerHeight = newSize.containerHeight;\n\n        if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n          _this.setState({\n            containerWidth: containerWidth,\n            containerHeight: containerHeight\n          });\n        }\n      }\n    };\n\n    _this.state = {\n      containerWidth: -1,\n      containerHeight: -1\n    };\n    _this.handleResize = props.debounce > 0 ? debounce_default()(_this.updateDimensionsImmediate, props.debounce) : _this.updateDimensionsImmediate;\n    return _this;\n  }\n  /* eslint-disable  react/no-did-mount-set-state */\n\n\n  ResponsiveContainer_createClass(ResponsiveContainer, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.mounted = true;\n      var size = this.getContainerSize();\n\n      if (size) {\n        this.setState(size);\n      }\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: "getContainerSize",\n    value: function getContainerSize() {\n      if (!this.container) {\n        return null;\n      }\n\n      return {\n        containerWidth: this.container.clientWidth,\n        containerHeight: this.container.clientHeight\n      };\n    }\n  }, {\n    key: "renderChart",\n    value: function renderChart() {\n      var _this$state2 = this.state,\n          containerWidth = _this$state2.containerWidth,\n          containerHeight = _this$state2.containerHeight;\n\n      if (containerWidth < 0 || containerHeight < 0) {\n        return null;\n      }\n\n      var _this$props = this.props,\n          aspect = _this$props.aspect,\n          width = _this$props.width,\n          height = _this$props.height,\n          minWidth = _this$props.minWidth,\n          minHeight = _this$props.minHeight,\n          maxHeight = _this$props.maxHeight,\n          children = _this$props.children;\n      warn(DataUtils_isPercent(width) || DataUtils_isPercent(height), "The width(%s) and height(%s) are both fixed numbers,\\n       maybe you don\'t need to use a ResponsiveContainer.", width, height);\n      warn(!aspect || aspect > 0, \'The aspect(%s) must be greater than zero.\', aspect);\n      var calculatedWidth = DataUtils_isPercent(width) ? containerWidth : width;\n      var calculatedHeight = DataUtils_isPercent(height) ? containerHeight : height;\n\n      if (aspect && aspect > 0) {\n        // Preserve the desired aspect ratio\n        if (calculatedWidth) {\n          // Will default to using width for aspect ratio\n          calculatedHeight = calculatedWidth / aspect;\n        } else if (calculatedHeight) {\n          // But we should also take height into consideration\n          calculatedWidth = calculatedHeight * aspect;\n        } // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n\n\n        if (maxHeight && calculatedHeight > maxHeight) {\n          calculatedHeight = maxHeight;\n        }\n      }\n\n      warn(calculatedWidth > 0 || calculatedHeight > 0, "The width(%s) and height(%s) of chart should be greater than 0,\\n       please check the style of container, or the props width(%s) and height(%s),\\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\\n       height and width.", calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect);\n      return react_default.a.cloneElement(children, {\n        width: calculatedWidth,\n        height: calculatedHeight\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          minWidth = _this$props2.minWidth,\n          minHeight = _this$props2.minHeight,\n          width = _this$props2.width,\n          height = _this$props2.height,\n          maxHeight = _this$props2.maxHeight,\n          id = _this$props2.id,\n          className = _this$props2.className;\n      var style = {\n        width: width,\n        height: height,\n        minWidth: minWidth,\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      };\n      return /*#__PURE__*/react_default.a.createElement("div", {\n        id: "".concat(id),\n        className: classnames_default()(\'recharts-responsive-container\', className),\n        style: style,\n        ref: function ref(node) {\n          _this2.container = node;\n        }\n      }, this.renderChart(), /*#__PURE__*/react_default.a.createElement(esm["a" /* default */], {\n        handleWidth: true,\n        handleHeight: true,\n        onResize: this.handleResize\n      }));\n    }\n  }]);\n\n  return ResponsiveContainer;\n}(react["Component"]);\n\nResponsiveContainer_ResponsiveContainer.defaultProps = {\n  width: \'100%\',\n  height: \'100%\',\n  debounce: 0\n};\n/* harmony default export */ var component_ResponsiveContainer = (ResponsiveContainer_ResponsiveContainer);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/Cell.js\n/**\n * @fileOverview Cross\n */\nfunction Cell(props) {\n  return null;\n}\n\nCell.displayName = \'Cell\';\n/* harmony default export */ var component_Cell = (Cell);\n// EXTERNAL MODULE: ./node_modules/reduce-css-calc/dist/index.js\nvar dist = __webpack_require__("LfJQ");\nvar dist_default = /*#__PURE__*/__webpack_require__.n(dist);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/DOMUtils.js\nfunction DOMUtils_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction DOMUtils_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { DOMUtils_ownKeys(Object(source), true).forEach(function (key) { DOMUtils_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { DOMUtils_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction DOMUtils_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || DOMUtils_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction DOMUtils_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return DOMUtils_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DOMUtils_arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return DOMUtils_arrayLikeToArray(arr); }\n\nfunction DOMUtils_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar stringCache = {\n  widthCache: {},\n  cacheCount: 0\n};\nvar MAX_CACHE_NUM = 2000;\nvar SPAN_STYLE = {\n  position: \'absolute\',\n  top: \'-20000px\',\n  left: 0,\n  padding: 0,\n  margin: 0,\n  border: \'none\',\n  whiteSpace: \'pre\'\n};\nvar STYLE_LIST = [\'minWidth\', \'maxWidth\', \'width\', \'minHeight\', \'maxHeight\', \'height\', \'top\', \'left\', \'fontSize\', \'lineHeight\', \'padding\', \'margin\', \'paddingLeft\', \'paddingRight\', \'paddingTop\', \'paddingBottom\', \'marginLeft\', \'marginRight\', \'marginTop\', \'marginBottom\'];\nvar MEASUREMENT_SPAN_ID = \'recharts_measurement_span\';\n\nfunction autoCompleteStyle(name, value) {\n  if (STYLE_LIST.indexOf(name) >= 0 && value === +value) {\n    return "".concat(value, "px");\n  }\n\n  return value;\n}\n\nfunction camelToMiddleLine(text) {\n  var strs = text.split(\'\');\n  var formatStrs = strs.reduce(function (result, entry) {\n    if (entry === entry.toUpperCase()) {\n      return [].concat(_toConsumableArray(result), [\'-\', entry.toLowerCase()]);\n    }\n\n    return [].concat(_toConsumableArray(result), [entry]);\n  }, []);\n  return formatStrs.join(\'\');\n}\n\nvar getStyleString = function getStyleString(style) {\n  return Object.keys(style).reduce(function (result, s) {\n    return "".concat(result).concat(camelToMiddleLine(s), ":").concat(autoCompleteStyle(s, style[s]), ";");\n  }, \'\');\n};\nvar DOMUtils_getStringSize = function getStringSize(text) {\n  var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (text === undefined || text === null || util_Global.isSsr) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var str = "".concat(text);\n  var styleString = getStyleString(style);\n  var cacheKey = "".concat(str, "-").concat(styleString);\n\n  if (stringCache.widthCache[cacheKey]) {\n    return stringCache.widthCache[cacheKey];\n  }\n\n  try {\n    var measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);\n\n    if (!measurementSpan) {\n      measurementSpan = document.createElement(\'span\');\n      measurementSpan.setAttribute(\'id\', MEASUREMENT_SPAN_ID);\n      document.body.appendChild(measurementSpan);\n    } // Need to use CSS Object Model (CSSOM) to be able to comply with Content Security Policy (CSP)\n    // https://en.wikipedia.org/wiki/Content_Security_Policy\n\n\n    var measurementSpanStyle = DOMUtils_objectSpread({}, SPAN_STYLE, {}, style);\n\n    Object.keys(measurementSpanStyle).map(function (styleKey) {\n      measurementSpan.style[styleKey] = measurementSpanStyle[styleKey];\n      return styleKey;\n    });\n    measurementSpan.textContent = str;\n    var rect = measurementSpan.getBoundingClientRect();\n    var result = {\n      width: rect.width,\n      height: rect.height\n    };\n    stringCache.widthCache[cacheKey] = result;\n\n    if (++stringCache.cacheCount > MAX_CACHE_NUM) {\n      stringCache.cacheCount = 0;\n      stringCache.widthCache = {};\n    }\n\n    return result;\n  } catch (e) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n};\nvar getOffset = function getOffset(el) {\n  var html = el.ownerDocument.documentElement;\n  var box = {\n    top: 0,\n    left: 0\n  }; // If we don\'t have gBCR, just use 0,0 rather than error\n  // BlackBerry 5, iOS 3 (original iPhone)\n\n  if (typeof el.getBoundingClientRect !== \'undefined\') {\n    box = el.getBoundingClientRect();\n  }\n\n  return {\n    top: box.top + window.pageYOffset - html.clientTop,\n    left: box.left + window.pageXOffset - html.clientLeft\n  };\n};\n/**\n * Calculate coordinate of cursor in chart\n * @param  {Object} event  Event object\n * @param  {Object} offset The offset of main part in the svg element\n * @return {Object}        {chartX, chartY}\n */\n\nvar calculateChartCoordinate = function calculateChartCoordinate(event, offset) {\n  return {\n    chartX: Math.round(event.pageX - offset.left),\n    chartY: Math.round(event.pageY - offset.top)\n  };\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/Text.js\n\n\nfunction Text_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Text_typeof = function _typeof(obj) { return typeof obj; }; } else { Text_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Text_typeof(obj); }\n\nfunction Text_extends() { Text_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Text_extends.apply(this, arguments); }\n\nfunction Text_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Text_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Text_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Text_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Text_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Text_createClass(Constructor, protoProps, staticProps) { if (protoProps) Text_defineProperties(Constructor.prototype, protoProps); if (staticProps) Text_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Text_createSuper(Derived) { return function () { var Super = Text_getPrototypeOf(Derived), result; if (Text_isNativeReflectConstruct()) { var NewTarget = Text_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Text_possibleConstructorReturn(this, result); }; }\n\nfunction Text_possibleConstructorReturn(self, call) { if (call && (Text_typeof(call) === "object" || typeof call === "function")) { return call; } return Text_assertThisInitialized(self); }\n\nfunction Text_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Text_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Text_getPrototypeOf(o) { Text_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Text_getPrototypeOf(o); }\n\nfunction Text_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Text_setPrototypeOf(subClass, superClass); }\n\nfunction Text_setPrototypeOf(o, p) { Text_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Text_setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\nvar BREAKING_SPACES = /[ \\f\\n\\r\\t\\v\\u2028\\u2029]+/;\n\nvar Text_calculateWordWidths = function calculateWordWidths(props) {\n  try {\n    var words = !isNil_default()(props.children) ? props.children.toString().split(BREAKING_SPACES) : [];\n    var wordsWithComputedWidth = words.map(function (word) {\n      return {\n        word: word,\n        width: DOMUtils_getStringSize(word, props.style).width\n      };\n    });\n    var spaceWidth = DOMUtils_getStringSize("\\xA0", props.style).width;\n    return {\n      wordsWithComputedWidth: wordsWithComputedWidth,\n      spaceWidth: spaceWidth\n    };\n  } catch (e) {\n    return null;\n  }\n};\n\nvar Text_Text = /*#__PURE__*/function (_Component) {\n  Text_inherits(Text, _Component);\n\n  var _super = Text_createSuper(Text);\n\n  function Text(_props) {\n    var _this;\n\n    Text_classCallCheck(this, Text);\n\n    _this = _super.call(this, _props);\n\n    _this.getWordsWithoutCalculate = function (props) {\n      var words = !isNil_default()(props.children) ? props.children.toString().split(BREAKING_SPACES) : [];\n      return [{\n        words: words\n      }];\n    };\n\n    _this.state = {\n      wordsByLines: _this.getWordsByLines(_props, true)\n    };\n    return _this;\n  }\n\n  Text_createClass(Text, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.updateWordsByLines(this.props, true);\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.width !== this.props.width || prevProps.scaleToFit !== this.props.scaleToFit || prevProps.children !== this.props.children || prevProps.style !== this.props.style) {\n        var needCalculate = this.props.children !== prevProps.children || this.props.style !== prevProps.style;\n        this.updateWordsByLines(this.props, needCalculate);\n      }\n    }\n  }, {\n    key: "updateWordsByLines",\n    value: function updateWordsByLines(props, needCalculate) {\n      this.setState({\n        wordsByLines: this.getWordsByLines(props, needCalculate)\n      });\n    }\n  }, {\n    key: "getWordsByLines",\n    value: function getWordsByLines(props, needCalculate) {\n      // Only perform calculations if using features that require them (multiline, scaleToFit)\n      if ((props.width || props.scaleToFit) && !util_Global.isSsr) {\n        var wordsWithComputedWidth, spaceWidth;\n\n        if (needCalculate) {\n          var wordWidths = Text_calculateWordWidths(props);\n\n          if (wordWidths) {\n            var wcw = wordWidths.wordsWithComputedWidth,\n                sw = wordWidths.spaceWidth;\n            wordsWithComputedWidth = wcw;\n            spaceWidth = sw;\n          } else {\n            return this.getWordsWithoutCalculate(props);\n          }\n\n          return this.calculateWordsByLines(wordsWithComputedWidth, spaceWidth, props.width);\n        }\n      }\n\n      return this.getWordsWithoutCalculate(props);\n    }\n  }, {\n    key: "calculateWordsByLines",\n    value: function calculateWordsByLines(wordsWithComputedWidth, spaceWidth, lineWidth) {\n      var scaleToFit = this.props.scaleToFit;\n      return (wordsWithComputedWidth || []).reduce(function (result, _ref) {\n        var word = _ref.word,\n            width = _ref.width;\n        var currentLine = result[result.length - 1];\n\n        if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < lineWidth)) {\n          // Word can be added to an existing line\n          currentLine.words.push(word);\n          currentLine.width += width + spaceWidth;\n        } else {\n          // Add first word to line or word is too long to scaleToFit on existing line\n          var newLine = {\n            words: [word],\n            width: width\n          };\n          result.push(newLine);\n        }\n\n        return result;\n      }, []);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          dx = _this$props.dx,\n          dy = _this$props.dy,\n          textAnchor = _this$props.textAnchor,\n          verticalAnchor = _this$props.verticalAnchor,\n          scaleToFit = _this$props.scaleToFit,\n          angle = _this$props.angle,\n          lineHeight = _this$props.lineHeight,\n          capHeight = _this$props.capHeight,\n          className = _this$props.className,\n          textProps = Text_objectWithoutProperties(_this$props, ["dx", "dy", "textAnchor", "verticalAnchor", "scaleToFit", "angle", "lineHeight", "capHeight", "className"]);\n\n      var wordsByLines = this.state.wordsByLines;\n\n      if (!DataUtils_isNumOrStr(textProps.x) || !DataUtils_isNumOrStr(textProps.y)) {\n        return null;\n      }\n\n      var x = textProps.x + (DataUtils_isNumber(dx) ? dx : 0);\n      var y = textProps.y + (DataUtils_isNumber(dy) ? dy : 0);\n      var startDy;\n\n      switch (verticalAnchor) {\n        case \'start\':\n          startDy = dist_default()("calc(".concat(capHeight, ")"));\n          break;\n\n        case \'middle\':\n          startDy = dist_default()("calc(".concat((wordsByLines.length - 1) / 2, " * -").concat(lineHeight, " + (").concat(capHeight, " / 2))"));\n          break;\n\n        default:\n          startDy = dist_default()("calc(".concat(wordsByLines.length - 1, " * -").concat(lineHeight, ")"));\n          break;\n      }\n\n      var transforms = [];\n\n      if (scaleToFit) {\n        var lineWidth = wordsByLines[0].width;\n        var width = this.props.width;\n        transforms.push("scale(".concat((DataUtils_isNumber(width) ? width / lineWidth : 1) / lineWidth, ")"));\n      }\n\n      if (angle) {\n        transforms.push("rotate(".concat(angle, ", ").concat(x, ", ").concat(y, ")"));\n      }\n\n      if (transforms.length) {\n        textProps.transform = transforms.join(\' \');\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("text", Text_extends({}, types_filterProps(textProps, true), {\n        x: x,\n        y: y,\n        className: classnames_default()(\'recharts-text\', className),\n        textAnchor: textAnchor\n      }), wordsByLines.map(function (line, index) {\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/no-array-index-key\n          react_default.a.createElement("tspan", {\n            x: x,\n            dy: index === 0 ? startDy : lineHeight,\n            key: index\n          }, line.words.join(\' \'))\n        );\n      }));\n    }\n  }]);\n\n  return Text;\n}(react["Component"]);\n\nText_Text.defaultProps = {\n  x: 0,\n  y: 0,\n  lineHeight: \'1em\',\n  capHeight: \'0.71em\',\n  // Magic number from d3\n  scaleToFit: false,\n  textAnchor: \'start\',\n  verticalAnchor: \'end\' // Maintain compat with existing charts / default SVG behavior\n\n};\n/* harmony default export */ var component_Text = (Text_Text);\n// EXTERNAL MODULE: ./node_modules/lodash/flatten.js\nvar flatten = __webpack_require__("TYy9");\nvar flatten_default = /*#__PURE__*/__webpack_require__.n(flatten);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/ShallowEqual.js\nfunction shallowEqual(a, b) {\n  /* eslint-disable no-restricted-syntax */\n  for (var key in a) {\n    if ({}.hasOwnProperty.call(a, key) && (!{}.hasOwnProperty.call(b, key) || a[key] !== b[key])) {\n      return false;\n    }\n  }\n\n  for (var _key in b) {\n    if ({}.hasOwnProperty.call(b, _key) && !{}.hasOwnProperty.call(a, _key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/ReactUtils.js\n\n\n\n\n\n\nfunction ReactUtils_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ReactUtils_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction ReactUtils_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\nvar REACT_BROWSER_EVENT_MAP = {\n  click: \'onClick\',\n  mousedown: \'onMouseDown\',\n  mouseup: \'onMouseUp\',\n  mouseover: \'onMouseOver\',\n  mousemove: \'onMouseMove\',\n  mouseout: \'onMouseOut\',\n  mouseenter: \'onMouseEnter\',\n  mouseleave: \'onMouseLeave\',\n  touchcancel: \'onTouchCancel\',\n  touchend: \'onTouchEnd\',\n  touchmove: \'onTouchMove\',\n  touchstart: \'onTouchStart\'\n};\nvar SCALE_TYPES = [\'auto\', \'linear\', \'pow\', \'sqrt\', \'log\', \'identity\', \'time\', \'band\', \'point\', \'ordinal\', \'quantile\', \'quantize\', \'utc\', \'sequential\', \'threshold\'];\nvar LEGEND_TYPES = [\'plainline\', \'line\', \'square\', \'rect\', \'circle\', \'cross\', \'diamond\', \'star\', \'triangle\', \'wye\', \'none\'];\nvar TOOLTIP_TYPES = [\'none\'];\n/**\n * Get the display name of a component\n * @param  {Object} Comp Specified Component\n * @return {String}      Display name of Component\n */\n\nvar getDisplayName = function getDisplayName(Comp) {\n  if (typeof Comp === \'string\') {\n    return Comp;\n  }\n\n  if (!Comp) {\n    return \'\';\n  }\n\n  return Comp.displayName || Comp.name || \'Component\';\n};\n/*\n * Find and return all matched children by type. `type` can be a React element class or\n * string\n */\n\nvar ReactUtils_findAllByType = function findAllByType(children, type) {\n  var result = [];\n  var types = [];\n\n  if (isArray_default()(type)) {\n    types = type.map(function (t) {\n      return getDisplayName(t);\n    });\n  } else {\n    types = [getDisplayName(type)];\n  }\n\n  react_default.a.Children.forEach(children, function (child) {\n    var childType = get_default()(child, \'type.displayName\') || get_default()(child, \'type.name\');\n\n    if (types.indexOf(childType) !== -1) {\n      result.push(child);\n    }\n  });\n  return result;\n};\n/*\n * Return the first matched child by type, return null otherwise.\n * `type` can be a React element class or string.\n */\n\nvar findChildByType = function findChildByType(children, type) {\n  var result = ReactUtils_findAllByType(children, type);\n  return result && result[0];\n};\n/*\n * Create a new array of children excluding the ones matched the type\n */\n\nvar ReactUtils_withoutType = function withoutType(children, type) {\n  var newChildren = [];\n  var types;\n\n  if (isArray_default()(type)) {\n    types = type.map(function (t) {\n      return getDisplayName(t);\n    });\n  } else {\n    types = [getDisplayName(type)];\n  }\n\n  react_default.a.Children.forEach(children, function (child) {\n    var displayName = get_default()(child, \'type.displayName\');\n\n    if (displayName && types.indexOf(displayName) !== -1) {\n      return;\n    }\n\n    newChildren.push(child);\n  });\n  return newChildren;\n};\n/**\n * validate the width and height props of a chart element\n * @param  {Object} el A chart element\n * @return {Boolean}   true If the props width and height are number, and greater than 0\n */\n\nvar ReactUtils_validateWidthHeight = function validateWidthHeight(el) {\n  if (!el || !el.props) {\n    return false;\n  }\n\n  var _el$props = el.props,\n      width = _el$props.width,\n      height = _el$props.height;\n\n  if (!DataUtils_isNumber(width) || width <= 0 || !DataUtils_isNumber(height) || height <= 0) {\n    return false;\n  }\n\n  return true;\n};\nvar SVG_TAGS = [\'a\', \'altGlyph\', \'altGlyphDef\', \'altGlyphItem\', \'animate\', \'animateColor\', \'animateMotion\', \'animateTransform\', \'circle\', \'clipPath\', \'color-profile\', \'cursor\', \'defs\', \'desc\', \'ellipse\', \'feBlend\', \'feColormatrix\', \'feComponentTransfer\', \'feComposite\', \'feConvolveMatrix\', \'feDiffuseLighting\', \'feDisplacementMap\', \'feDistantLight\', \'feFlood\', \'feFuncA\', \'feFuncB\', \'feFuncG\', \'feFuncR\', \'feGaussianBlur\', \'feImage\', \'feMerge\', \'feMergeNode\', \'feMorphology\', \'feOffset\', \'fePointLight\', \'feSpecularLighting\', \'feSpotLight\', \'feTile\', \'feTurbulence\', \'filter\', \'font\', \'font-face\', \'font-face-format\', \'font-face-name\', \'font-face-url\', \'foreignObject\', \'g\', \'glyph\', \'glyphRef\', \'hkern\', \'image\', \'line\', \'lineGradient\', \'marker\', \'mask\', \'metadata\', \'missing-glyph\', \'mpath\', \'path\', \'pattern\', \'polygon\', \'polyline\', \'radialGradient\', \'rect\', \'script\', \'set\', \'stop\', \'style\', \'svg\', \'switch\', \'symbol\', \'text\', \'textPath\', \'title\', \'tref\', \'tspan\', \'use\', \'view\', \'vkern\'];\n\nvar ReactUtils_isSvgElement = function isSvgElement(child) {\n  return child && child.type && isString_default()(child.type) && SVG_TAGS.indexOf(child.type) >= 0;\n};\n/**\n * Filter all the svg elements of children\n * @param  {Array} children The children of a react element\n * @return {Array}          All the svg elements\n */\n\n\nvar ReactUtils_filterSvgElements = function filterSvgElements(children) {\n  var svgElements = [];\n  react_default.a.Children.forEach(children, function (entry) {\n    if (ReactUtils_isSvgElement(entry)) {\n      svgElements.push(entry);\n    }\n  });\n  return svgElements;\n};\n/**\n * Wether props of children changed\n * @param  {Object} nextChildren The latest children\n * @param  {Object} prevChildren The prev children\n * @return {Boolean}             equal or not\n */\n\nvar ReactUtils_isChildrenEqual = function isChildrenEqual(nextChildren, prevChildren) {\n  if (nextChildren === prevChildren) {\n    return true;\n  }\n\n  if (react["Children"].count(nextChildren) !== react["Children"].count(prevChildren)) {\n    return false;\n  }\n\n  var count = react["Children"].count(nextChildren);\n\n  if (count === 0) {\n    return true;\n  }\n\n  if (count === 1) {\n    // eslint-disable-next-line no-use-before-define,@typescript-eslint/no-use-before-define\n    return ReactUtils_isSingleChildEqual(isArray_default()(nextChildren) ? nextChildren[0] : nextChildren, isArray_default()(prevChildren) ? prevChildren[0] : prevChildren);\n  }\n\n  for (var i = 0; i < count; i++) {\n    var nextChild = nextChildren[i];\n    var prevChild = prevChildren[i];\n\n    if (isArray_default()(nextChild) || isArray_default()(prevChild)) {\n      if (!isChildrenEqual(nextChild, prevChild)) {\n        return false;\n      } // eslint-disable-next-line no-use-before-define,@typescript-eslint/no-use-before-define\n\n    } else if (!ReactUtils_isSingleChildEqual(nextChild, prevChild)) {\n      return false;\n    }\n  }\n\n  return true;\n};\nvar ReactUtils_isSingleChildEqual = function isSingleChildEqual(nextChild, prevChild) {\n  if (isNil_default()(nextChild) && isNil_default()(prevChild)) {\n    return true;\n  }\n\n  if (!isNil_default()(nextChild) && !isNil_default()(prevChild)) {\n    var _ref = nextChild.props || {},\n        nextChildren = _ref.children,\n        nextProps = ReactUtils_objectWithoutProperties(_ref, ["children"]);\n\n    var _ref2 = prevChild.props || {},\n        prevChildren = _ref2.children,\n        prevProps = ReactUtils_objectWithoutProperties(_ref2, ["children"]);\n\n    if (nextChildren && prevChildren) {\n      // eslint-disable-next-line no-use-before-define\n      return shallowEqual(nextProps, prevProps) && ReactUtils_isChildrenEqual(nextChildren, prevChildren);\n    }\n\n    if (!nextChildren && !prevChildren) {\n      return shallowEqual(nextProps, prevProps);\n    }\n\n    return false;\n  }\n\n  return false;\n};\nvar ReactUtils_renderByOrder = function renderByOrder(children, renderMap) {\n  var elements = [];\n  var record = {};\n  react["Children"].forEach(children, function (child, index) {\n    if (ReactUtils_isSvgElement(child)) {\n      elements.push(child);\n    } else if (child) {\n      var displayName = getDisplayName(child.type);\n\n      var _ref3 = renderMap[displayName] || {},\n          handler = _ref3.handler,\n          once = _ref3.once;\n\n      if (handler && (!once || !record[displayName])) {\n        var results = handler(child, displayName, index);\n        elements.push(results);\n        record[displayName] = true;\n      }\n    }\n  });\n  return flatten_default()(elements);\n};\nvar getReactEventByType = function getReactEventByType(e) {\n  var type = e && e.type;\n\n  if (type && REACT_BROWSER_EVENT_MAP[type]) {\n    return REACT_BROWSER_EVENT_MAP[type];\n  }\n\n  return null;\n};\nvar ReactUtils_parseChildIndex = function parseChildIndex(child, children) {\n  var result = -1;\n  react["Children"].forEach(children, function (entry, index) {\n    if (entry === child) {\n      result = index;\n    }\n  });\n  return result;\n};\n// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__("Y+p1");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n\n// EXTERNAL MODULE: ./node_modules/lodash/max.js\nvar lodash_max = __webpack_require__("q92V");\nvar max_default = /*#__PURE__*/__webpack_require__.n(lodash_max);\n\n// EXTERNAL MODULE: ./node_modules/lodash/min.js\nvar lodash_min = __webpack_require__("AE40");\nvar min_default = /*#__PURE__*/__webpack_require__.n(lodash_min);\n\n// EXTERNAL MODULE: ./node_modules/lodash/flatMap.js\nvar flatMap = __webpack_require__("6ajc");\nvar flatMap_default = /*#__PURE__*/__webpack_require__.n(flatMap);\n\n// EXTERNAL MODULE: ./node_modules/recharts-scale/lib/index.js\nvar lib = __webpack_require__("C9rL");\n\n// EXTERNAL MODULE: ./node_modules/d3-scale/src/band.js + 1 modules\nvar band = __webpack_require__("sCaM");\n\n// EXTERNAL MODULE: ./node_modules/d3-scale/src/linear.js\nvar linear = __webpack_require__("VIqg");\n\n// EXTERNAL MODULE: ./node_modules/d3-scale/src/index.js + 37 modules\nvar src = __webpack_require__("ziQ1");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/offset/expand.js\nvar expand = __webpack_require__("GjTP");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/offset/none.js\nvar none = __webpack_require__("0T5i");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/offset/silhouette.js\nvar silhouette = __webpack_require__("NtxT");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/offset/wiggle.js\nvar wiggle = __webpack_require__("8eK0");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/stack.js + 1 modules\nvar src_stack = __webpack_require__("wIsI");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/order/none.js\nvar order_none = __webpack_require__("qqpY");\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/ChartUtils.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ChartUtils_toConsumableArray(arr) { return ChartUtils_arrayWithoutHoles(arr) || ChartUtils_iterableToArray(arr) || ChartUtils_unsupportedIterableToArray(arr) || ChartUtils_nonIterableSpread(); }\n\nfunction ChartUtils_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction ChartUtils_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return ChartUtils_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ChartUtils_arrayLikeToArray(o, minLen); }\n\nfunction ChartUtils_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction ChartUtils_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return ChartUtils_arrayLikeToArray(arr); }\n\nfunction ChartUtils_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ChartUtils_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction ChartUtils_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ChartUtils_ownKeys(Object(source), true).forEach(function (key) { ChartUtils_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ChartUtils_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction ChartUtils_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n // TODO: Cause of circular dependency. Needs refactor.\n// import { RadiusAxisProps, AngleAxisProps } from \'../polar/types\';\n\nfunction getValueByDataKey(obj, dataKey, defaultValue) {\n  if (isNil_default()(obj) || isNil_default()(dataKey)) {\n    return defaultValue;\n  }\n\n  if (DataUtils_isNumOrStr(dataKey)) {\n    return get_default()(obj, dataKey, defaultValue);\n  }\n\n  if (isFunction_default()(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n}\n/**\n * Get domain of data by key\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\nfunction getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = flatMap_default()(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === \'number\') {\n    var domain = flattenData.filter(function (entry) {\n      return DataUtils_isNumber(entry) || parseFloat(entry);\n    });\n    return domain.length ? [min_default()(domain), max_default()(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !isNil_default()(entry);\n  }) : flattenData; // \u652f\u6301Date\u7c7b\u578b\u7684x\u8f74\n\n  return validateData.map(function (entry) {\n    return DataUtils_isNumOrStr(entry) || entry instanceof Date ? entry : \'\';\n  });\n}\nvar ChartUtils_calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === \'angleAxis\' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if (mathSign(cur - before) !== mathSign(after - cur)) {\n          var diffInterval = [];\n\n          if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\nvar getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var _ref = item,\n      displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case \'Line\':\n      result = stroke;\n      break;\n\n    case \'Area\':\n    case \'Radar\':\n      result = stroke && stroke !== \'none\' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n}; // TODO: Formated -> Formatted.\n\nvar ChartUtils_getLegendProps = function getLegendProps(_ref2) {\n  var children = _ref2.children,\n      formatedGraphicalItems = _ref2.formatedGraphicalItems,\n      legendWidth = _ref2.legendWidth,\n      legendContent = _ref2.legendContent;\n  var legendItem = findChildByType(children, component_Legend.displayName);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === \'children\') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref3) {\n      var item = _ref3.item,\n          props = _ref3.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref4) {\n      var item = _ref4.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || \'square\',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return ChartUtils_objectSpread({}, legendItem.props, {}, component_Legend.getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\nvar ChartUtils_getBarSizeList = function getBarSizeList(_ref5) {\n  var globalSize = _ref5.barSize,\n      _ref5$stackGroups = _ref5.stackGroups,\n      stackGroups = _ref5$stackGroups === void 0 ? {} : _ref5$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf(\'Bar\') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: isNil_default()(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Calculate the size of each bar and the gap between two bars\n * @param  {Number} bandSize  The size of each category\n * @param  {sizeList} sizeList  The size of all groups\n * @param  {maxBarSize} maxBarSize The maximum size of bar\n * @return {Number} The size of each bar and the gap between two bars\n */\n\nvar ChartUtils_getBarPosition = function getBarPosition(_ref6) {\n  var barGap = _ref6.barGap,\n      barCategoryGap = _ref6.barCategoryGap,\n      bandSize = _ref6.bandSize,\n      _ref6$sizeList = _ref6.sizeList,\n      sizeList = _ref6$sizeList === void 0 ? [] : _ref6$sizeList,\n      maxBarSize = _ref6.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = DataUtils_getPercentValue(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(ChartUtils_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = DataUtils_getPercentValue(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(ChartUtils_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\nvar ChartUtils_appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0); // const legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n\n  var legendProps = ChartUtils_getLegendProps({\n    children: children,\n    legendWidth: legendWidth\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === \'vertical\' || layout === \'horizontal\' && verticalAlign === \'center\') && DataUtils_isNumber(offset[align])) {\n      newOffset = ChartUtils_objectSpread({}, offset, ChartUtils_defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === \'horizontal\' || layout === \'vertical\' && align === \'center\') && DataUtils_isNumber(offset[verticalAlign])) {\n      newOffset = ChartUtils_objectSpread({}, offset, ChartUtils_defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\nvar ChartUtils_getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = ReactUtils_findAllByType(children, \'ErrorBar\').filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return isNil_default()(direction) || isNil_default()(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = isArray_default()(entryValue) ? [min_default()(entryValue), max_default()(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(isArray_default()(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(isArray_default()(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\nvar ChartUtils_parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return ChartUtils_getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !isNil_default()(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\nvar getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === \'number\' && dataKey) {\n      return ChartUtils_getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === \'number\') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\nvar isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n  return layout === \'horizontal\' && axisType === \'xAxis\' || layout === \'vertical\' && axisType === \'yAxis\' || layout === \'centric\' && axisType === \'angleAxis\' || layout === \'radial\' && axisType === \'radiusAxis\';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks The ticks in axis\n * @param {Number} min   The minimun value of axis\n * @param {Number} max   The maximun value of axis\n * @return {Array}       Coordinates\n */\n\nvar getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\nvar ChartUtils_getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === \'category\' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === \'angleAxis\' ? mathSign(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis is a categorial axis, but the type of axis is number or the scale of axis is not "auto"\n\n\n  if (axis.isCategorical && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\nvar ChartUtils_combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if (isFunction_default()(childHandler)) {\n    customizedHandler = childHandler;\n  } else if (isFunction_default()(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if (isFunction_default()(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if (isFunction_default()(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if (isFunction_default()(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @return {Function}               The scale funcion\n */\n\nvar ChartUtils_parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === \'auto\') {\n    if (layout === \'radial\' && axisType === \'radiusAxis\') {\n      return {\n        scale: band["a" /* default */](),\n        realScaleType: \'band\'\n      };\n    }\n\n    if (layout === \'radial\' && axisType === \'angleAxis\') {\n      return {\n        scale: linear["a" /* default */](),\n        realScaleType: \'linear\'\n      };\n    }\n\n    if (type === \'category\' && chartType && (chartType.indexOf(\'LineChart\') >= 0 || chartType.indexOf(\'AreaChart\') >= 0 || chartType.indexOf(\'ComposedChart\') >= 0)) {\n      return {\n        scale: band["b" /* point */](),\n        realScaleType: \'point\'\n      };\n    }\n\n    if (type === \'category\') {\n      return {\n        scale: band["a" /* default */](),\n        realScaleType: \'band\'\n      };\n    }\n\n    return {\n      scale: linear["a" /* default */](),\n      realScaleType: \'linear\'\n    };\n  }\n\n  if (isString_default()(scale)) {\n    var name = "scale".concat(upperFirst_default()(scale));\n    return {\n      scale: (src[name] || band["b" /* point */])(),\n      realScaleType: src[name] ? name : \'point\'\n    };\n  }\n\n  return isFunction_default()(scale) ? {\n    scale: scale\n  } : {\n    scale: band["b" /* point */](),\n    realScaleType: \'point\'\n  };\n};\nvar ChartUtils_EPS = 1e-4;\nvar checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - ChartUtils_EPS;\n  var max = Math.max(range[0], range[1]) + ChartUtils_EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nvar findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\nvar ChartUtils_truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !DataUtils_isNumber(domain[0]) || !DataUtils_isNumber(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!DataUtils_isNumber(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!DataUtils_isNumber(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\nvar ChartUtils_offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = isNaN_default()(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\n/* eslint no-param-reassign: 0 */\n\nvar ChartUtils_offsetPositive = function offsetPositive(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = isNaN_default()(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = 0;\n        series[i][j][1] = 0;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\nvar STACK_OFFSET_MAP = {\n  sign: ChartUtils_offsetSign,\n  expand: expand["a" /* default */],\n  none: none["a" /* default */],\n  silhouette: silhouette["a" /* default */],\n  wiggle: wiggle["a" /* default */],\n  positive: ChartUtils_offsetPositive\n};\nvar ChartUtils_getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = Object(src_stack["a" /* default */])().keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(order_none["a" /* default */]).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\nvar ChartUtils_getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if (DataUtils_isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId(\'_stackId_\')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return ChartUtils_objectSpread({}, result, ChartUtils_defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return ChartUtils_objectSpread({}, res, ChartUtils_defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: ChartUtils_getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return ChartUtils_objectSpread({}, result, ChartUtils_defineProperty({}, axisId, group));\n  }, {});\n};\n/**\n * get domain of ticks\n * @param  {Array} ticks Ticks of axis\n * @param  {String} type  The type of axis\n * @return {Array} domain\n */\n\nvar ChartUtils_calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === \'number\') {\n    return [min_default()(ticks), max_default()(ticks)];\n  }\n\n  return ticks;\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\nvar ChartUtils_getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== \'auto\' && scaleType !== \'linear\') {\n    return null;\n  }\n\n  if (tickCount && type === \'number\' && originalDomain && (originalDomain[0] === \'auto\' || originalDomain[1] === \'auto\')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n\n    if (!domain.length) {\n      return null;\n    }\n\n    var tickValues = Object(lib["getNiceTickValues"])(domain, tickCount, allowDecimals);\n    scale.domain(ChartUtils_calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === \'number\') {\n    var _domain = scale.domain();\n\n    var _tickValues = Object(lib["getTickValuesFixedDomain"])(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\nvar ChartUtils_getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index,\n      dataKey = _ref7.dataKey;\n\n  if (axis.type === \'category\') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !isNil_default()(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, \'value\', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !isNil_default()(dataKey) ? dataKey : axis.dataKey);\n  return !isNil_default()(value) ? axis.scale(value) : null;\n};\nvar ChartUtils_getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref8) {\n  var axis = _ref8.axis,\n      ticks = _ref8.ticks,\n      offset = _ref8.offset,\n      bandSize = _ref8.bandSize,\n      entry = _ref8.entry,\n      index = _ref8.index;\n\n  if (axis.type === \'category\') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !isNil_default()(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nvar getBaseValueOfBar = function getBaseValueOfBar(_ref9) {\n  var numericAxis = _ref9.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === \'number\') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\nvar ChartUtils_getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if (DataUtils_isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nvar ChartUtils_getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [min_default()(entry.concat([result[0]]).filter(DataUtils_isNumber)), max_default()(entry.concat([result[1]]).filter(DataUtils_isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nvar getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = ChartUtils_getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nvar MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nvar MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nvar ChartUtils_parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!isArray_default()(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if (DataUtils_isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (isFunction_default()(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if (DataUtils_isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if (isFunction_default()(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */\n\nvar ChartUtils_getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    var bandWidth = axis.scale.bandwidth();\n\n    if (!isBar || bandWidth > 0) {\n      return bandWidth;\n    }\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = sortBy_default()(ticks, function (o) {\n      return o.coordinate;\n    });\n\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis element\n * @returns {Array}        domains\n */\n\nvar ChartUtils_parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if (isEqual_default()(specifiedDomain, get_default()(axisChild, \'type.defaultProps.domain\'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/PolarUtils.js\n\n\nfunction PolarUtils_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction PolarUtils_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { PolarUtils_ownKeys(Object(source), true).forEach(function (key) { PolarUtils_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { PolarUtils_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction PolarUtils_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction PolarUtils_slicedToArray(arr, i) { return PolarUtils_arrayWithHoles(arr) || PolarUtils_iterableToArrayLimit(arr, i) || PolarUtils_unsupportedIterableToArray(arr, i) || PolarUtils_nonIterableRest(); }\n\nfunction PolarUtils_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction PolarUtils_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return PolarUtils_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return PolarUtils_arrayLikeToArray(o, minLen); }\n\nfunction PolarUtils_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction PolarUtils_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction PolarUtils_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\nvar PolarUtils_RADIAN = Math.PI / 180;\nvar degreeToRadian = function degreeToRadian(angle) {\n  return angle * Math.PI / 180;\n};\nvar radianToDegree = function radianToDegree(angleInRadian) {\n  return angleInRadian * 180 / Math.PI;\n};\nvar polarToCartesian = function polarToCartesian(cx, cy, radius, angle) {\n  return {\n    x: cx + Math.cos(-PolarUtils_RADIAN * angle) * radius,\n    y: cy + Math.sin(-PolarUtils_RADIAN * angle) * radius\n  };\n};\nvar getMaxRadius = function getMaxRadius(width, height) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n  return Math.min(Math.abs(width - (offset.left || 0) - (offset.right || 0)), Math.abs(height - (offset.top || 0) - (offset.bottom || 0))) / 2;\n};\n/**\n * Calculate the scale function, position, width, height of axes\n * @param  {Object} props     Latest props\n * @param  {Object} axisMap   The configuration of axes\n * @param  {Object} offset    The offset of main part in the svg element\n * @param  {Object} axisType  The type of axes, radius-axis or angle-axis\n * @param  {String} chartName The name of chart\n * @return {Object} Configuration\n */\n\nvar PolarUtils_formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {\n  var width = props.width,\n      height = props.height;\n  var startAngle = props.startAngle,\n      endAngle = props.endAngle;\n  var cx = DataUtils_getPercentValue(props.cx, width, width / 2);\n  var cy = DataUtils_getPercentValue(props.cy, height, height / 2);\n  var maxRadius = getMaxRadius(width, height, offset);\n  var innerRadius = DataUtils_getPercentValue(props.innerRadius, maxRadius, 0);\n  var outerRadius = DataUtils_getPercentValue(props.outerRadius, maxRadius, maxRadius * 0.8);\n  var ids = Object.keys(axisMap);\n  return ids.reduce(function (result, id) {\n    var axis = axisMap[id];\n    var domain = axis.domain,\n        reversed = axis.reversed;\n    var range;\n\n    if (isNil_default()(axis.range)) {\n      if (axisType === \'angleAxis\') {\n        range = [startAngle, endAngle];\n      } else if (axisType === \'radiusAxis\') {\n        range = [innerRadius, outerRadius];\n      }\n\n      if (reversed) {\n        range = [range[1], range[0]];\n      }\n    } else {\n      range = axis.range;\n      var _range = range;\n\n      var _range2 = PolarUtils_slicedToArray(_range, 2);\n\n      startAngle = _range2[0];\n      endAngle = _range2[1];\n    }\n\n    var _parseScale = ChartUtils_parseScale(axis, chartName),\n        realScaleType = _parseScale.realScaleType,\n        scale = _parseScale.scale;\n\n    scale.domain(domain).range(range);\n    checkDomainOfScale(scale);\n    var ticks = ChartUtils_getTicksOfScale(scale, PolarUtils_objectSpread({}, axis, {\n      realScaleType: realScaleType\n    }));\n\n    var finalAxis = PolarUtils_objectSpread({}, axis, {}, ticks, {\n      range: range,\n      radius: outerRadius,\n      realScaleType: realScaleType,\n      scale: scale,\n      cx: cx,\n      cy: cy,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    });\n\n    return PolarUtils_objectSpread({}, result, PolarUtils_defineProperty({}, id, finalAxis));\n  }, {});\n};\nvar distanceBetweenPoints = function distanceBetweenPoints(point, anotherPoint) {\n  var x1 = point.x,\n      y1 = point.y;\n  var x2 = anotherPoint.x,\n      y2 = anotherPoint.y;\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n};\nvar getAngleOfPoint = function getAngleOfPoint(_ref, _ref2) {\n  var x = _ref.x,\n      y = _ref.y;\n  var cx = _ref2.cx,\n      cy = _ref2.cy;\n  var radius = distanceBetweenPoints({\n    x: x,\n    y: y\n  }, {\n    x: cx,\n    y: cy\n  });\n\n  if (radius <= 0) {\n    return {\n      radius: radius\n    };\n  }\n\n  var cos = (x - cx) / radius;\n  var angleInRadian = Math.acos(cos);\n\n  if (y > cy) {\n    angleInRadian = 2 * Math.PI - angleInRadian;\n  }\n\n  return {\n    radius: radius,\n    angle: radianToDegree(angleInRadian),\n    angleInRadian: angleInRadian\n  };\n};\nvar formatAngleOfSector = function formatAngleOfSector(_ref3) {\n  var startAngle = _ref3.startAngle,\n      endAngle = _ref3.endAngle;\n  var startCnt = Math.floor(startAngle / 360);\n  var endCnt = Math.floor(endAngle / 360);\n  var min = Math.min(startCnt, endCnt);\n  return {\n    startAngle: startAngle - min * 360,\n    endAngle: endAngle - min * 360\n  };\n};\n\nvar reverseFormatAngleOfSetor = function reverseFormatAngleOfSetor(angle, _ref4) {\n  var startAngle = _ref4.startAngle,\n      endAngle = _ref4.endAngle;\n  var startCnt = Math.floor(startAngle / 360);\n  var endCnt = Math.floor(endAngle / 360);\n  var min = Math.min(startCnt, endCnt);\n  return angle + min * 360;\n};\n\nvar inRangeOfSector = function inRangeOfSector(_ref5, sector) {\n  var x = _ref5.x,\n      y = _ref5.y;\n\n  var _getAngleOfPoint = getAngleOfPoint({\n    x: x,\n    y: y\n  }, sector),\n      radius = _getAngleOfPoint.radius,\n      angle = _getAngleOfPoint.angle;\n\n  var innerRadius = sector.innerRadius,\n      outerRadius = sector.outerRadius;\n\n  if (radius < innerRadius || radius > outerRadius) {\n    return false;\n  }\n\n  if (radius === 0) {\n    return true;\n  }\n\n  var _formatAngleOfSector = formatAngleOfSector(sector),\n      startAngle = _formatAngleOfSector.startAngle,\n      endAngle = _formatAngleOfSector.endAngle;\n\n  var formatAngle = angle;\n  var inRange;\n\n  if (startAngle <= endAngle) {\n    while (formatAngle > endAngle) {\n      formatAngle -= 360;\n    }\n\n    while (formatAngle < startAngle) {\n      formatAngle += 360;\n    }\n\n    inRange = formatAngle >= startAngle && formatAngle <= endAngle;\n  } else {\n    while (formatAngle > startAngle) {\n      formatAngle -= 360;\n    }\n\n    while (formatAngle < endAngle) {\n      formatAngle += 360;\n    }\n\n    inRange = formatAngle >= endAngle && formatAngle <= startAngle;\n  }\n\n  if (inRange) {\n    return PolarUtils_objectSpread({}, sector, {\n      radius: radius,\n      angle: reverseFormatAngleOfSetor(formatAngle, sector)\n    });\n  }\n\n  return null;\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/Label.js\n\n\n\n\nfunction Label_toConsumableArray(arr) { return Label_arrayWithoutHoles(arr) || Label_iterableToArray(arr) || Label_unsupportedIterableToArray(arr) || Label_nonIterableSpread(); }\n\nfunction Label_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction Label_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Label_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Label_arrayLikeToArray(o, minLen); }\n\nfunction Label_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction Label_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Label_arrayLikeToArray(arr); }\n\nfunction Label_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Label_extends() { Label_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Label_extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\nvar Label_getLabel = function getLabel(props) {\n  var value = props.value,\n      formatter = props.formatter;\n  var label = isNil_default()(props.children) ? value : props.children;\n\n  if (isFunction_default()(formatter)) {\n    return formatter(label);\n  }\n\n  return label;\n};\n\nvar Label_getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {\n  var sign = mathSign(endAngle - startAngle);\n  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n  return sign * deltaAngle;\n};\n\nvar Label_renderRadialLabel = function renderRadialLabel(labelProps, label, attrs) {\n  var position = labelProps.position,\n      viewBox = labelProps.viewBox,\n      offset = labelProps.offset,\n      className = labelProps.className;\n  var _ref = viewBox,\n      cx = _ref.cx,\n      cy = _ref.cy,\n      innerRadius = _ref.innerRadius,\n      outerRadius = _ref.outerRadius,\n      startAngle = _ref.startAngle,\n      endAngle = _ref.endAngle,\n      clockWise = _ref.clockWise;\n  var radius = (innerRadius + outerRadius) / 2;\n  var deltaAngle = Label_getDeltaAngle(startAngle, endAngle);\n  var sign = deltaAngle >= 0 ? 1 : -1;\n  var labelAngle, direction;\n\n  if (position === \'insideStart\') {\n    labelAngle = startAngle + sign * offset;\n    direction = clockWise;\n  } else if (position === \'insideEnd\') {\n    labelAngle = endAngle - sign * offset;\n    direction = !clockWise;\n  } else if (position === \'end\') {\n    labelAngle = endAngle + sign * offset;\n    direction = clockWise;\n  }\n\n  direction = deltaAngle <= 0 ? direction : !direction;\n  var startPoint = polarToCartesian(cx, cy, radius, labelAngle);\n  var endPoint = polarToCartesian(cx, cy, radius, labelAngle + (direction ? 1 : -1) * 359);\n  var path = "M".concat(startPoint.x, ",").concat(startPoint.y, "\\n    A").concat(radius, ",").concat(radius, ",0,1,").concat(direction ? 0 : 1, ",\\n    ").concat(endPoint.x, ",").concat(endPoint.y);\n  var id = isNil_default()(labelProps.id) ? uniqueId(\'recharts-radial-line-\') : labelProps.id;\n  return /*#__PURE__*/react_default.a.createElement("text", Label_extends({}, attrs, {\n    dominantBaseline: "central",\n    className: classnames_default()(\'recharts-radial-bar-label\', className)\n  }), /*#__PURE__*/react_default.a.createElement("defs", null, /*#__PURE__*/react_default.a.createElement("path", {\n    id: id,\n    d: path\n  })), /*#__PURE__*/react_default.a.createElement("textPath", {\n    xlinkHref: "#".concat(id)\n  }, label));\n};\n\nvar Label_getAttrsOfPolarLabel = function getAttrsOfPolarLabel(props) {\n  var viewBox = props.viewBox,\n      offset = props.offset,\n      position = props.position;\n  var _ref2 = viewBox,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      innerRadius = _ref2.innerRadius,\n      outerRadius = _ref2.outerRadius,\n      startAngle = _ref2.startAngle,\n      endAngle = _ref2.endAngle;\n  var midAngle = (startAngle + endAngle) / 2;\n\n  if (position === \'outside\') {\n    var _polarToCartesian = polarToCartesian(cx, cy, outerRadius + offset, midAngle),\n        _x = _polarToCartesian.x,\n        _y = _polarToCartesian.y;\n\n    return {\n      x: _x,\n      y: _y,\n      textAnchor: _x >= cx ? \'start\' : \'end\',\n      verticalAnchor: \'middle\'\n    };\n  }\n\n  if (position === \'center\') {\n    return {\n      x: cx,\n      y: cy,\n      textAnchor: \'middle\',\n      verticalAnchor: \'middle\'\n    };\n  }\n\n  if (position === \'centerTop\') {\n    return {\n      x: cx,\n      y: cy,\n      textAnchor: \'middle\',\n      verticalAnchor: \'start\'\n    };\n  }\n\n  if (position === \'centerBottom\') {\n    return {\n      x: cx,\n      y: cy,\n      textAnchor: \'middle\',\n      verticalAnchor: \'end\'\n    };\n  }\n\n  var r = (innerRadius + outerRadius) / 2;\n\n  var _polarToCartesian2 = polarToCartesian(cx, cy, r, midAngle),\n      x = _polarToCartesian2.x,\n      y = _polarToCartesian2.y;\n\n  return {\n    x: x,\n    y: y,\n    textAnchor: \'middle\',\n    verticalAnchor: \'middle\'\n  };\n};\n\nvar Label_getAttrsOfCartesianLabel = function getAttrsOfCartesianLabel(props) {\n  var viewBox = props.viewBox,\n      offset = props.offset,\n      position = props.position;\n  var _ref3 = viewBox,\n      x = _ref3.x,\n      y = _ref3.y,\n      width = _ref3.width,\n      height = _ref3.height; // Define vertical offsets and position inverts based on the value being positive or negative\n\n  var verticalSign = height >= 0 ? 1 : -1;\n  var verticalOffset = verticalSign * offset;\n  var verticalEnd = verticalSign > 0 ? \'end\' : \'start\';\n  var verticalStart = verticalSign > 0 ? \'start\' : \'end\'; // Define horizontal offsets and position inverts based on the value being positive or negative\n\n  var horizontalSign = width >= 0 ? 1 : -1;\n  var horizontalOffset = horizontalSign * offset;\n  var horizontalEnd = horizontalSign > 0 ? \'end\' : \'start\';\n  var horizontalStart = horizontalSign > 0 ? \'start\' : \'end\';\n\n  if (position === \'top\') {\n    return {\n      x: x + width / 2,\n      y: y - verticalSign * offset,\n      textAnchor: \'middle\',\n      verticalAnchor: verticalEnd\n    };\n  }\n\n  if (position === \'bottom\') {\n    return {\n      x: x + width / 2,\n      y: y + height + verticalOffset,\n      textAnchor: \'middle\',\n      verticalAnchor: verticalStart\n    };\n  }\n\n  if (position === \'left\') {\n    return {\n      x: x - horizontalOffset,\n      y: y + height / 2,\n      textAnchor: horizontalEnd,\n      verticalAnchor: \'middle\'\n    };\n  }\n\n  if (position === \'right\') {\n    return {\n      x: x + width + horizontalOffset,\n      y: y + height / 2,\n      textAnchor: horizontalStart,\n      verticalAnchor: \'middle\'\n    };\n  }\n\n  if (position === \'insideLeft\') {\n    return {\n      x: x + horizontalOffset,\n      y: y + height / 2,\n      textAnchor: horizontalStart,\n      verticalAnchor: \'middle\'\n    };\n  }\n\n  if (position === \'insideRight\') {\n    return {\n      x: x + width - horizontalOffset,\n      y: y + height / 2,\n      textAnchor: horizontalEnd,\n      verticalAnchor: \'middle\'\n    };\n  }\n\n  if (position === \'insideTop\') {\n    return {\n      x: x + width / 2,\n      y: y + verticalOffset,\n      textAnchor: \'middle\',\n      verticalAnchor: verticalStart\n    };\n  }\n\n  if (position === \'insideBottom\') {\n    return {\n      x: x + width / 2,\n      y: y + height - verticalOffset,\n      textAnchor: \'middle\',\n      verticalAnchor: verticalEnd\n    };\n  }\n\n  if (position === \'insideTopLeft\') {\n    return {\n      x: x + horizontalOffset,\n      y: y + verticalOffset,\n      textAnchor: horizontalStart,\n      verticalAnchor: verticalStart\n    };\n  }\n\n  if (position === \'insideTopRight\') {\n    return {\n      x: x + width - horizontalOffset,\n      y: y + verticalOffset,\n      textAnchor: horizontalEnd,\n      verticalAnchor: verticalStart\n    };\n  }\n\n  if (position === \'insideBottomLeft\') {\n    return {\n      x: x + horizontalOffset,\n      y: y + height - verticalOffset,\n      textAnchor: horizontalStart,\n      verticalAnchor: verticalEnd\n    };\n  }\n\n  if (position === \'insideBottomRight\') {\n    return {\n      x: x + width - horizontalOffset,\n      y: y + height - verticalOffset,\n      textAnchor: horizontalEnd,\n      verticalAnchor: verticalEnd\n    };\n  }\n\n  if (isObject_default()(position) && (DataUtils_isNumber(position.x) || DataUtils_isPercent(position.x)) && (DataUtils_isNumber(position.y) || DataUtils_isPercent(position.y))) {\n    return {\n      x: x + DataUtils_getPercentValue(position.x, width),\n      y: y + DataUtils_getPercentValue(position.y, height),\n      textAnchor: \'end\',\n      verticalAnchor: \'end\'\n    };\n  }\n\n  return {\n    x: x + width / 2,\n    y: y + height / 2,\n    textAnchor: \'middle\',\n    verticalAnchor: \'middle\'\n  };\n};\n\nvar Label_isPolar = function isPolar(viewBox) {\n  return DataUtils_isNumber(viewBox.cx);\n};\n\nfunction Label(props) {\n  var viewBox = props.viewBox,\n      position = props.position,\n      value = props.value,\n      children = props.children,\n      content = props.content,\n      _props$className = props.className,\n      className = _props$className === void 0 ? \'\' : _props$className;\n\n  if (!viewBox || isNil_default()(value) && isNil_default()(children) && !Object(react["isValidElement"])(content) && !isFunction_default()(content)) {\n    return null;\n  }\n\n  if (Object(react["isValidElement"])(content)) {\n    return Object(react["cloneElement"])(content, props);\n  }\n\n  var label;\n\n  if (isFunction_default()(content)) {\n    label = Object(react["createElement"])(content, props);\n\n    if (Object(react["isValidElement"])(label)) {\n      return label;\n    }\n  } else {\n    label = Label_getLabel(props);\n  }\n\n  var isPolarLabel = Label_isPolar(viewBox);\n  var attrs = types_filterProps(props, true);\n\n  if (isPolarLabel && (position === \'insideStart\' || position === \'insideEnd\' || position === \'end\')) {\n    return Label_renderRadialLabel(props, label, attrs);\n  }\n\n  var positionAttrs = isPolarLabel ? Label_getAttrsOfPolarLabel(props) : Label_getAttrsOfCartesianLabel(props);\n  return /*#__PURE__*/react_default.a.createElement(component_Text, Label_extends({\n    className: classnames_default()(\'recharts-label\', className)\n  }, attrs, positionAttrs), label);\n}\n\nLabel.displayName = \'Label\';\nLabel.defaultProps = {\n  offset: 5\n};\n\nvar Label_parseViewBox = function parseViewBox(props) {\n  var cx = props.cx,\n      cy = props.cy,\n      angle = props.angle,\n      startAngle = props.startAngle,\n      endAngle = props.endAngle,\n      r = props.r,\n      radius = props.radius,\n      innerRadius = props.innerRadius,\n      outerRadius = props.outerRadius,\n      x = props.x,\n      y = props.y,\n      top = props.top,\n      left = props.left,\n      width = props.width,\n      height = props.height,\n      clockWise = props.clockWise;\n\n  if (DataUtils_isNumber(width) && DataUtils_isNumber(height)) {\n    if (DataUtils_isNumber(x) && DataUtils_isNumber(y)) {\n      return {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n\n    if (DataUtils_isNumber(top) && DataUtils_isNumber(left)) {\n      return {\n        x: top,\n        y: left,\n        width: width,\n        height: height\n      };\n    }\n  }\n\n  if (DataUtils_isNumber(x) && DataUtils_isNumber(y)) {\n    return {\n      x: x,\n      y: y,\n      width: 0,\n      height: 0\n    };\n  }\n\n  if (DataUtils_isNumber(cx) && DataUtils_isNumber(cy)) {\n    return {\n      cx: cx,\n      cy: cy,\n      startAngle: startAngle || angle || 0,\n      endAngle: endAngle || angle || 0,\n      innerRadius: innerRadius || 0,\n      outerRadius: outerRadius || radius || r || 0,\n      clockWise: clockWise\n    };\n  }\n\n  if (props.viewBox) {\n    return props.viewBox;\n  }\n\n  return {};\n};\n\nvar Label_parseLabel = function parseLabel(label, viewBox) {\n  if (!label) {\n    return null;\n  }\n\n  if (label === true) {\n    return /*#__PURE__*/react_default.a.createElement(Label, {\n      key: "label-implicit",\n      viewBox: viewBox\n    });\n  }\n\n  if (DataUtils_isNumOrStr(label)) {\n    return /*#__PURE__*/react_default.a.createElement(Label, {\n      key: "label-implicit",\n      viewBox: viewBox,\n      value: label\n    });\n  }\n\n  if (Object(react["isValidElement"])(label)) {\n    if (label.type === Label) {\n      return Object(react["cloneElement"])(label, {\n        key: \'label-implicit\',\n        viewBox: viewBox\n      });\n    }\n\n    return /*#__PURE__*/react_default.a.createElement(Label, {\n      key: "label-implicit",\n      content: label,\n      viewBox: viewBox\n    });\n  }\n\n  if (isFunction_default()(label)) {\n    return /*#__PURE__*/react_default.a.createElement(Label, {\n      key: "label-implicit",\n      content: label,\n      viewBox: viewBox\n    });\n  }\n\n  if (isObject_default()(label)) {\n    return /*#__PURE__*/react_default.a.createElement(Label, Label_extends({\n      viewBox: viewBox\n    }, label, {\n      key: "label-implicit"\n    }));\n  }\n\n  return null;\n};\n\nvar Label_renderCallByParent = function renderCallByParent(parentProps, viewBox) {\n  var checkPropsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {\n    return null;\n  }\n\n  var children = parentProps.children;\n  var parentViewBox = Label_parseViewBox(parentProps);\n  var explicitChildren = ReactUtils_findAllByType(children, Label.displayName).map(function (child, index) {\n    return Object(react["cloneElement"])(child, {\n      viewBox: viewBox || parentViewBox,\n      key: "label-".concat(index)\n    });\n  });\n\n  if (!checkPropsLabel) {\n    return explicitChildren;\n  }\n\n  var implicitLabel = Label_parseLabel(parentProps.label, viewBox || parentViewBox);\n  return [implicitLabel].concat(Label_toConsumableArray(explicitChildren));\n};\n\nLabel.parseViewBox = Label_parseViewBox;\nLabel.renderCallByParent = Label_renderCallByParent;\n/* harmony default export */ var component_Label = (Label);\n// EXTERNAL MODULE: ./node_modules/lodash/last.js\nvar last = __webpack_require__("RBan");\nvar last_default = /*#__PURE__*/__webpack_require__.n(last);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/LabelList.js\n\n\n\n\n\n\nfunction LabelList_toConsumableArray(arr) { return LabelList_arrayWithoutHoles(arr) || LabelList_iterableToArray(arr) || LabelList_unsupportedIterableToArray(arr) || LabelList_nonIterableSpread(); }\n\nfunction LabelList_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction LabelList_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return LabelList_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return LabelList_arrayLikeToArray(o, minLen); }\n\nfunction LabelList_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction LabelList_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return LabelList_arrayLikeToArray(arr); }\n\nfunction LabelList_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction LabelList_extends() { LabelList_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return LabelList_extends.apply(this, arguments); }\n\nfunction LabelList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction LabelList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { LabelList_ownKeys(Object(source), true).forEach(function (key) { LabelList_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { LabelList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction LabelList_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction LabelList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = LabelList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction LabelList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n\nvar LabelList_defaultProps = {\n  valueAccessor: function valueAccessor(entry) {\n    return isArray_default()(entry.value) ? last_default()(entry.value) : entry.value;\n  }\n};\n\nfunction LabelList(props) {\n  var data = props.data,\n      valueAccessor = props.valueAccessor,\n      dataKey = props.dataKey,\n      clockWise = props.clockWise,\n      id = props.id,\n      others = LabelList_objectWithoutProperties(props, ["data", "valueAccessor", "dataKey", "clockWise", "id"]);\n\n  if (!data || !data.length) {\n    return null;\n  }\n\n  return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n    className: "recharts-label-list"\n  }, data.map(function (entry, index) {\n    var value = isNil_default()(dataKey) ? valueAccessor(entry, index) : getValueByDataKey(entry && entry.payload, dataKey);\n    var idProps = isNil_default()(id) ? {} : {\n      id: "".concat(id, "-").concat(index)\n    };\n    return /*#__PURE__*/react_default.a.createElement(component_Label, LabelList_extends({}, types_filterProps(entry, true), others, idProps, {\n      index: index,\n      value: value,\n      viewBox: component_Label.parseViewBox(isNil_default()(clockWise) ? entry : LabelList_objectSpread({}, entry, {\n        clockWise: clockWise\n      })),\n      key: "label-".concat(index) // eslint-disable-line react/no-array-index-key\n\n    }));\n  }));\n}\n\nLabelList.displayName = \'LabelList\';\n\nfunction parseLabelList(label, data) {\n  if (!label) {\n    return null;\n  }\n\n  if (label === true) {\n    return /*#__PURE__*/react_default.a.createElement(LabelList, {\n      key: "labelList-implicit",\n      data: data\n    });\n  }\n\n  if (react_default.a.isValidElement(label) || isFunction_default()(label)) {\n    return /*#__PURE__*/react_default.a.createElement(LabelList, {\n      key: "labelList-implicit",\n      data: data,\n      content: label\n    });\n  }\n\n  if (isObject_default()(label)) {\n    return /*#__PURE__*/react_default.a.createElement(LabelList, LabelList_extends({\n      data: data\n    }, label, {\n      key: "labelList-implicit"\n    }));\n  }\n\n  return null;\n}\n\nfunction LabelList_renderCallByParent(parentProps, data) {\n  var ckeckPropsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (!parentProps || !parentProps.children && ckeckPropsLabel && !parentProps.label) {\n    return null;\n  }\n\n  var children = parentProps.children;\n  var explicitChilren = ReactUtils_findAllByType(children, LabelList.displayName).map(function (child, index) {\n    return Object(react["cloneElement"])(child, {\n      data: data,\n      key: "labelList-".concat(index)\n    });\n  });\n\n  if (!ckeckPropsLabel) {\n    return explicitChilren;\n  }\n\n  var implicitLabelList = parseLabelList(parentProps.label, data);\n  return [implicitLabelList].concat(LabelList_toConsumableArray(explicitChilren));\n}\n\nLabelList.renderCallByParent = LabelList_renderCallByParent;\nLabelList.defaultProps = LabelList_defaultProps;\n/* harmony default export */ var component_LabelList = (LabelList);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/component/Customized.js\n\n\nfunction Customized_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Customized_typeof = function _typeof(obj) { return typeof obj; }; } else { Customized_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Customized_typeof(obj); }\n\nfunction Customized_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Customized_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Customized_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * @fileOverview Customized\n */\n\n\n\n\n/**\n * custom svg elements by rechart instance props and state.\n * @returns {Object}   svg elements\n */\nfunction Customized(_ref) {\n  var component = _ref.component,\n      props = Customized_objectWithoutProperties(_ref, ["component"]);\n\n  var child;\n\n  if (Object(react["isValidElement"])(component)) {\n    child = Object(react["cloneElement"])(component, props);\n  } else if (isFunction_default()(component)) {\n    child = Object(react["createElement"])(component, props);\n  } else {\n    warn(false, "Customized\'s props `component` must be React.element or Function, but got %s.", Customized_typeof(component));\n  }\n\n  return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n    className: "recharts-customized-wrapper"\n  }, child);\n}\nCustomized.displayName = \'Customized\';\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Sector.js\nfunction Sector_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Sector_typeof = function _typeof(obj) { return typeof obj; }; } else { Sector_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Sector_typeof(obj); }\n\nfunction Sector_extends() { Sector_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Sector_extends.apply(this, arguments); }\n\nfunction Sector_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Sector_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Sector_createClass(Constructor, protoProps, staticProps) { if (protoProps) Sector_defineProperties(Constructor.prototype, protoProps); if (staticProps) Sector_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Sector_createSuper(Derived) { return function () { var Super = Sector_getPrototypeOf(Derived), result; if (Sector_isNativeReflectConstruct()) { var NewTarget = Sector_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Sector_possibleConstructorReturn(this, result); }; }\n\nfunction Sector_possibleConstructorReturn(self, call) { if (call && (Sector_typeof(call) === "object" || typeof call === "function")) { return call; } return Sector_assertThisInitialized(self); }\n\nfunction Sector_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Sector_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Sector_getPrototypeOf(o) { Sector_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Sector_getPrototypeOf(o); }\n\nfunction Sector_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Sector_setPrototypeOf(subClass, superClass); }\n\nfunction Sector_setPrototypeOf(o, p) { Sector_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Sector_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Sector\n */\n\n\n\n\n\n\nvar Sector_getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {\n  var sign = mathSign(endAngle - startAngle);\n  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);\n  return sign * deltaAngle;\n};\n\nvar Sector_getTangentCircle = function getTangentCircle(_ref) {\n  var cx = _ref.cx,\n      cy = _ref.cy,\n      radius = _ref.radius,\n      angle = _ref.angle,\n      sign = _ref.sign,\n      isExternal = _ref.isExternal,\n      cornerRadius = _ref.cornerRadius,\n      cornerIsExternal = _ref.cornerIsExternal;\n  var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;\n  var theta = Math.asin(cornerRadius / centerRadius) / PolarUtils_RADIAN;\n  var centerAngle = cornerIsExternal ? angle : angle + sign * theta;\n  var center = polarToCartesian(cx, cy, centerRadius, centerAngle); // The coordinate of point which is tangent to the circle\n\n  var circleTangency = polarToCartesian(cx, cy, radius, centerAngle); // The coordinate of point which is tangent to the radius line\n\n  var lineTangencyAngle = cornerIsExternal ? angle - sign * theta : angle;\n  var lineTangency = polarToCartesian(cx, cy, centerRadius * Math.cos(theta * PolarUtils_RADIAN), lineTangencyAngle);\n  return {\n    center: center,\n    circleTangency: circleTangency,\n    lineTangency: lineTangency,\n    theta: theta\n  };\n};\n\nvar Sector_getSectorPath = function getSectorPath(_ref2) {\n  var cx = _ref2.cx,\n      cy = _ref2.cy,\n      innerRadius = _ref2.innerRadius,\n      outerRadius = _ref2.outerRadius,\n      startAngle = _ref2.startAngle,\n      endAngle = _ref2.endAngle;\n  var angle = Sector_getDeltaAngle(startAngle, endAngle); // When the angle of sector equals to 360, star point and end point coincide\n\n  var tempEndAngle = startAngle + angle;\n  var outerStartPoint = polarToCartesian(cx, cy, outerRadius, startAngle);\n  var outerEndPoint = polarToCartesian(cx, cy, outerRadius, tempEndAngle);\n  var path = "M ".concat(outerStartPoint.x, ",").concat(outerStartPoint.y, "\\n    A ").concat(outerRadius, ",").concat(outerRadius, ",0,\\n    ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle > tempEndAngle), ",\\n    ").concat(outerEndPoint.x, ",").concat(outerEndPoint.y, "\\n  ");\n\n  if (innerRadius > 0) {\n    var innerStartPoint = polarToCartesian(cx, cy, innerRadius, startAngle);\n    var innerEndPoint = polarToCartesian(cx, cy, innerRadius, tempEndAngle);\n    path += "L ".concat(innerEndPoint.x, ",").concat(innerEndPoint.y, "\\n            A ").concat(innerRadius, ",").concat(innerRadius, ",0,\\n            ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle <= tempEndAngle), ",\\n            ").concat(innerStartPoint.x, ",").concat(innerStartPoint.y, " Z");\n  } else {\n    path += "L ".concat(cx, ",").concat(cy, " Z");\n  }\n\n  return path;\n};\n\nvar Sector_getSectorWithCorner = function getSectorWithCorner(_ref3) {\n  var cx = _ref3.cx,\n      cy = _ref3.cy,\n      innerRadius = _ref3.innerRadius,\n      outerRadius = _ref3.outerRadius,\n      cornerRadius = _ref3.cornerRadius,\n      forceCornerRadius = _ref3.forceCornerRadius,\n      cornerIsExternal = _ref3.cornerIsExternal,\n      startAngle = _ref3.startAngle,\n      endAngle = _ref3.endAngle;\n  var sign = mathSign(endAngle - startAngle);\n\n  var _getTangentCircle = Sector_getTangentCircle({\n    cx: cx,\n    cy: cy,\n    radius: outerRadius,\n    angle: startAngle,\n    sign: sign,\n    cornerRadius: cornerRadius,\n    cornerIsExternal: cornerIsExternal\n  }),\n      soct = _getTangentCircle.circleTangency,\n      solt = _getTangentCircle.lineTangency,\n      sot = _getTangentCircle.theta;\n\n  var _getTangentCircle2 = Sector_getTangentCircle({\n    cx: cx,\n    cy: cy,\n    radius: outerRadius,\n    angle: endAngle,\n    sign: -sign,\n    cornerRadius: cornerRadius,\n    cornerIsExternal: cornerIsExternal\n  }),\n      eoct = _getTangentCircle2.circleTangency,\n      eolt = _getTangentCircle2.lineTangency,\n      eot = _getTangentCircle2.theta;\n\n  var outerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sot - eot;\n\n  if (outerArcAngle < 0) {\n    if (forceCornerRadius) {\n      return "M ".concat(solt.x, ",").concat(solt.y, "\\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(cornerRadius * 2, ",0\\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(-cornerRadius * 2, ",0\\n      ");\n    }\n\n    return Sector_getSectorPath({\n      cx: cx,\n      cy: cy,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    });\n  }\n\n  var path = "M ".concat(solt.x, ",").concat(solt.y, "\\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(soct.x, ",").concat(soct.y, "\\n    A").concat(outerRadius, ",").concat(outerRadius, ",0,").concat(+(outerArcAngle > 180), ",").concat(+(sign < 0), ",").concat(eoct.x, ",").concat(eoct.y, "\\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(eolt.x, ",").concat(eolt.y, "\\n  ");\n\n  if (innerRadius > 0) {\n    var _getTangentCircle3 = Sector_getTangentCircle({\n      cx: cx,\n      cy: cy,\n      radius: innerRadius,\n      angle: startAngle,\n      sign: sign,\n      isExternal: true,\n      cornerRadius: cornerRadius,\n      cornerIsExternal: cornerIsExternal\n    }),\n        sict = _getTangentCircle3.circleTangency,\n        silt = _getTangentCircle3.lineTangency,\n        sit = _getTangentCircle3.theta;\n\n    var _getTangentCircle4 = Sector_getTangentCircle({\n      cx: cx,\n      cy: cy,\n      radius: innerRadius,\n      angle: endAngle,\n      sign: -sign,\n      isExternal: true,\n      cornerRadius: cornerRadius,\n      cornerIsExternal: cornerIsExternal\n    }),\n        eict = _getTangentCircle4.circleTangency,\n        eilt = _getTangentCircle4.lineTangency,\n        eit = _getTangentCircle4.theta;\n\n    var innerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sit - eit;\n\n    if (innerArcAngle < 0) {\n      return "".concat(path, "L").concat(cx, ",").concat(cy, "Z");\n    }\n\n    path += "L".concat(eilt.x, ",").concat(eilt.y, "\\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(eict.x, ",").concat(eict.y, "\\n      A").concat(innerRadius, ",").concat(innerRadius, ",0,").concat(+(innerArcAngle > 180), ",").concat(+(sign > 0), ",").concat(sict.x, ",").concat(sict.y, "\\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(silt.x, ",").concat(silt.y, "Z");\n  } else {\n    path += "L".concat(cx, ",").concat(cy, "Z");\n  }\n\n  return path;\n};\n\nvar Sector_Sector = /*#__PURE__*/function (_PureComponent) {\n  Sector_inherits(Sector, _PureComponent);\n\n  var _super = Sector_createSuper(Sector);\n\n  function Sector() {\n    Sector_classCallCheck(this, Sector);\n\n    return _super.apply(this, arguments);\n  }\n\n  Sector_createClass(Sector, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          cx = _this$props.cx,\n          cy = _this$props.cy,\n          innerRadius = _this$props.innerRadius,\n          outerRadius = _this$props.outerRadius,\n          cornerRadius = _this$props.cornerRadius,\n          forceCornerRadius = _this$props.forceCornerRadius,\n          cornerIsExternal = _this$props.cornerIsExternal,\n          startAngle = _this$props.startAngle,\n          endAngle = _this$props.endAngle,\n          className = _this$props.className;\n\n      if (outerRadius < innerRadius || startAngle === endAngle) {\n        return null;\n      }\n\n      var layerClass = classnames_default()(\'recharts-sector\', className);\n      var deltaRadius = outerRadius - innerRadius;\n      var cr = DataUtils_getPercentValue(cornerRadius, deltaRadius, 0, true);\n      var path;\n\n      if (cr > 0 && Math.abs(startAngle - endAngle) < 360) {\n        path = Sector_getSectorWithCorner({\n          cx: cx,\n          cy: cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          cornerRadius: Math.min(cr, deltaRadius / 2),\n          forceCornerRadius: forceCornerRadius,\n          cornerIsExternal: cornerIsExternal,\n          startAngle: startAngle,\n          endAngle: endAngle\n        });\n      } else {\n        path = Sector_getSectorPath({\n          cx: cx,\n          cy: cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle\n        });\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("path", Sector_extends({}, types_filterProps(this.props, true), {\n        className: layerClass,\n        d: path\n      }));\n    }\n  }]);\n\n  return Sector;\n}(react["PureComponent"]);\n\nSector_Sector.defaultProps = {\n  cx: 0,\n  cy: 0,\n  innerRadius: 0,\n  outerRadius: 0,\n  startAngle: 0,\n  endAngle: 0,\n  cornerRadius: 0,\n  forceCornerRadius: false,\n  cornerIsExternal: false\n};\n/* harmony default export */ var shape_Sector = (Sector_Sector);\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/basisClosed.js\nvar basisClosed = __webpack_require__("muaG");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/basisOpen.js\nvar basisOpen = __webpack_require__("1nUc");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/basis.js\nvar basis = __webpack_require__("jICm");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/linearClosed.js\nvar linearClosed = __webpack_require__("zD5G");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/linear.js\nvar curve_linear = __webpack_require__("SDD1");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/monotone.js\nvar monotone = __webpack_require__("pL0w");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/natural.js\nvar natural = __webpack_require__("qE0H");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/curve/step.js\nvar step = __webpack_require__("e9ab");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/area.js\nvar src_area = __webpack_require__("44y/");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/src/line.js\nvar src_line = __webpack_require__("+ugm");\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Curve.js\n\n\n\n\nfunction Curve_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Curve_typeof = function _typeof(obj) { return typeof obj; }; } else { Curve_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Curve_typeof(obj); }\n\nfunction Curve_extends() { Curve_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Curve_extends.apply(this, arguments); }\n\nfunction Curve_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Curve_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Curve_ownKeys(Object(source), true).forEach(function (key) { Curve_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Curve_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Curve_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Curve_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Curve_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Curve_createClass(Constructor, protoProps, staticProps) { if (protoProps) Curve_defineProperties(Constructor.prototype, protoProps); if (staticProps) Curve_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Curve_createSuper(Derived) { return function () { var Super = Curve_getPrototypeOf(Derived), result; if (Curve_isNativeReflectConstruct()) { var NewTarget = Curve_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Curve_possibleConstructorReturn(this, result); }; }\n\nfunction Curve_possibleConstructorReturn(self, call) { if (call && (Curve_typeof(call) === "object" || typeof call === "function")) { return call; } return Curve_assertThisInitialized(self); }\n\nfunction Curve_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Curve_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Curve_getPrototypeOf(o) { Curve_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Curve_getPrototypeOf(o); }\n\nfunction Curve_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Curve_setPrototypeOf(subClass, superClass); }\n\nfunction Curve_setPrototypeOf(o, p) { Curve_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Curve_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Curve\n */\n\n\n\n\n\nvar CURVE_FACTORIES = {\n  curveBasisClosed: basisClosed["a" /* default */],\n  curveBasisOpen: basisOpen["a" /* default */],\n  curveBasis: basis["a" /* default */],\n  curveLinearClosed: linearClosed["a" /* default */],\n  curveLinear: curve_linear["a" /* default */],\n  curveMonotoneX: monotone["a" /* monotoneX */],\n  curveMonotoneY: monotone["b" /* monotoneY */],\n  curveNatural: natural["a" /* default */],\n  curveStep: step["a" /* default */],\n  curveStepAfter: step["b" /* stepAfter */],\n  curveStepBefore: step["c" /* stepBefore */]\n};\n\nvar defined = function defined(p) {\n  return p.x === +p.x && p.y === +p.y;\n};\n\nvar getX = function getX(p) {\n  return p.x;\n};\n\nvar getY = function getY(p) {\n  return p.y;\n};\n\nvar Curve_getCurveFactory = function getCurveFactory(type, layout) {\n  if (isFunction_default()(type)) {\n    return type;\n  }\n\n  var name = "curve".concat(upperFirst_default()(type));\n\n  if (name === \'curveMonotone\' && layout) {\n    return CURVE_FACTORIES["".concat(name).concat(layout === \'vertical\' ? \'Y\' : \'X\')];\n  }\n\n  return CURVE_FACTORIES[name] || curve_linear["a" /* default */];\n};\n\nvar Curve_Curve = /*#__PURE__*/function (_PureComponent) {\n  Curve_inherits(Curve, _PureComponent);\n\n  var _super = Curve_createSuper(Curve);\n\n  function Curve() {\n    Curve_classCallCheck(this, Curve);\n\n    return _super.apply(this, arguments);\n  }\n\n  Curve_createClass(Curve, [{\n    key: "getPath",\n\n    /**\n     * Calculate the path of curve\n     * @return {String} path\n     */\n    value: function getPath() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          points = _this$props.points,\n          baseLine = _this$props.baseLine,\n          layout = _this$props.layout,\n          connectNulls = _this$props.connectNulls;\n      var curveFactory = Curve_getCurveFactory(type, layout);\n      var formatPoints = connectNulls ? points.filter(function (entry) {\n        return defined(entry);\n      }) : points;\n      var lineFunction;\n\n      if (isArray_default()(baseLine)) {\n        var formatBaseLine = connectNulls ? baseLine.filter(function (base) {\n          return defined(base);\n        }) : baseLine;\n        var areaPoints = formatPoints.map(function (entry, index) {\n          return Curve_objectSpread({}, entry, {\n            base: formatBaseLine[index]\n          });\n        });\n\n        if (layout === \'vertical\') {\n          lineFunction = Object(src_area["a" /* default */])().y(getY).x1(getX).x0(function (d) {\n            return d.base.x;\n          });\n        } else {\n          lineFunction = Object(src_area["a" /* default */])().x(getX).y1(getY).y0(function (d) {\n            return d.base.y;\n          });\n        }\n\n        lineFunction.defined(defined).curve(curveFactory);\n        return lineFunction(areaPoints);\n      }\n\n      if (layout === \'vertical\' && DataUtils_isNumber(baseLine)) {\n        lineFunction = Object(src_area["a" /* default */])().y(getY).x1(getX).x0(baseLine);\n      } else if (DataUtils_isNumber(baseLine)) {\n        lineFunction = Object(src_area["a" /* default */])().x(getX).y1(getY).y0(baseLine);\n      } else {\n        lineFunction = Object(src_line["a" /* default */])().x(getX).y(getY);\n      }\n\n      lineFunction.defined(defined).curve(curveFactory);\n      return lineFunction(formatPoints);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          points = _this$props2.points,\n          path = _this$props2.path,\n          pathRef = _this$props2.pathRef;\n\n      if ((!points || !points.length) && !path) {\n        return null;\n      }\n\n      var realPath = points && points.length ? this.getPath() : path;\n      return /*#__PURE__*/react_default.a.createElement("path", Curve_extends({}, types_filterProps(this.props), types_adaptEventHandlers(this.props), {\n        className: classnames_default()(\'recharts-curve\', className),\n        d: realPath,\n        ref: pathRef\n      }));\n    }\n  }]);\n\n  return Curve;\n}(react["PureComponent"]);\n\nCurve_Curve.defaultProps = {\n  type: \'linear\',\n  points: [],\n  connectNulls: false\n};\n/* harmony default export */ var shape_Curve = (Curve_Curve);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Rectangle.js\nfunction Rectangle_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Rectangle_typeof = function _typeof(obj) { return typeof obj; }; } else { Rectangle_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Rectangle_typeof(obj); }\n\nfunction Rectangle_extends() { Rectangle_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Rectangle_extends.apply(this, arguments); }\n\nfunction Rectangle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Rectangle_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Rectangle_createClass(Constructor, protoProps, staticProps) { if (protoProps) Rectangle_defineProperties(Constructor.prototype, protoProps); if (staticProps) Rectangle_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Rectangle_createSuper(Derived) { return function () { var Super = Rectangle_getPrototypeOf(Derived), result; if (Rectangle_isNativeReflectConstruct()) { var NewTarget = Rectangle_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Rectangle_possibleConstructorReturn(this, result); }; }\n\nfunction Rectangle_possibleConstructorReturn(self, call) { if (call && (Rectangle_typeof(call) === "object" || typeof call === "function")) { return call; } return Rectangle_assertThisInitialized(self); }\n\nfunction Rectangle_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Rectangle_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Rectangle_getPrototypeOf(o) { Rectangle_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Rectangle_getPrototypeOf(o); }\n\nfunction Rectangle_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Rectangle_setPrototypeOf(subClass, superClass); }\n\nfunction Rectangle_setPrototypeOf(o, p) { Rectangle_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Rectangle_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Rectangle\n */\n\n\n\n\n\nvar getRectangePath = function getRectangePath(x, y, width, height, radius) {\n  var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);\n  var ySign = height >= 0 ? 1 : -1;\n  var xSign = width >= 0 ? 1 : -1;\n  var clockWise = height >= 0 && width >= 0 || height < 0 && width < 0 ? 1 : 0;\n  var path;\n\n  if (maxRadius > 0 && radius instanceof Array) {\n    var newRadius = [0, 0, 0, 0];\n\n    for (var i = 0, len = 4; i < len; i++) {\n      newRadius[i] = radius[i] > maxRadius ? maxRadius : radius[i];\n    }\n\n    path = "M".concat(x, ",").concat(y + ySign * newRadius[0]);\n\n    if (newRadius[0] > 0) {\n      path += "A ".concat(newRadius[0], ",").concat(newRadius[0], ",0,0,").concat(clockWise, ",").concat(x + xSign * newRadius[0], ",").concat(y);\n    }\n\n    path += "L ".concat(x + width - xSign * newRadius[1], ",").concat(y);\n\n    if (newRadius[1] > 0) {\n      path += "A ".concat(newRadius[1], ",").concat(newRadius[1], ",0,0,").concat(clockWise, ",\\n        ").concat(x + width, ",").concat(y + ySign * newRadius[1]);\n    }\n\n    path += "L ".concat(x + width, ",").concat(y + height - ySign * newRadius[2]);\n\n    if (newRadius[2] > 0) {\n      path += "A ".concat(newRadius[2], ",").concat(newRadius[2], ",0,0,").concat(clockWise, ",\\n        ").concat(x + width - xSign * newRadius[2], ",").concat(y + height);\n    }\n\n    path += "L ".concat(x + xSign * newRadius[3], ",").concat(y + height);\n\n    if (newRadius[3] > 0) {\n      path += "A ".concat(newRadius[3], ",").concat(newRadius[3], ",0,0,").concat(clockWise, ",\\n        ").concat(x, ",").concat(y + height - ySign * newRadius[3]);\n    }\n\n    path += \'Z\';\n  } else if (maxRadius > 0 && radius === +radius && radius > 0) {\n    var _newRadius = Math.min(maxRadius, radius);\n\n    path = "M ".concat(x, ",").concat(y + ySign * _newRadius, "\\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + xSign * _newRadius, ",").concat(y, "\\n            L ").concat(x + width - xSign * _newRadius, ",").concat(y, "\\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + width, ",").concat(y + ySign * _newRadius, "\\n            L ").concat(x + width, ",").concat(y + height - ySign * _newRadius, "\\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + width - xSign * _newRadius, ",").concat(y + height, "\\n            L ").concat(x + xSign * _newRadius, ",").concat(y + height, "\\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x, ",").concat(y + height - ySign * _newRadius, " Z");\n  } else {\n    path = "M ".concat(x, ",").concat(y, " h ").concat(width, " v ").concat(height, " h ").concat(-width, " Z");\n  }\n\n  return path;\n};\n\nvar Rectangle_Rectangle = /*#__PURE__*/function (_PureComponent) {\n  Rectangle_inherits(Rectangle, _PureComponent);\n\n  var _super = Rectangle_createSuper(Rectangle);\n\n  function Rectangle() {\n    var _this;\n\n    Rectangle_classCallCheck(this, Rectangle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      totalLength: -1\n    };\n    _this.node = void 0;\n    return _this;\n  }\n\n  Rectangle_createClass(Rectangle, [{\n    key: "componentDidMount",\n\n    /* eslint-disable  react/no-did-mount-set-state */\n    value: function componentDidMount() {\n      if (this.node && this.node.getTotalLength) {\n        try {\n          var totalLength = this.node.getTotalLength();\n\n          if (totalLength) {\n            this.setState({\n              totalLength: totalLength\n            });\n          }\n        } catch (err) {// calculate total length error\n        }\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          x = _this$props.x,\n          y = _this$props.y,\n          width = _this$props.width,\n          height = _this$props.height,\n          radius = _this$props.radius,\n          className = _this$props.className;\n      var totalLength = this.state.totalLength;\n      var _this$props2 = this.props,\n          animationEasing = _this$props2.animationEasing,\n          animationDuration = _this$props2.animationDuration,\n          animationBegin = _this$props2.animationBegin,\n          isAnimationActive = _this$props2.isAnimationActive,\n          isUpdateAnimationActive = _this$props2.isUpdateAnimationActive;\n\n      if (x !== +x || y !== +y || width !== +width || height !== +height || width === 0 || height === 0) {\n        return null;\n      }\n\n      var layerClass = classnames_default()(\'recharts-rectangle\', className);\n\n      if (!isUpdateAnimationActive) {\n        return /*#__PURE__*/react_default.a.createElement("path", Rectangle_extends({}, types_filterProps(this.props, true), {\n          className: layerClass,\n          d: getRectangePath(x, y, width, height, radius)\n        }));\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        canBegin: totalLength > 0,\n        from: {\n          width: width,\n          height: height,\n          x: x,\n          y: y\n        },\n        to: {\n          width: width,\n          height: height,\n          x: x,\n          y: y\n        },\n        duration: animationDuration,\n        animationEasing: animationEasing,\n        isActive: isUpdateAnimationActive\n      }, function (_ref) {\n        var currWidth = _ref.width,\n            currHeight = _ref.height,\n            currX = _ref.x,\n            currY = _ref.y;\n        return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n          canBegin: totalLength > 0,\n          from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),\n          to: "".concat(totalLength, "px 0px"),\n          attributeName: "strokeDasharray",\n          begin: animationBegin,\n          duration: animationDuration,\n          isActive: isAnimationActive,\n          easing: animationEasing\n        }, /*#__PURE__*/react_default.a.createElement("path", Rectangle_extends({}, types_filterProps(_this2.props, true), {\n          className: layerClass,\n          d: getRectangePath(currX, currY, currWidth, currHeight, radius),\n          ref: function ref(node) {\n            _this2.node = node;\n          }\n        })));\n      });\n    }\n  }]);\n\n  return Rectangle;\n}(react["PureComponent"]);\n\nRectangle_Rectangle.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  // The radius of border\n  // The radius of four corners when radius is a number\n  // The radius of left-top, right-top, right-bottom, left-bottom when radius is an array\n  radius: 0,\n  isAnimationActive: false,\n  isUpdateAnimationActive: false,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: \'ease\'\n};\n/* harmony default export */ var shape_Rectangle = (Rectangle_Rectangle);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Polygon.js\nfunction Polygon_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Polygon_typeof = function _typeof(obj) { return typeof obj; }; } else { Polygon_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Polygon_typeof(obj); }\n\nfunction Polygon_extends() { Polygon_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Polygon_extends.apply(this, arguments); }\n\nfunction Polygon_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Polygon_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Polygon_createClass(Constructor, protoProps, staticProps) { if (protoProps) Polygon_defineProperties(Constructor.prototype, protoProps); if (staticProps) Polygon_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Polygon_createSuper(Derived) { return function () { var Super = Polygon_getPrototypeOf(Derived), result; if (Polygon_isNativeReflectConstruct()) { var NewTarget = Polygon_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Polygon_possibleConstructorReturn(this, result); }; }\n\nfunction Polygon_possibleConstructorReturn(self, call) { if (call && (Polygon_typeof(call) === "object" || typeof call === "function")) { return call; } return Polygon_assertThisInitialized(self); }\n\nfunction Polygon_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Polygon_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Polygon_getPrototypeOf(o) { Polygon_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Polygon_getPrototypeOf(o); }\n\nfunction Polygon_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Polygon_setPrototypeOf(subClass, superClass); }\n\nfunction Polygon_setPrototypeOf(o, p) { Polygon_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Polygon_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Polygon\n */\n\n\n\n\nvar getPolygonPoints = function getPolygonPoints(points) {\n  return points.reduce(function (result, entry) {\n    if (entry.x === +entry.x && entry.y === +entry.y) {\n      result.push([entry.x, entry.y]);\n    }\n\n    return result;\n  }, []).join(\' \');\n};\n\nvar Polygon_Polygon = /*#__PURE__*/function (_PureComponent) {\n  Polygon_inherits(Polygon, _PureComponent);\n\n  var _super = Polygon_createSuper(Polygon);\n\n  function Polygon() {\n    Polygon_classCallCheck(this, Polygon);\n\n    return _super.apply(this, arguments);\n  }\n\n  Polygon_createClass(Polygon, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          points = _this$props.points,\n          className = _this$props.className;\n\n      if (!points || !points.length) {\n        return null;\n      }\n\n      var layerClass = classnames_default()(\'recharts-polygon\', className);\n      return /*#__PURE__*/react_default.a.createElement("polygon", Polygon_extends({}, types_filterProps(this.props, true), {\n        className: layerClass,\n        points: getPolygonPoints(points)\n      }));\n    }\n  }]);\n\n  return Polygon;\n}(react["PureComponent"]);\n\n/* harmony default export */ var shape_Polygon = (Polygon_Polygon);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Dot.js\nfunction Dot_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Dot_typeof = function _typeof(obj) { return typeof obj; }; } else { Dot_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Dot_typeof(obj); }\n\nfunction Dot_extends() { Dot_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Dot_extends.apply(this, arguments); }\n\nfunction Dot_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Dot_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Dot_createClass(Constructor, protoProps, staticProps) { if (protoProps) Dot_defineProperties(Constructor.prototype, protoProps); if (staticProps) Dot_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Dot_createSuper(Derived) { return function () { var Super = Dot_getPrototypeOf(Derived), result; if (Dot_isNativeReflectConstruct()) { var NewTarget = Dot_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Dot_possibleConstructorReturn(this, result); }; }\n\nfunction Dot_possibleConstructorReturn(self, call) { if (call && (Dot_typeof(call) === "object" || typeof call === "function")) { return call; } return Dot_assertThisInitialized(self); }\n\nfunction Dot_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Dot_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Dot_getPrototypeOf(o) { Dot_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Dot_getPrototypeOf(o); }\n\nfunction Dot_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Dot_setPrototypeOf(subClass, superClass); }\n\nfunction Dot_setPrototypeOf(o, p) { Dot_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Dot_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Dot\n */\n\n\n\n\nvar Dot_Dot = /*#__PURE__*/function (_PureComponent) {\n  Dot_inherits(Dot, _PureComponent);\n\n  var _super = Dot_createSuper(Dot);\n\n  function Dot() {\n    Dot_classCallCheck(this, Dot);\n\n    return _super.apply(this, arguments);\n  }\n\n  Dot_createClass(Dot, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          cx = _this$props.cx,\n          cy = _this$props.cy,\n          r = _this$props.r,\n          className = _this$props.className;\n      var layerClass = classnames_default()(\'recharts-dot\', className);\n\n      if (cx === +cx && cy === +cy && r === +r) {\n        return /*#__PURE__*/react_default.a.createElement("circle", Dot_extends({}, types_filterProps(this.props), types_adaptEventHandlers(this.props), {\n          className: layerClass,\n          cx: cx,\n          cy: cy,\n          r: r\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return Dot;\n}(react["PureComponent"]);\n\n/* harmony default export */ var shape_Dot = (Dot_Dot);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Cross.js\nfunction Cross_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Cross_typeof = function _typeof(obj) { return typeof obj; }; } else { Cross_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Cross_typeof(obj); }\n\nfunction Cross_extends() { Cross_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Cross_extends.apply(this, arguments); }\n\nfunction Cross_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Cross_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Cross_createClass(Constructor, protoProps, staticProps) { if (protoProps) Cross_defineProperties(Constructor.prototype, protoProps); if (staticProps) Cross_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Cross_createSuper(Derived) { return function () { var Super = Cross_getPrototypeOf(Derived), result; if (Cross_isNativeReflectConstruct()) { var NewTarget = Cross_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Cross_possibleConstructorReturn(this, result); }; }\n\nfunction Cross_possibleConstructorReturn(self, call) { if (call && (Cross_typeof(call) === "object" || typeof call === "function")) { return call; } return Cross_assertThisInitialized(self); }\n\nfunction Cross_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Cross_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Cross_getPrototypeOf(o) { Cross_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Cross_getPrototypeOf(o); }\n\nfunction Cross_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Cross_setPrototypeOf(subClass, superClass); }\n\nfunction Cross_setPrototypeOf(o, p) { Cross_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Cross_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Cross\n */\n\n\n\n\n\nvar Cross_Cross = /*#__PURE__*/function (_PureComponent) {\n  Cross_inherits(Cross, _PureComponent);\n\n  var _super = Cross_createSuper(Cross);\n\n  function Cross() {\n    Cross_classCallCheck(this, Cross);\n\n    return _super.apply(this, arguments);\n  }\n\n  Cross_createClass(Cross, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          x = _this$props.x,\n          y = _this$props.y,\n          width = _this$props.width,\n          height = _this$props.height,\n          top = _this$props.top,\n          left = _this$props.left,\n          className = _this$props.className;\n\n      if (!DataUtils_isNumber(x) || !DataUtils_isNumber(y) || !DataUtils_isNumber(width) || !DataUtils_isNumber(height) || !DataUtils_isNumber(top) || !DataUtils_isNumber(left)) {\n        return null;\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("path", Cross_extends({}, types_filterProps(this.props, true), {\n        className: classnames_default()(\'recharts-cross\', className),\n        d: Cross.getPath(x, y, width, height, top, left)\n      }));\n    }\n  }], [{\n    key: "getPath",\n    value: function getPath(x, y, width, height, top, left) {\n      return "M".concat(x, ",").concat(top, "v").concat(height, "M").concat(left, ",").concat(y, "h").concat(width);\n    }\n  }]);\n\n  return Cross;\n}(react["PureComponent"]);\n\nCross_Cross.defaultProps = {\n  x: 0,\n  y: 0,\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0\n};\n/* harmony default export */ var shape_Cross = (Cross_Cross);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/polar/PolarGrid.js\nfunction PolarGrid_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { PolarGrid_typeof = function _typeof(obj) { return typeof obj; }; } else { PolarGrid_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return PolarGrid_typeof(obj); }\n\nfunction PolarGrid_extends() { PolarGrid_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PolarGrid_extends.apply(this, arguments); }\n\nfunction PolarGrid_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction PolarGrid_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { PolarGrid_ownKeys(Object(source), true).forEach(function (key) { PolarGrid_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { PolarGrid_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction PolarGrid_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction PolarGrid_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction PolarGrid_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PolarGrid_createClass(Constructor, protoProps, staticProps) { if (protoProps) PolarGrid_defineProperties(Constructor.prototype, protoProps); if (staticProps) PolarGrid_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction PolarGrid_createSuper(Derived) { return function () { var Super = PolarGrid_getPrototypeOf(Derived), result; if (PolarGrid_isNativeReflectConstruct()) { var NewTarget = PolarGrid_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PolarGrid_possibleConstructorReturn(this, result); }; }\n\nfunction PolarGrid_possibleConstructorReturn(self, call) { if (call && (PolarGrid_typeof(call) === "object" || typeof call === "function")) { return call; } return PolarGrid_assertThisInitialized(self); }\n\nfunction PolarGrid_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction PolarGrid_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction PolarGrid_getPrototypeOf(o) { PolarGrid_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PolarGrid_getPrototypeOf(o); }\n\nfunction PolarGrid_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) PolarGrid_setPrototypeOf(subClass, superClass); }\n\nfunction PolarGrid_setPrototypeOf(o, p) { PolarGrid_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PolarGrid_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Polar Grid\n */\n\n\n\n\nvar PolarGrid_PolarGrid = /*#__PURE__*/function (_PureComponent) {\n  PolarGrid_inherits(PolarGrid, _PureComponent);\n\n  var _super = PolarGrid_createSuper(PolarGrid);\n\n  function PolarGrid() {\n    PolarGrid_classCallCheck(this, PolarGrid);\n\n    return _super.apply(this, arguments);\n  }\n\n  PolarGrid_createClass(PolarGrid, [{\n    key: "getPolygonPath",\n    value: function getPolygonPath(radius) {\n      var _this$props = this.props,\n          cx = _this$props.cx,\n          cy = _this$props.cy,\n          polarAngles = _this$props.polarAngles;\n      var path = \'\';\n      polarAngles.forEach(function (angle, i) {\n        var point = polarToCartesian(cx, cy, radius, angle);\n\n        if (i) {\n          path += "L ".concat(point.x, ",").concat(point.y);\n        } else {\n          path += "M ".concat(point.x, ",").concat(point.y);\n        }\n      });\n      path += \'Z\';\n      return path;\n    }\n    /**\n     * Draw axis of radial line\n     * @return {[type]} The lines\n     */\n\n  }, {\n    key: "renderPolarAngles",\n    value: function renderPolarAngles() {\n      var _this$props2 = this.props,\n          cx = _this$props2.cx,\n          cy = _this$props2.cy,\n          innerRadius = _this$props2.innerRadius,\n          outerRadius = _this$props2.outerRadius,\n          polarAngles = _this$props2.polarAngles;\n\n      if (!polarAngles || !polarAngles.length) {\n        return null;\n      }\n\n      var props = PolarGrid_objectSpread({\n        stroke: \'#ccc\'\n      }, types_filterProps(this.props));\n\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-polar-grid-angle"\n      }, polarAngles.map(function (entry, i) {\n        var start = polarToCartesian(cx, cy, innerRadius, entry);\n        var end = polarToCartesian(cx, cy, outerRadius, entry);\n        return /*#__PURE__*/react_default.a.createElement("line", PolarGrid_extends({}, props, {\n          key: "line-".concat(i) // eslint-disable-line react/no-array-index-key\n          ,\n          x1: start.x,\n          y1: start.y,\n          x2: end.x,\n          y2: end.y\n        }));\n      }));\n    }\n    /**\n     * Draw concentric circles\n     * @param {Number} radius The radius of circle\n     * @param {Number} index  The index of circle\n     * @param {Object} extraProps Extra props\n     * @return {ReactElement} circle\n     */\n\n  }, {\n    key: "renderConcentricCircle",\n    value: function renderConcentricCircle(radius, index, extraProps) {\n      var _this$props3 = this.props,\n          cx = _this$props3.cx,\n          cy = _this$props3.cy;\n\n      var props = PolarGrid_objectSpread({\n        stroke: \'#ccc\'\n      }, types_filterProps(this.props), {\n        fill: \'none\'\n      }, extraProps);\n\n      return /*#__PURE__*/react_default.a.createElement("circle", PolarGrid_extends({}, props, {\n        className: "recharts-polar-grid-concentric-circle",\n        key: "circle-".concat(index),\n        cx: cx,\n        cy: cy,\n        r: radius\n      }));\n    }\n    /**\n     * Draw concentric polygons\n     * @param {Number} radius     The radius of polygon\n     * @param {Number} index      The index of polygon\n     * @param {Object} extraProps Extra props\n     * @return {ReactElement} polygon\n     */\n\n  }, {\n    key: "renderConcentricPolygon",\n    value: function renderConcentricPolygon(radius, index, extraProps) {\n      var props = PolarGrid_objectSpread({\n        stroke: \'#ccc\'\n      }, types_filterProps(this.props), {\n        fill: \'none\'\n      }, extraProps);\n\n      return /*#__PURE__*/react_default.a.createElement("path", PolarGrid_extends({}, props, {\n        className: "recharts-polar-grid-concentric-polygon",\n        key: "path-".concat(index),\n        d: this.getPolygonPath(radius)\n      }));\n    }\n    /**\n     * Draw concentric axis\n     * @return {ReactElement} Concentric axis\n     * @todo Optimize the name\n     */\n\n  }, {\n    key: "renderConcentricPath",\n    value: function renderConcentricPath() {\n      var _this = this;\n\n      var _this$props4 = this.props,\n          polarRadius = _this$props4.polarRadius,\n          gridType = _this$props4.gridType;\n\n      if (!polarRadius || !polarRadius.length) {\n        return null;\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-polar-grid-concentric"\n      }, polarRadius.map(function (entry, i) {\n        return gridType === \'circle\' ? _this.renderConcentricCircle(entry, i) : _this.renderConcentricPolygon(entry, i);\n      }));\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var outerRadius = this.props.outerRadius;\n\n      if (outerRadius <= 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-polar-grid"\n      }, this.renderPolarAngles(), this.renderConcentricPath());\n    }\n  }]);\n\n  return PolarGrid;\n}(react["PureComponent"]);\n\nPolarGrid_PolarGrid.displayName = \'PolarGrid\';\nPolarGrid_PolarGrid.defaultProps = {\n  cx: 0,\n  cy: 0,\n  innerRadius: 0,\n  outerRadius: 0,\n  gridType: \'polygon\'\n};\n/* harmony default export */ var polar_PolarGrid = (PolarGrid_PolarGrid);\n// EXTERNAL MODULE: ./node_modules/lodash/minBy.js\nvar minBy = __webpack_require__("gPaA");\nvar minBy_default = /*#__PURE__*/__webpack_require__.n(minBy);\n\n// EXTERNAL MODULE: ./node_modules/lodash/maxBy.js\nvar maxBy = __webpack_require__("FyPc");\nvar maxBy_default = /*#__PURE__*/__webpack_require__.n(maxBy);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/polar/PolarRadiusAxis.js\n\n\n\n\nfunction PolarRadiusAxis_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { PolarRadiusAxis_typeof = function _typeof(obj) { return typeof obj; }; } else { PolarRadiusAxis_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return PolarRadiusAxis_typeof(obj); }\n\nfunction PolarRadiusAxis_extends() { PolarRadiusAxis_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PolarRadiusAxis_extends.apply(this, arguments); }\n\nfunction PolarRadiusAxis_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction PolarRadiusAxis_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { PolarRadiusAxis_ownKeys(Object(source), true).forEach(function (key) { PolarRadiusAxis_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { PolarRadiusAxis_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction PolarRadiusAxis_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction PolarRadiusAxis_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PolarRadiusAxis_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction PolarRadiusAxis_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction PolarRadiusAxis_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction PolarRadiusAxis_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PolarRadiusAxis_createClass(Constructor, protoProps, staticProps) { if (protoProps) PolarRadiusAxis_defineProperties(Constructor.prototype, protoProps); if (staticProps) PolarRadiusAxis_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction PolarRadiusAxis_createSuper(Derived) { return function () { var Super = PolarRadiusAxis_getPrototypeOf(Derived), result; if (PolarRadiusAxis_isNativeReflectConstruct()) { var NewTarget = PolarRadiusAxis_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PolarRadiusAxis_possibleConstructorReturn(this, result); }; }\n\nfunction PolarRadiusAxis_possibleConstructorReturn(self, call) { if (call && (PolarRadiusAxis_typeof(call) === "object" || typeof call === "function")) { return call; } return PolarRadiusAxis_assertThisInitialized(self); }\n\nfunction PolarRadiusAxis_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction PolarRadiusAxis_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction PolarRadiusAxis_getPrototypeOf(o) { PolarRadiusAxis_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PolarRadiusAxis_getPrototypeOf(o); }\n\nfunction PolarRadiusAxis_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) PolarRadiusAxis_setPrototypeOf(subClass, superClass); }\n\nfunction PolarRadiusAxis_setPrototypeOf(o, p) { PolarRadiusAxis_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PolarRadiusAxis_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview The axis of polar coordinate system\n */\n\n\n\n\n\n\n\nvar PolarRadiusAxis_PolarRadiusAxis = /*#__PURE__*/function (_PureComponent) {\n  PolarRadiusAxis_inherits(PolarRadiusAxis, _PureComponent);\n\n  var _super = PolarRadiusAxis_createSuper(PolarRadiusAxis);\n\n  function PolarRadiusAxis() {\n    PolarRadiusAxis_classCallCheck(this, PolarRadiusAxis);\n\n    return _super.apply(this, arguments);\n  }\n\n  PolarRadiusAxis_createClass(PolarRadiusAxis, [{\n    key: "getTickValueCoord",\n\n    /**\n     * Calculate the coordinate of tick\n     * @param  {Number} coordinate The radius of tick\n     * @return {Object} (x, y)\n     */\n    value: function getTickValueCoord(_ref) {\n      var coordinate = _ref.coordinate;\n      var _this$props = this.props,\n          angle = _this$props.angle,\n          cx = _this$props.cx,\n          cy = _this$props.cy;\n      return polarToCartesian(cx, cy, coordinate, angle);\n    }\n  }, {\n    key: "getTickTextAnchor",\n    value: function getTickTextAnchor() {\n      var orientation = this.props.orientation;\n      var textAnchor;\n\n      switch (orientation) {\n        case \'left\':\n          textAnchor = \'end\';\n          break;\n\n        case \'right\':\n          textAnchor = \'start\';\n          break;\n\n        default:\n          textAnchor = \'middle\';\n          break;\n      }\n\n      return textAnchor;\n    }\n  }, {\n    key: "getViewBox",\n    value: function getViewBox() {\n      var _this$props2 = this.props,\n          cx = _this$props2.cx,\n          cy = _this$props2.cy,\n          angle = _this$props2.angle,\n          ticks = _this$props2.ticks;\n\n      var maxRadiusTick = maxBy_default()(ticks, function (entry) {\n        return entry.coordinate || 0;\n      });\n\n      var minRadiusTick = minBy_default()(ticks, function (entry) {\n        return entry.coordinate || 0;\n      });\n\n      return {\n        cx: cx,\n        cy: cy,\n        startAngle: angle,\n        endAngle: angle,\n        innerRadius: minRadiusTick.coordinate || 0,\n        outerRadius: maxRadiusTick.coordinate || 0\n      };\n    }\n  }, {\n    key: "renderAxisLine",\n    value: function renderAxisLine() {\n      var _this$props3 = this.props,\n          cx = _this$props3.cx,\n          cy = _this$props3.cy,\n          angle = _this$props3.angle,\n          ticks = _this$props3.ticks,\n          axisLine = _this$props3.axisLine,\n          others = PolarRadiusAxis_objectWithoutProperties(_this$props3, ["cx", "cy", "angle", "ticks", "axisLine"]);\n\n      var extent = ticks.reduce(function (result, entry) {\n        return [Math.min(result[0], entry.coordinate), Math.max(result[1], entry.coordinate)];\n      }, [Infinity, -Infinity]);\n      var point0 = polarToCartesian(cx, cy, extent[0], angle);\n      var point1 = polarToCartesian(cx, cy, extent[1], angle);\n\n      var props = PolarRadiusAxis_objectSpread({}, types_filterProps(others), {\n        fill: \'none\'\n      }, types_filterProps(axisLine), {\n        x1: point0.x,\n        y1: point0.y,\n        x2: point1.x,\n        y2: point1.y\n      });\n\n      return /*#__PURE__*/react_default.a.createElement("line", PolarRadiusAxis_extends({\n        className: "recharts-polar-radius-axis-line"\n      }, props));\n    }\n  }, {\n    key: "renderTicks",\n    value: function renderTicks() {\n      var _this = this;\n\n      var _this$props4 = this.props,\n          ticks = _this$props4.ticks,\n          tick = _this$props4.tick,\n          angle = _this$props4.angle,\n          tickFormatter = _this$props4.tickFormatter,\n          stroke = _this$props4.stroke,\n          others = PolarRadiusAxis_objectWithoutProperties(_this$props4, ["ticks", "tick", "angle", "tickFormatter", "stroke"]);\n\n      var textAnchor = this.getTickTextAnchor();\n      var axisProps = types_filterProps(others);\n      var customTickProps = types_filterProps(tick);\n      var items = ticks.map(function (entry, i) {\n        var coord = _this.getTickValueCoord(entry);\n\n        var tickProps = PolarRadiusAxis_objectSpread({\n          textAnchor: textAnchor,\n          transform: "rotate(".concat(90 - angle, ", ").concat(coord.x, ", ").concat(coord.y, ")")\n        }, axisProps, {\n          stroke: \'none\',\n          fill: stroke\n        }, customTickProps, {\n          index: i\n        }, coord, {\n          payload: entry\n        });\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, PolarRadiusAxis_extends({\n          className: "recharts-polar-radius-axis-tick",\n          key: "tick-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }, types_adaptEventsOfChild(_this.props, entry, i)), PolarRadiusAxis.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value, i) : entry.value));\n      });\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-polar-radius-axis-ticks"\n      }, items);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props5 = this.props,\n          ticks = _this$props5.ticks,\n          axisLine = _this$props5.axisLine,\n          tick = _this$props5.tick;\n\n      if (!ticks || !ticks.length) {\n        return null;\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-polar-radius-axis"\n      }, axisLine && this.renderAxisLine(), tick && this.renderTicks(), component_Label.renderCallByParent(this.props, this.getViewBox()));\n    }\n  }], [{\n    key: "renderTickItem",\n    value: function renderTickItem(option, props, value) {\n      var tickItem;\n\n      if (react_default.a.isValidElement(option)) {\n        tickItem = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        tickItem = option(props);\n      } else {\n        tickItem = /*#__PURE__*/react_default.a.createElement(component_Text, PolarRadiusAxis_extends({}, props, {\n          className: "recharts-polar-radius-axis-tick-value"\n        }), value);\n      }\n\n      return tickItem;\n    }\n  }]);\n\n  return PolarRadiusAxis;\n}(react["PureComponent"]);\n\nPolarRadiusAxis_PolarRadiusAxis.displayName = \'PolarRadiusAxis\';\nPolarRadiusAxis_PolarRadiusAxis.axisType = \'radiusAxis\';\nPolarRadiusAxis_PolarRadiusAxis.defaultProps = {\n  type: \'number\',\n  radiusAxisId: 0,\n  cx: 0,\n  cy: 0,\n  angle: 0,\n  orientation: \'right\',\n  stroke: \'#ccc\',\n  axisLine: true,\n  tick: true,\n  tickCount: 5,\n  domain: [0, \'auto\'],\n  allowDataOverflow: false,\n  scale: \'auto\',\n  allowDuplicatedCategory: true\n};\n/* harmony default export */ var polar_PolarRadiusAxis = (PolarRadiusAxis_PolarRadiusAxis);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/polar/PolarAngleAxis.js\n\n\nfunction PolarAngleAxis_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { PolarAngleAxis_typeof = function _typeof(obj) { return typeof obj; }; } else { PolarAngleAxis_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return PolarAngleAxis_typeof(obj); }\n\nfunction PolarAngleAxis_extends() { PolarAngleAxis_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PolarAngleAxis_extends.apply(this, arguments); }\n\nfunction PolarAngleAxis_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction PolarAngleAxis_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { PolarAngleAxis_ownKeys(Object(source), true).forEach(function (key) { PolarAngleAxis_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { PolarAngleAxis_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction PolarAngleAxis_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction PolarAngleAxis_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction PolarAngleAxis_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction PolarAngleAxis_createClass(Constructor, protoProps, staticProps) { if (protoProps) PolarAngleAxis_defineProperties(Constructor.prototype, protoProps); if (staticProps) PolarAngleAxis_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction PolarAngleAxis_createSuper(Derived) { return function () { var Super = PolarAngleAxis_getPrototypeOf(Derived), result; if (PolarAngleAxis_isNativeReflectConstruct()) { var NewTarget = PolarAngleAxis_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PolarAngleAxis_possibleConstructorReturn(this, result); }; }\n\nfunction PolarAngleAxis_possibleConstructorReturn(self, call) { if (call && (PolarAngleAxis_typeof(call) === "object" || typeof call === "function")) { return call; } return PolarAngleAxis_assertThisInitialized(self); }\n\nfunction PolarAngleAxis_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction PolarAngleAxis_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction PolarAngleAxis_getPrototypeOf(o) { PolarAngleAxis_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PolarAngleAxis_getPrototypeOf(o); }\n\nfunction PolarAngleAxis_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) PolarAngleAxis_setPrototypeOf(subClass, superClass); }\n\nfunction PolarAngleAxis_setPrototypeOf(o, p) { PolarAngleAxis_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PolarAngleAxis_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Axis of radial direction\n */\n\n\n\n\n\n\n\nvar PolarAngleAxis_RADIAN = Math.PI / 180;\nvar eps = 1e-5;\n\nvar PolarAngleAxis_PolarAngleAxis = /*#__PURE__*/function (_PureComponent) {\n  PolarAngleAxis_inherits(PolarAngleAxis, _PureComponent);\n\n  var _super = PolarAngleAxis_createSuper(PolarAngleAxis);\n\n  function PolarAngleAxis() {\n    PolarAngleAxis_classCallCheck(this, PolarAngleAxis);\n\n    return _super.apply(this, arguments);\n  }\n\n  PolarAngleAxis_createClass(PolarAngleAxis, [{\n    key: "getTickLineCoord",\n\n    /**\n     * Calculate the coordinate of line endpoint\n     * @param  {Object} data The Data if ticks\n     * @return {Object} (x0, y0): The start point of text,\n     *                  (x1, y1): The end point close to text,\n     *                  (x2, y2): The end point close to axis\n     */\n    value: function getTickLineCoord(data) {\n      var _this$props = this.props,\n          cx = _this$props.cx,\n          cy = _this$props.cy,\n          radius = _this$props.radius,\n          orientation = _this$props.orientation,\n          tickSize = _this$props.tickSize;\n      var tickLineSize = tickSize || 8;\n      var p1 = polarToCartesian(cx, cy, radius, data.coordinate);\n      var p2 = polarToCartesian(cx, cy, radius + (orientation === \'inner\' ? -1 : 1) * tickLineSize, data.coordinate);\n      return {\n        x1: p1.x,\n        y1: p1.y,\n        x2: p2.x,\n        y2: p2.y\n      };\n    }\n    /**\n     * Get the text-anchor of each tick\n     * @param  {Object} data Data of ticks\n     * @return {String} text-anchor\n     */\n\n  }, {\n    key: "getTickTextAnchor",\n    value: function getTickTextAnchor(data) {\n      var orientation = this.props.orientation;\n      var cos = Math.cos(-data.coordinate * PolarAngleAxis_RADIAN);\n      var textAnchor;\n\n      if (cos > eps) {\n        textAnchor = orientation === \'outer\' ? \'start\' : \'end\';\n      } else if (cos < -eps) {\n        textAnchor = orientation === \'outer\' ? \'end\' : \'start\';\n      } else {\n        textAnchor = \'middle\';\n      }\n\n      return textAnchor;\n    }\n  }, {\n    key: "renderAxisLine",\n    value: function renderAxisLine() {\n      var _this$props2 = this.props,\n          cx = _this$props2.cx,\n          cy = _this$props2.cy,\n          radius = _this$props2.radius,\n          axisLine = _this$props2.axisLine,\n          axisLineType = _this$props2.axisLineType;\n\n      var props = PolarAngleAxis_objectSpread({}, types_filterProps(this.props), {\n        fill: \'none\'\n      }, types_filterProps(axisLine));\n\n      if (axisLineType === \'circle\') {\n        return /*#__PURE__*/react_default.a.createElement(shape_Dot, PolarAngleAxis_extends({\n          className: "recharts-polar-angle-axis-line"\n        }, props, {\n          cx: cx,\n          cy: cy,\n          r: radius\n        }));\n      }\n\n      var ticks = this.props.ticks;\n      var points = ticks.map(function (entry) {\n        return polarToCartesian(cx, cy, radius, entry.coordinate);\n      });\n      return /*#__PURE__*/react_default.a.createElement(shape_Polygon, PolarAngleAxis_extends({\n        className: "recharts-polar-angle-axis-line"\n      }, props, {\n        points: points\n      }));\n    }\n  }, {\n    key: "renderTicks",\n    value: function renderTicks() {\n      var _this = this;\n\n      var _this$props3 = this.props,\n          ticks = _this$props3.ticks,\n          tick = _this$props3.tick,\n          tickLine = _this$props3.tickLine,\n          tickFormatter = _this$props3.tickFormatter,\n          stroke = _this$props3.stroke;\n      var axisProps = types_filterProps(this.props);\n      var customTickProps = types_filterProps(tick);\n\n      var tickLineProps = PolarAngleAxis_objectSpread({}, axisProps, {\n        fill: \'none\'\n      }, types_filterProps(tickLine));\n\n      var items = ticks.map(function (entry, i) {\n        var lineCoord = _this.getTickLineCoord(entry);\n\n        var textAnchor = _this.getTickTextAnchor(entry);\n\n        var tickProps = PolarAngleAxis_objectSpread({\n          textAnchor: textAnchor\n        }, axisProps, {\n          stroke: \'none\',\n          fill: stroke\n        }, customTickProps, {\n          index: i,\n          payload: entry,\n          x: lineCoord.x2,\n          y: lineCoord.y2\n        });\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, PolarAngleAxis_extends({\n          className: "recharts-polar-angle-axis-tick",\n          key: "tick-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }, types_adaptEventsOfChild(_this.props, entry, i)), tickLine && /*#__PURE__*/react_default.a.createElement("line", PolarAngleAxis_extends({\n          className: "recharts-polar-angle-axis-tick-line"\n        }, tickLineProps, lineCoord)), tick && PolarAngleAxis.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value, i) : entry.value));\n      });\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-polar-angle-axis-ticks"\n      }, items);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props4 = this.props,\n          ticks = _this$props4.ticks,\n          radius = _this$props4.radius,\n          axisLine = _this$props4.axisLine;\n\n      if (radius <= 0 || !ticks || !ticks.length) {\n        return null;\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-polar-angle-axis"\n      }, axisLine && this.renderAxisLine(), this.renderTicks());\n    }\n  }], [{\n    key: "renderTickItem",\n    value: function renderTickItem(option, props, value) {\n      var tickItem;\n\n      if (react_default.a.isValidElement(option)) {\n        tickItem = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        tickItem = option(props);\n      } else {\n        tickItem = /*#__PURE__*/react_default.a.createElement(component_Text, PolarAngleAxis_extends({}, props, {\n          className: "recharts-polar-angle-axis-tick-value"\n        }), value);\n      }\n\n      return tickItem;\n    }\n  }]);\n\n  return PolarAngleAxis;\n}(react["PureComponent"]);\n\nPolarAngleAxis_PolarAngleAxis.displayName = \'PolarAngleAxis\';\nPolarAngleAxis_PolarAngleAxis.axisType = \'angleAxis\';\nPolarAngleAxis_PolarAngleAxis.defaultProps = {\n  type: \'category\',\n  angleAxisId: 0,\n  scale: \'auto\',\n  cx: 0,\n  cy: 0,\n  domain: [0, \'auto\'],\n  orientation: \'outer\',\n  axisLine: true,\n  tickLine: true,\n  tickSize: 8,\n  tick: true,\n  hide: false,\n  allowDuplicatedCategory: true\n};\n/* harmony default export */ var polar_PolarAngleAxis = (PolarAngleAxis_PolarAngleAxis);\n// EXTERNAL MODULE: ./node_modules/lodash/isPlainObject.js\nvar isPlainObject = __webpack_require__("YO3V");\nvar isPlainObject_default = /*#__PURE__*/__webpack_require__.n(isPlainObject);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/polar/Pie.js\n\n\n\n\n\n\nfunction Pie_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Pie_typeof = function _typeof(obj) { return typeof obj; }; } else { Pie_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Pie_typeof(obj); }\n\nfunction Pie_extends() { Pie_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Pie_extends.apply(this, arguments); }\n\nfunction Pie_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Pie_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Pie_ownKeys(Object(source), true).forEach(function (key) { Pie_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Pie_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Pie_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Pie_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Pie_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Pie_createClass(Constructor, protoProps, staticProps) { if (protoProps) Pie_defineProperties(Constructor.prototype, protoProps); if (staticProps) Pie_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Pie_createSuper(Derived) { return function () { var Super = Pie_getPrototypeOf(Derived), result; if (Pie_isNativeReflectConstruct()) { var NewTarget = Pie_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Pie_possibleConstructorReturn(this, result); }; }\n\nfunction Pie_possibleConstructorReturn(self, call) { if (call && (Pie_typeof(call) === "object" || typeof call === "function")) { return call; } return Pie_assertThisInitialized(self); }\n\nfunction Pie_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Pie_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Pie_getPrototypeOf(o) { Pie_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Pie_getPrototypeOf(o); }\n\nfunction Pie_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Pie_setPrototypeOf(subClass, superClass); }\n\nfunction Pie_setPrototypeOf(o, p) { Pie_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Pie_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Render sectors of a pie\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Pie_Pie = /*#__PURE__*/function (_PureComponent) {\n  Pie_inherits(Pie, _PureComponent);\n\n  var _super = Pie_createSuper(Pie);\n\n  function Pie() {\n    var _this;\n\n    Pie_classCallCheck(this, Pie);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: false\n    };\n    _this.id = uniqueId(\'recharts-pie-\');\n\n    _this.cachePrevData = function (sectors) {\n      _this.setState({\n        prevSectors: sectors\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (isFunction_default()(onAnimationEnd)) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (isFunction_default()(onAnimationStart)) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  Pie_createClass(Pie, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          sectors = _this$props.sectors;\n\n      if (nextProps.isAnimationActive !== this.props.isAnimationActive) {\n        this.cachePrevData([]);\n      } else if (nextProps.animationId !== animationId) {\n        this.cachePrevData(sectors);\n      }\n    }\n  }, {\n    key: "isActiveIndex",\n    value: function isActiveIndex(i) {\n      var activeIndex = this.props.activeIndex;\n\n      if (Array.isArray(activeIndex)) {\n        return activeIndex.indexOf(i) !== -1;\n      }\n\n      return i === activeIndex;\n    }\n  }, {\n    key: "renderLabels",\n    value: function renderLabels(sectors) {\n      var isAnimationActive = this.props.isAnimationActive;\n\n      if (isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props2 = this.props,\n          label = _this$props2.label,\n          labelLine = _this$props2.labelLine,\n          dataKey = _this$props2.dataKey,\n          valueKey = _this$props2.valueKey;\n      var pieProps = types_filterProps(this.props);\n      var customLabelProps = types_filterProps(label);\n      var customLabelLineProps = types_filterProps(labelLine);\n      var offsetRadius = label && label.offsetRadius || 20;\n      var labels = sectors.map(function (entry, i) {\n        var midAngle = (entry.startAngle + entry.endAngle) / 2;\n        var endPoint = polarToCartesian(entry.cx, entry.cy, entry.outerRadius + offsetRadius, midAngle);\n\n        var labelProps = Pie_objectSpread({}, pieProps, {}, entry, {\n          stroke: \'none\'\n        }, customLabelProps, {\n          index: i,\n          textAnchor: Pie.getTextAnchor(endPoint.x, entry.cx)\n        }, endPoint);\n\n        var lineProps = Pie_objectSpread({}, pieProps, {}, entry, {\n          fill: \'none\',\n          stroke: entry.fill\n        }, customLabelLineProps, {\n          index: i,\n          points: [polarToCartesian(entry.cx, entry.cy, entry.outerRadius, midAngle), endPoint],\n          key: \'line\'\n        });\n\n        var realDataKey = dataKey; // TODO: compatible to lower versions\n\n        if (isNil_default()(dataKey) && isNil_default()(valueKey)) {\n          realDataKey = \'value\';\n        } else if (isNil_default()(dataKey)) {\n          realDataKey = valueKey;\n        }\n\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/no-array-index-key\n          react_default.a.createElement(container_Layer, {\n            key: "label-".concat(i)\n          }, labelLine && Pie.renderLabelLineItem(labelLine, lineProps), Pie.renderLabelItem(label, labelProps, getValueByDataKey(entry, realDataKey)))\n        );\n      });\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-pie-labels"\n      }, labels);\n    }\n  }, {\n    key: "renderSectorsStatically",\n    value: function renderSectorsStatically(sectors) {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          activeShape = _this$props3.activeShape,\n          blendStroke = _this$props3.blendStroke;\n      return sectors.map(function (entry, i) {\n        var sectorOptions = _this2.isActiveIndex(i) ? activeShape : null;\n\n        var sectorProps = Pie_objectSpread({}, entry, {\n          stroke: blendStroke ? entry.fill : entry.stroke\n        });\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, Pie_extends({\n          className: "recharts-pie-sector"\n        }, types_adaptEventsOfChild(_this2.props, entry, i), {\n          key: "sector-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }), Pie.renderSectorItem(sectorOptions, sectorProps));\n      });\n    }\n  }, {\n    key: "renderSectorsWithAnimation",\n    value: function renderSectorsWithAnimation() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          sectors = _this$props4.sectors,\n          isAnimationActive = _this$props4.isAnimationActive,\n          animationBegin = _this$props4.animationBegin,\n          animationDuration = _this$props4.animationDuration,\n          animationEasing = _this$props4.animationEasing,\n          animationId = _this$props4.animationId;\n      var prevSectors = this.state.prevSectors;\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "pie-".concat(animationId),\n        onAnimationStart: this.handleAnimationStart,\n        onAnimationEnd: this.handleAnimationEnd\n      }, function (_ref) {\n        var t = _ref.t;\n        var stepData = [];\n        var first = sectors && sectors[0];\n        var curAngle = first.startAngle;\n        sectors.forEach(function (entry, index) {\n          var prev = prevSectors && prevSectors[index];\n          var paddingAngle = index > 0 ? get_default()(entry, \'paddingAngle\', 0) : 0;\n\n          if (prev) {\n            var angleIp = interpolateNumber(prev.endAngle - prev.startAngle, entry.endAngle - entry.startAngle);\n\n            var latest = Pie_objectSpread({}, entry, {\n              startAngle: curAngle + paddingAngle,\n              endAngle: curAngle + angleIp(t) + paddingAngle\n            });\n\n            stepData.push(latest);\n            curAngle = latest.endAngle;\n          } else {\n            var endAngle = entry.endAngle,\n                startAngle = entry.startAngle;\n            var interpolatorAngle = interpolateNumber(0, endAngle - startAngle);\n            var deltaAngle = interpolatorAngle(t);\n\n            var _latest = Pie_objectSpread({}, entry, {\n              startAngle: curAngle + paddingAngle,\n              endAngle: curAngle + deltaAngle + paddingAngle\n            });\n\n            stepData.push(_latest);\n            curAngle = _latest.endAngle;\n          }\n        });\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, null, _this3.renderSectorsStatically(stepData));\n      });\n    }\n  }, {\n    key: "renderSectors",\n    value: function renderSectors() {\n      var _this$props5 = this.props,\n          sectors = _this$props5.sectors,\n          isAnimationActive = _this$props5.isAnimationActive;\n      var prevSectors = this.state.prevSectors;\n\n      if (isAnimationActive && sectors && sectors.length && (!prevSectors || !isEqual_default()(prevSectors, sectors))) {\n        return this.renderSectorsWithAnimation();\n      }\n\n      return this.renderSectorsStatically(sectors);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props6 = this.props,\n          hide = _this$props6.hide,\n          sectors = _this$props6.sectors,\n          className = _this$props6.className,\n          label = _this$props6.label,\n          cx = _this$props6.cx,\n          cy = _this$props6.cy,\n          innerRadius = _this$props6.innerRadius,\n          outerRadius = _this$props6.outerRadius,\n          isAnimationActive = _this$props6.isAnimationActive;\n      var prevSectors = this.state.prevSectors;\n\n      if (hide || !sectors || !sectors.length || !DataUtils_isNumber(cx) || !DataUtils_isNumber(cy) || !DataUtils_isNumber(innerRadius) || !DataUtils_isNumber(outerRadius)) {\n        return null;\n      }\n\n      var layerClass = classnames_default()(\'recharts-pie\', className);\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass\n      }, this.renderSectors(), label && this.renderLabels(sectors), component_Label.renderCallByParent(this.props, null, false), (!isAnimationActive || prevSectors && isEqual_default()(prevSectors, sectors)) && component_LabelList.renderCallByParent(this.props, sectors, false));\n    }\n  }], [{\n    key: "getTextAnchor",\n    value: function getTextAnchor(x, cx) {\n      if (x > cx) {\n        return \'start\';\n      }\n\n      if (x < cx) {\n        return \'end\';\n      }\n\n      return \'middle\';\n    }\n  }, {\n    key: "renderLabelLineItem",\n    value: function renderLabelLineItem(option, props) {\n      if (react_default.a.isValidElement(option)) {\n        return react_default.a.cloneElement(option, props);\n      }\n\n      if (isFunction_default()(option)) {\n        return option(props);\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(shape_Curve, Pie_extends({}, props, {\n        type: "linear",\n        className: "recharts-pie-label-line"\n      }));\n    }\n  }, {\n    key: "renderLabelItem",\n    value: function renderLabelItem(option, props, value) {\n      if (react_default.a.isValidElement(option)) {\n        return react_default.a.cloneElement(option, props);\n      }\n\n      var label = value;\n\n      if (isFunction_default()(option)) {\n        label = option(props);\n\n        if (react_default.a.isValidElement(label)) {\n          return label;\n        }\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(component_Text, Pie_extends({}, props, {\n        alignmentBaseline: "middle",\n        className: "recharts-pie-label-text"\n      }), label);\n    }\n  }, {\n    key: "renderSectorItem",\n    value: function renderSectorItem(option, props) {\n      if (react_default.a.isValidElement(option)) {\n        return react_default.a.cloneElement(option, props);\n      }\n\n      if (isFunction_default()(option)) {\n        return option(props);\n      }\n\n      if (isPlainObject_default()(option)) {\n        return /*#__PURE__*/react_default.a.createElement(shape_Sector, Pie_extends({}, props, option));\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(shape_Sector, props);\n    }\n  }]);\n\n  return Pie;\n}(react["PureComponent"]);\n\nPie_Pie.displayName = \'Pie\';\nPie_Pie.defaultProps = {\n  stroke: \'#fff\',\n  fill: \'#808080\',\n  legendType: \'rect\',\n  cx: \'50%\',\n  cy: \'50%\',\n  startAngle: 0,\n  endAngle: 360,\n  innerRadius: 0,\n  outerRadius: \'80%\',\n  paddingAngle: 0,\n  labelLine: true,\n  hide: false,\n  minAngle: 0,\n  isAnimationActive: !util_Global.isSsr,\n  animationBegin: 400,\n  animationDuration: 1500,\n  animationEasing: \'ease\',\n  nameKey: \'name\',\n  blendStroke: false\n};\n\nPie_Pie.parseDeltaAngle = function (startAngle, endAngle) {\n  var sign = mathSign(endAngle - startAngle);\n  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n  return sign * deltaAngle;\n};\n\nPie_Pie.getRealPieData = function (item) {\n  var _item$props = item.props,\n      data = _item$props.data,\n      children = _item$props.children;\n  var presentationProps = types_filterProps(item.props);\n  var cells = ReactUtils_findAllByType(children, component_Cell.displayName);\n\n  if (data && data.length) {\n    return data.map(function (entry, index) {\n      return Pie_objectSpread({\n        payload: entry\n      }, presentationProps, {}, entry, {}, cells && cells[index] && cells[index].props);\n    });\n  }\n\n  if (cells && cells.length) {\n    return cells.map(function (cell) {\n      return Pie_objectSpread({}, presentationProps, {}, cell.props);\n    });\n  }\n\n  return [];\n};\n\nPie_Pie.parseCoordinateOfPie = function (item, offset) {\n  var top = offset.top,\n      left = offset.left,\n      width = offset.width,\n      height = offset.height;\n  var maxPieRadius = getMaxRadius(width, height);\n  var cx = left + DataUtils_getPercentValue(item.props.cx, width, width / 2);\n  var cy = top + DataUtils_getPercentValue(item.props.cy, height, height / 2);\n  var innerRadius = DataUtils_getPercentValue(item.props.innerRadius, maxPieRadius, 0);\n  var outerRadius = DataUtils_getPercentValue(item.props.outerRadius, maxPieRadius, maxPieRadius * 0.8);\n  var maxRadius = item.props.maxRadius || Math.sqrt(width * width + height * height) / 2;\n  return {\n    cx: cx,\n    cy: cy,\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    maxRadius: maxRadius\n  };\n};\n\nPie_Pie.getComposedData = function (_ref2) {\n  var item = _ref2.item,\n      offset = _ref2.offset,\n      onItemMouseLeave = _ref2.onItemMouseLeave,\n      onItemMouseEnter = _ref2.onItemMouseEnter,\n      onItemClick = _ref2.onItemClick;\n  var pieData = Pie_Pie.getRealPieData(item);\n\n  if (!pieData || !pieData.length) {\n    return null;\n  }\n\n  var _item$props2 = item.props,\n      cornerRadius = _item$props2.cornerRadius,\n      startAngle = _item$props2.startAngle,\n      endAngle = _item$props2.endAngle,\n      paddingAngle = _item$props2.paddingAngle,\n      dataKey = _item$props2.dataKey,\n      nameKey = _item$props2.nameKey,\n      valueKey = _item$props2.valueKey,\n      tooltipType = _item$props2.tooltipType;\n  var minAngle = Math.abs(item.props.minAngle);\n  var coordinate = Pie_Pie.parseCoordinateOfPie(item, offset);\n  var len = pieData.length;\n  var deltaAngle = Pie_Pie.parseDeltaAngle(startAngle, endAngle);\n  var absDeltaAngle = Math.abs(deltaAngle);\n  var totalPadingAngle = (absDeltaAngle >= 360 ? len : len - 1) * paddingAngle;\n  var realTotalAngle = absDeltaAngle - len * minAngle - totalPadingAngle;\n  var realDataKey = dataKey;\n\n  if (isNil_default()(dataKey) && isNil_default()(valueKey)) {\n    warn(false, "Use \\"dataKey\\" to specify the value of pie,\\n      the props \\"valueKey\\" will be deprecated in 1.1.0");\n    realDataKey = \'value\';\n  } else if (isNil_default()(dataKey)) {\n    warn(false, "Use \\"dataKey\\" to specify the value of pie,\\n      the props \\"valueKey\\" will be deprecated in 1.1.0");\n    realDataKey = valueKey;\n  }\n\n  var sum = pieData.reduce(function (result, entry) {\n    var val = getValueByDataKey(entry, realDataKey, 0);\n    return result + (DataUtils_isNumber(val) ? val : 0);\n  }, 0);\n  var sectors;\n\n  if (sum > 0) {\n    var prev;\n    sectors = pieData.map(function (entry, i) {\n      var val = getValueByDataKey(entry, realDataKey, 0);\n      var name = getValueByDataKey(entry, nameKey, i);\n      var percent = (DataUtils_isNumber(val) ? val : 0) / sum;\n      var tempStartAngle;\n\n      if (i) {\n        tempStartAngle = prev.endAngle + mathSign(deltaAngle) * paddingAngle;\n      } else {\n        tempStartAngle = startAngle;\n      }\n\n      var tempEndAngle = tempStartAngle + mathSign(deltaAngle) * (minAngle + percent * realTotalAngle);\n      var midAngle = (tempStartAngle + tempEndAngle) / 2;\n      var middleRadius = (coordinate.innerRadius + coordinate.outerRadius) / 2;\n      var tooltipPayload = [{\n        name: name,\n        value: val,\n        payload: entry,\n        dataKey: realDataKey,\n        type: tooltipType\n      }];\n      var tooltipPosition = polarToCartesian(coordinate.cx, coordinate.cy, middleRadius, midAngle);\n      prev = Pie_objectSpread({\n        percent: percent,\n        cornerRadius: cornerRadius,\n        name: name,\n        tooltipPayload: tooltipPayload,\n        midAngle: midAngle,\n        middleRadius: middleRadius,\n        tooltipPosition: tooltipPosition\n      }, entry, {}, coordinate, {\n        value: getValueByDataKey(entry, realDataKey),\n        startAngle: tempStartAngle,\n        endAngle: tempEndAngle,\n        payload: entry,\n        paddingAngle: mathSign(deltaAngle) * paddingAngle\n      });\n      return prev;\n    });\n  }\n\n  return Pie_objectSpread({}, coordinate, {\n    sectors: sectors,\n    data: pieData,\n    onMouseLeave: isFunction_default()(onItemMouseLeave) ? onItemMouseLeave : item.props.onMouseLeave,\n    onMouseEnter: isFunction_default()(onItemMouseEnter) ? onItemMouseEnter : item.props.onMouseEnter,\n    onClick: isFunction_default()(onItemClick) ? onItemClick : item.props.onClick\n  });\n};\n\n/* harmony default export */ var polar_Pie = (Pie_Pie);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/polar/Radar.js\n\n\n\nfunction Radar_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Radar_typeof = function _typeof(obj) { return typeof obj; }; } else { Radar_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Radar_typeof(obj); }\n\nfunction Radar_extends() { Radar_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Radar_extends.apply(this, arguments); }\n\nfunction Radar_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Radar_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Radar_ownKeys(Object(source), true).forEach(function (key) { Radar_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Radar_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Radar_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Radar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Radar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Radar_createClass(Constructor, protoProps, staticProps) { if (protoProps) Radar_defineProperties(Constructor.prototype, protoProps); if (staticProps) Radar_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Radar_createSuper(Derived) { return function () { var Super = Radar_getPrototypeOf(Derived), result; if (Radar_isNativeReflectConstruct()) { var NewTarget = Radar_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Radar_possibleConstructorReturn(this, result); }; }\n\nfunction Radar_possibleConstructorReturn(self, call) { if (call && (Radar_typeof(call) === "object" || typeof call === "function")) { return call; } return Radar_assertThisInitialized(self); }\n\nfunction Radar_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Radar_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Radar_getPrototypeOf(o) { Radar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Radar_getPrototypeOf(o); }\n\nfunction Radar_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Radar_setPrototypeOf(subClass, superClass); }\n\nfunction Radar_setPrototypeOf(o, p) { Radar_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Radar_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Radar\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Radar_Radar = /*#__PURE__*/function (_PureComponent) {\n  Radar_inherits(Radar, _PureComponent);\n\n  var _super = Radar_createSuper(Radar);\n\n  function Radar() {\n    var _this;\n\n    Radar_classCallCheck(this, Radar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: false\n    };\n\n    _this.cachePrevData = function (points) {\n      _this.setState({\n        prevPoints: points\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (isFunction_default()(onAnimationEnd)) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (isFunction_default()(onAnimationStart)) {\n        onAnimationStart();\n      }\n    };\n\n    _this.handleMouseEnter = function (e) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter(_this.props, e);\n      }\n    };\n\n    _this.handleMouseLeave = function (e) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave(_this.props, e);\n      }\n    };\n\n    return _this;\n  }\n\n  Radar_createClass(Radar, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          points = _this$props.points;\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(points);\n      }\n    }\n  }, {\n    key: "renderDots",\n    value: function renderDots(points) {\n      var _this$props2 = this.props,\n          dot = _this$props2.dot,\n          dataKey = _this$props2.dataKey;\n      var baseProps = types_filterProps(this.props);\n      var customDotProps = types_filterProps(dot);\n      var dots = points.map(function (entry, i) {\n        var dotProps = Radar_objectSpread({\n          key: "dot-".concat(i),\n          r: 3\n        }, baseProps, {}, customDotProps, {\n          dataKey: dataKey,\n          cx: entry.x,\n          cy: entry.y,\n          index: i,\n          payload: entry\n        });\n\n        return Radar.renderDotItem(dot, dotProps);\n      });\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-radar-dots"\n      }, dots);\n    }\n  }, {\n    key: "renderPolygonStatically",\n    value: function renderPolygonStatically(points) {\n      var _this$props3 = this.props,\n          shape = _this$props3.shape,\n          dot = _this$props3.dot;\n      var radar;\n\n      if (react_default.a.isValidElement(shape)) {\n        radar = react_default.a.cloneElement(shape, Radar_objectSpread({}, this.props, {\n          points: points\n        }));\n      } else if (isFunction_default()(shape)) {\n        radar = shape(Radar_objectSpread({}, this.props, {\n          points: points\n        }));\n      } else {\n        radar = /*#__PURE__*/react_default.a.createElement(shape_Polygon, Radar_extends({}, types_filterProps(this.props, true), {\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave,\n          points: points\n        }));\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-radar-polygon"\n      }, radar, dot ? this.renderDots(points) : null);\n    }\n  }, {\n    key: "renderPolygonWithAnimation",\n    value: function renderPolygonWithAnimation() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          points = _this$props4.points,\n          isAnimationActive = _this$props4.isAnimationActive,\n          animationBegin = _this$props4.animationBegin,\n          animationDuration = _this$props4.animationDuration,\n          animationEasing = _this$props4.animationEasing,\n          animationId = _this$props4.animationId;\n      var prevPoints = this.state.prevPoints;\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "radar-".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n        var prevPointsDiffFactor = prevPoints && prevPoints.length / points.length;\n        var stepData = points.map(function (entry, index) {\n          var prev = prevPoints && prevPoints[Math.floor(index * prevPointsDiffFactor)];\n\n          if (prev) {\n            var _interpolatorX = interpolateNumber(prev.x, entry.x);\n\n            var _interpolatorY = interpolateNumber(prev.y, entry.y);\n\n            return Radar_objectSpread({}, entry, {\n              x: _interpolatorX(t),\n              y: _interpolatorY(t)\n            });\n          }\n\n          var interpolatorX = interpolateNumber(entry.cx, entry.x);\n          var interpolatorY = interpolateNumber(entry.cy, entry.y);\n          return Radar_objectSpread({}, entry, {\n            x: interpolatorX(t),\n            y: interpolatorY(t)\n          });\n        });\n        return _this2.renderPolygonStatically(stepData);\n      });\n    }\n  }, {\n    key: "renderPolygon",\n    value: function renderPolygon() {\n      var _this$props5 = this.props,\n          points = _this$props5.points,\n          isAnimationActive = _this$props5.isAnimationActive;\n      var prevPoints = this.state.prevPoints;\n\n      if (isAnimationActive && points && points.length && (!prevPoints || !isEqual_default()(prevPoints, points))) {\n        return this.renderPolygonWithAnimation();\n      }\n\n      return this.renderPolygonStatically(points);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props6 = this.props,\n          hide = _this$props6.hide,\n          className = _this$props6.className,\n          points = _this$props6.points,\n          isAnimationActive = _this$props6.isAnimationActive;\n\n      if (hide || !points || !points.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var layerClass = classnames_default()(\'recharts-radar\', className);\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass\n      }, this.renderPolygon(), (!isAnimationActive || isAnimationFinished) && component_LabelList.renderCallByParent(this.props, points));\n    }\n  }], [{\n    key: "renderDotItem",\n    value: function renderDotItem(option, props) {\n      var dotItem;\n\n      if (react_default.a.isValidElement(option)) {\n        dotItem = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        dotItem = option(props);\n      } else {\n        dotItem = /*#__PURE__*/react_default.a.createElement(shape_Dot, Radar_extends({}, props, {\n          className: "recharts-radar-dot"\n        }));\n      }\n\n      return dotItem;\n    }\n  }]);\n\n  return Radar;\n}(react["PureComponent"]);\n\nRadar_Radar.displayName = \'Radar\';\nRadar_Radar.defaultProps = {\n  angleAxisId: 0,\n  radiusAxisId: 0,\n  hide: false,\n  activeDot: true,\n  dot: false,\n  legendType: \'rect\',\n  isAnimationActive: !util_Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: \'ease\'\n};\n\nRadar_Radar.getComposedData = function (_ref2) {\n  var radiusAxis = _ref2.radiusAxis,\n      angleAxis = _ref2.angleAxis,\n      displayedData = _ref2.displayedData,\n      dataKey = _ref2.dataKey,\n      bandSize = _ref2.bandSize;\n  var cx = angleAxis.cx,\n      cy = angleAxis.cy;\n  var points = displayedData.map(function (entry, i) {\n    var name = getValueByDataKey(entry, angleAxis.dataKey, i);\n    var value = getValueByDataKey(entry, dataKey, 0);\n    var angle = angleAxis.scale(name) + (bandSize || 0);\n    var radius = radiusAxis.scale(value);\n    return Radar_objectSpread({}, polarToCartesian(cx, cy, radius, angle), {\n      name: name,\n      value: value,\n      cx: cx,\n      cy: cy,\n      radius: radius,\n      angle: angle,\n      payload: entry\n    });\n  });\n  return {\n    points: points\n  };\n};\n\n/* harmony default export */ var polar_Radar = (Radar_Radar);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/polar/RadialBar.js\n\n\n\n\nfunction RadialBar_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { RadialBar_typeof = function _typeof(obj) { return typeof obj; }; } else { RadialBar_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return RadialBar_typeof(obj); }\n\nfunction RadialBar_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction RadialBar_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { RadialBar_ownKeys(Object(source), true).forEach(function (key) { RadialBar_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { RadialBar_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction RadialBar_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction RadialBar_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = RadialBar_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction RadialBar_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction RadialBar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction RadialBar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction RadialBar_createClass(Constructor, protoProps, staticProps) { if (protoProps) RadialBar_defineProperties(Constructor.prototype, protoProps); if (staticProps) RadialBar_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction RadialBar_createSuper(Derived) { return function () { var Super = RadialBar_getPrototypeOf(Derived), result; if (RadialBar_isNativeReflectConstruct()) { var NewTarget = RadialBar_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RadialBar_possibleConstructorReturn(this, result); }; }\n\nfunction RadialBar_possibleConstructorReturn(self, call) { if (call && (RadialBar_typeof(call) === "object" || typeof call === "function")) { return call; } return RadialBar_assertThisInitialized(self); }\n\nfunction RadialBar_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction RadialBar_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction RadialBar_getPrototypeOf(o) { RadialBar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RadialBar_getPrototypeOf(o); }\n\nfunction RadialBar_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) RadialBar_setPrototypeOf(subClass, superClass); }\n\nfunction RadialBar_setPrototypeOf(o, p) { RadialBar_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RadialBar_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Render a group of radial bar\n */\n\n\n\n\n\n\n\n\n\n\n\n // TODO: Cause of circular dependency. Needs refactoring of functions that need them.\n// import { AngleAxisProps, RadiusAxisProps } from \'./types\';\n\nvar RadialBar_RadialBar = /*#__PURE__*/function (_PureComponent) {\n  RadialBar_inherits(RadialBar, _PureComponent);\n\n  var _super = RadialBar_createSuper(RadialBar);\n\n  function RadialBar() {\n    var _this;\n\n    RadialBar_classCallCheck(this, RadialBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: false\n    };\n\n    _this.cachePrevData = function (data) {\n      _this.setState({\n        prevData: data\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (isFunction_default()(onAnimationEnd)) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (isFunction_default()(onAnimationStart)) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  RadialBar_createClass(RadialBar, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          data = _this$props.data;\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(data);\n      }\n    }\n  }, {\n    key: "getDeltaAngle",\n    value: function getDeltaAngle() {\n      var _this$props2 = this.props,\n          startAngle = _this$props2.startAngle,\n          endAngle = _this$props2.endAngle;\n      var sign = mathSign(endAngle - startAngle);\n      var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n      return sign * deltaAngle;\n    }\n  }, {\n    key: "renderSectorsStatically",\n    value: function renderSectorsStatically(sectors) {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          shape = _this$props3.shape,\n          activeShape = _this$props3.activeShape,\n          activeIndex = _this$props3.activeIndex,\n          cornerRadius = _this$props3.cornerRadius,\n          others = RadialBar_objectWithoutProperties(_this$props3, ["shape", "activeShape", "activeIndex", "cornerRadius"]);\n\n      var baseProps = types_filterProps(others);\n      return sectors.map(function (entry, i) {\n        var props = RadialBar_objectSpread({}, baseProps, {\n          cornerRadius: cornerRadius\n        }, entry, {}, types_adaptEventsOfChild(_this2.props, entry, i), {\n          key: "sector-".concat(i),\n          className: \'recharts-radial-bar-sector\',\n          forceCornerRadius: others.forceCornerRadius,\n          cornerIsExternal: others.cornerIsExternal\n        });\n\n        return RadialBar.renderSectorShape(i === activeIndex ? activeShape : shape, props);\n      });\n    }\n  }, {\n    key: "renderSectorsWithAnimation",\n    value: function renderSectorsWithAnimation() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          isAnimationActive = _this$props4.isAnimationActive,\n          animationBegin = _this$props4.animationBegin,\n          animationDuration = _this$props4.animationDuration,\n          animationEasing = _this$props4.animationEasing,\n          animationId = _this$props4.animationId;\n      var prevData = this.state.prevData;\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "radialBar-".concat(animationId),\n        onAnimationStart: this.handleAnimationStart,\n        onAnimationEnd: this.handleAnimationEnd\n      }, function (_ref) {\n        var t = _ref.t;\n        var stepData = data.map(function (entry, index) {\n          var prev = prevData && prevData[index];\n\n          if (prev) {\n            var interpolatorStartAngle = interpolateNumber(prev.startAngle, entry.startAngle);\n            var interpolatorEndAngle = interpolateNumber(prev.endAngle, entry.endAngle);\n            return RadialBar_objectSpread({}, entry, {\n              startAngle: interpolatorStartAngle(t),\n              endAngle: interpolatorEndAngle(t)\n            });\n          }\n\n          var endAngle = entry.endAngle,\n              startAngle = entry.startAngle;\n          var interpolator = interpolateNumber(startAngle, endAngle);\n          return RadialBar_objectSpread({}, entry, {\n            endAngle: interpolator(t)\n          });\n        });\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, null, _this3.renderSectorsStatically(stepData));\n      });\n    }\n  }, {\n    key: "renderSectors",\n    value: function renderSectors() {\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          isAnimationActive = _this$props5.isAnimationActive;\n      var prevData = this.state.prevData;\n\n      if (isAnimationActive && data && data.length && (!prevData || !isEqual_default()(prevData, data))) {\n        return this.renderSectorsWithAnimation();\n      }\n\n      return this.renderSectorsStatically(data);\n    }\n  }, {\n    key: "renderBackground",\n    value: function renderBackground(sectors) {\n      var _this4 = this;\n\n      var cornerRadius = this.props.cornerRadius;\n      var backgroundProps = types_filterProps(this.props.background);\n      return sectors.map(function (entry, i) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var value = entry.value,\n            background = entry.background,\n            rest = RadialBar_objectWithoutProperties(entry, ["value", "background"]);\n\n        if (!background) {\n          return null;\n        }\n\n        var props = RadialBar_objectSpread({\n          cornerRadius: cornerRadius\n        }, rest, {\n          fill: \'#eee\'\n        }, background, {}, backgroundProps, {}, types_adaptEventsOfChild(_this4.props, entry, i), {\n          index: i,\n          key: "sector-".concat(i),\n          className: \'recharts-radial-bar-background-sector\'\n        });\n\n        return RadialBar.renderSectorShape(background, props);\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props6 = this.props,\n          hide = _this$props6.hide,\n          data = _this$props6.data,\n          className = _this$props6.className,\n          background = _this$props6.background,\n          isAnimationActive = _this$props6.isAnimationActive;\n\n      if (hide || !data || !data.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var layerClass = classnames_default()(\'recharts-area\', className);\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass\n      }, background && /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-radial-bar-background"\n      }, this.renderBackground(data)), /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-radial-bar-sectors"\n      }, this.renderSectors()), (!isAnimationActive || isAnimationFinished) && component_LabelList.renderCallByParent(RadialBar_objectSpread({}, this.props, {\n        clockWise: this.getDeltaAngle() < 0\n      }), data));\n    }\n  }], [{\n    key: "renderSectorShape",\n    value: function renderSectorShape(shape, props) {\n      var sectorShape;\n\n      if (react_default.a.isValidElement(shape)) {\n        sectorShape = react_default.a.cloneElement(shape, props);\n      } else if (isFunction_default()(shape)) {\n        sectorShape = shape(props);\n      } else {\n        sectorShape = react_default.a.createElement(shape_Sector, props);\n      }\n\n      return sectorShape;\n    }\n  }]);\n\n  return RadialBar;\n}(react["PureComponent"]);\n\nRadialBar_RadialBar.displayName = \'RadialBar\';\nRadialBar_RadialBar.defaultProps = {\n  angleAxisId: 0,\n  radiusAxisId: 0,\n  minPointSize: 0,\n  hide: false,\n  legendType: \'rect\',\n  data: [],\n  isAnimationActive: !util_Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: \'ease\',\n  forceCornerRadius: false,\n  cornerIsExternal: false\n};\n\nRadialBar_RadialBar.getComposedData = function (_ref2) {\n  var item = _ref2.item,\n      props = _ref2.props,\n      radiusAxis = _ref2.radiusAxis,\n      radiusAxisTicks = _ref2.radiusAxisTicks,\n      angleAxis = _ref2.angleAxis,\n      angleAxisTicks = _ref2.angleAxisTicks,\n      displayedData = _ref2.displayedData,\n      dataKey = _ref2.dataKey,\n      stackedData = _ref2.stackedData,\n      barPosition = _ref2.barPosition,\n      bandSize = _ref2.bandSize,\n      dataStartIndex = _ref2.dataStartIndex;\n  var pos = findPositionOfBar(barPosition, item);\n\n  if (!pos) {\n    return null;\n  }\n\n  var cx = angleAxis.cx,\n      cy = angleAxis.cy;\n  var layout = props.layout;\n  var _item$props = item.props,\n      children = _item$props.children,\n      minPointSize = _item$props.minPointSize;\n  var numericAxis = layout === \'radial\' ? angleAxis : radiusAxis;\n  var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n  var baseValue = getBaseValueOfBar({\n    numericAxis: numericAxis\n  });\n  var cells = ReactUtils_findAllByType(children, component_Cell.displayName);\n  var sectors = displayedData.map(function (entry, index) {\n    var value, innerRadius, outerRadius, startAngle, endAngle, backgroundSector;\n\n    if (stackedData) {\n      value = ChartUtils_truncateByDomain(stackedData[dataStartIndex + index], stackedDomain);\n    } else {\n      value = getValueByDataKey(entry, dataKey);\n\n      if (!isArray_default()(value)) {\n        value = [baseValue, value];\n      }\n    }\n\n    if (layout === \'radial\') {\n      innerRadius = ChartUtils_getCateCoordinateOfBar({\n        axis: radiusAxis,\n        ticks: radiusAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      endAngle = angleAxis.scale(value[1]);\n      startAngle = angleAxis.scale(value[0]);\n      outerRadius = innerRadius + pos.size;\n      var deltaAngle = endAngle - startAngle;\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(deltaAngle) < Math.abs(minPointSize)) {\n        var delta = mathSign(deltaAngle || minPointSize) * (Math.abs(minPointSize) - Math.abs(deltaAngle));\n        endAngle += delta;\n      }\n\n      backgroundSector = {\n        background: {\n          cx: cx,\n          cy: cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          startAngle: props.startAngle,\n          endAngle: props.endAngle\n        }\n      };\n    } else {\n      innerRadius = radiusAxis.scale(value[0]);\n      outerRadius = radiusAxis.scale(value[1]);\n      startAngle = ChartUtils_getCateCoordinateOfBar({\n        axis: angleAxis,\n        ticks: angleAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      endAngle = startAngle + pos.size;\n      var deltaRadius = outerRadius - innerRadius;\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(deltaRadius) < Math.abs(minPointSize)) {\n        var _delta = mathSign(deltaRadius || minPointSize) * (Math.abs(minPointSize) - Math.abs(deltaRadius));\n\n        outerRadius += _delta;\n      }\n    }\n\n    return RadialBar_objectSpread({}, entry, {}, backgroundSector, {\n      payload: entry,\n      value: stackedData ? value : value[1],\n      cx: cx,\n      cy: cy,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }, cells && cells[index] && cells[index].props);\n  });\n  return {\n    data: sectors,\n    layout: layout\n  };\n};\n\n/* harmony default export */ var polar_RadialBar = (RadialBar_RadialBar);\n// EXTERNAL MODULE: ./node_modules/lodash/range.js\nvar lodash_range = __webpack_require__("WjpJ");\nvar range_default = /*#__PURE__*/__webpack_require__.n(lodash_range);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/CssPrefixUtils.js\nfunction CssPrefixUtils_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CssPrefixUtils_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CssPrefixUtils_ownKeys(Object(source), true).forEach(function (key) { CssPrefixUtils_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CssPrefixUtils_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CssPrefixUtils_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PREFIX_LIST = [\'Webkit\', \'Moz\', \'O\', \'ms\'];\nvar generatePrefixStyle = function generatePrefixStyle(name, value) {\n  if (!name) {\n    return null;\n  }\n\n  var camelName = name.replace(/(\\w)/, function (v) {\n    return v.toUpperCase();\n  });\n  var result = PREFIX_LIST.reduce(function (res, entry) {\n    return CssPrefixUtils_objectSpread({}, res, CssPrefixUtils_defineProperty({}, entry + camelName, value));\n  }, {});\n  result[name] = value;\n  return result;\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/Brush.js\n\n\n\nfunction Brush_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Brush_typeof = function _typeof(obj) { return typeof obj; }; } else { Brush_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Brush_typeof(obj); }\n\nfunction Brush_extends() { Brush_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Brush_extends.apply(this, arguments); }\n\nfunction Brush_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Brush_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Brush_ownKeys(Object(source), true).forEach(function (key) { Brush_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Brush_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Brush_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Brush_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Brush_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Brush_createClass(Constructor, protoProps, staticProps) { if (protoProps) Brush_defineProperties(Constructor.prototype, protoProps); if (staticProps) Brush_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Brush_createSuper(Derived) { return function () { var Super = Brush_getPrototypeOf(Derived), result; if (Brush_isNativeReflectConstruct()) { var NewTarget = Brush_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Brush_possibleConstructorReturn(this, result); }; }\n\nfunction Brush_possibleConstructorReturn(self, call) { if (call && (Brush_typeof(call) === "object" || typeof call === "function")) { return call; } return Brush_assertThisInitialized(self); }\n\nfunction Brush_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Brush_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Brush_getPrototypeOf(o) { Brush_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Brush_getPrototypeOf(o); }\n\nfunction Brush_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Brush_setPrototypeOf(subClass, superClass); }\n\nfunction Brush_setPrototypeOf(o, p) { Brush_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Brush_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Brush\n */\n\n\n\n\n\n\n\n\n\n\nvar isTouch = function isTouch(e) {\n  return e.changedTouches && !!e.changedTouches.length;\n};\n\nvar Brush_Brush = /*#__PURE__*/function (_PureComponent) {\n  Brush_inherits(Brush, _PureComponent);\n\n  var _super = Brush_createSuper(Brush);\n\n  function Brush(props) {\n    var _this;\n\n    Brush_classCallCheck(this, Brush);\n\n    _this = _super.call(this, props);\n    _this.leaveTimer = void 0;\n    _this.scale = void 0;\n    _this.scaleValues = void 0;\n    _this.travellerDragStartHandlers = void 0;\n\n    _this.handleDrag = function (e) {\n      if (_this.leaveTimer) {\n        clearTimeout(_this.leaveTimer);\n        _this.leaveTimer = null;\n      }\n\n      if (_this.state.isTravellerMoving) {\n        _this.handleTravellerMove(e);\n      } else if (_this.state.isSlideMoving) {\n        _this.handleSlideDrag(e);\n      }\n    };\n\n    _this.handleTouchMove = function (e) {\n      if (e.changedTouches != null && e.changedTouches.length > 0) {\n        _this.handleDrag(e.changedTouches[0]);\n      }\n    };\n\n    _this.handleDragEnd = function () {\n      _this.setState({\n        isTravellerMoving: false,\n        isSlideMoving: false\n      });\n\n      _this.detachDragEndListener();\n    };\n\n    _this.handleLeaveWrapper = function () {\n      if (_this.state.isTravellerMoving || _this.state.isSlideMoving) {\n        _this.leaveTimer = window.setTimeout(_this.handleDragEnd, _this.props.leaveTimeOut);\n      }\n    };\n\n    _this.handleEnterSlideOrTraveller = function () {\n      _this.setState({\n        isTextActive: true\n      });\n    };\n\n    _this.handleLeaveSlideOrTraveller = function () {\n      _this.setState({\n        isTextActive: false\n      });\n    };\n\n    _this.handleSlideDragStart = function (e) {\n      var event = isTouch(e) ? e.changedTouches[0] : e;\n\n      _this.setState({\n        isTravellerMoving: false,\n        isSlideMoving: true,\n        slideMoveStartX: event.pageX\n      });\n\n      _this.attachDragEndListener();\n    };\n\n    _this.travellerDragStartHandlers = {\n      startX: _this.handleTravellerDragStart.bind(Brush_assertThisInitialized(_this), \'startX\'),\n      endX: _this.handleTravellerDragStart.bind(Brush_assertThisInitialized(_this), \'endX\')\n    };\n    _this.state = props.data && props.data.length ? _this.createScale(props) : {};\n    return _this;\n  }\n\n  Brush_createClass(Brush, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          width = _this$props.width,\n          x = _this$props.x,\n          travellerWidth = _this$props.travellerWidth,\n          updateId = _this$props.updateId;\n\n      if (nextProps.data !== data || nextProps.updateId !== updateId) {\n        if (nextProps.data && nextProps.data.length) {\n          this.setState(this.createScale(nextProps));\n        } else {\n          this.removeScale();\n        }\n      } else if (this.scale && nextProps.width !== width || nextProps.x !== x || nextProps.travellerWidth !== travellerWidth) {\n        this.scale.range([nextProps.x, nextProps.x + nextProps.width - nextProps.travellerWidth]);\n        this.scaleValues = this.scale.domain().map(function (entry) {\n          return _this2.scale(entry);\n        });\n        this.setState({\n          startX: this.scale(nextProps.startIndex),\n          endX: this.scale(nextProps.endIndex)\n        });\n      }\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this.removeScale();\n\n      if (this.leaveTimer) {\n        clearTimeout(this.leaveTimer);\n        this.leaveTimer = null;\n      }\n\n      this.detachDragEndListener();\n    }\n  }, {\n    key: "getIndex",\n    value: function getIndex(_ref) {\n      var startX = _ref.startX,\n          endX = _ref.endX;\n      var _this$props2 = this.props,\n          gap = _this$props2.gap,\n          data = _this$props2.data;\n      var lastIndex = data.length - 1;\n      var min = Math.min(startX, endX);\n      var max = Math.max(startX, endX);\n      var minIndex = Brush.getIndexInRange(this.scaleValues, min);\n      var maxIndex = Brush.getIndexInRange(this.scaleValues, max);\n      return {\n        startIndex: minIndex - minIndex % gap,\n        endIndex: maxIndex === lastIndex ? lastIndex : maxIndex - maxIndex % gap\n      };\n    }\n  }, {\n    key: "getTextOfTick",\n    value: function getTextOfTick(index) {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          tickFormatter = _this$props3.tickFormatter,\n          dataKey = _this$props3.dataKey;\n      var text = getValueByDataKey(data[index], dataKey, index);\n      return isFunction_default()(tickFormatter) ? tickFormatter(text, index) : text;\n    }\n  }, {\n    key: "attachDragEndListener",\n    value: function attachDragEndListener() {\n      window.addEventListener(\'mouseup\', this.handleDragEnd, true);\n      window.addEventListener(\'touchend\', this.handleDragEnd, true);\n    }\n  }, {\n    key: "detachDragEndListener",\n    value: function detachDragEndListener() {\n      window.removeEventListener(\'mouseup\', this.handleDragEnd, true);\n      window.removeEventListener(\'touchend\', this.handleDragEnd, true);\n    }\n  }, {\n    key: "handleSlideDrag",\n    value: function handleSlideDrag(e) {\n      var _this$state = this.state,\n          slideMoveStartX = _this$state.slideMoveStartX,\n          startX = _this$state.startX,\n          endX = _this$state.endX;\n      var _this$props4 = this.props,\n          x = _this$props4.x,\n          width = _this$props4.width,\n          travellerWidth = _this$props4.travellerWidth,\n          startIndex = _this$props4.startIndex,\n          endIndex = _this$props4.endIndex,\n          onChange = _this$props4.onChange;\n      var delta = e.pageX - slideMoveStartX;\n\n      if (delta > 0) {\n        delta = Math.min(delta, x + width - travellerWidth - endX, x + width - travellerWidth - startX);\n      } else if (delta < 0) {\n        delta = Math.max(delta, x - startX, x - endX);\n      }\n\n      var newIndex = this.getIndex({\n        startX: startX + delta,\n        endX: endX + delta\n      });\n\n      if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) {\n        onChange(newIndex);\n      }\n\n      this.setState({\n        startX: startX + delta,\n        endX: endX + delta,\n        slideMoveStartX: e.pageX\n      });\n    }\n  }, {\n    key: "handleTravellerDragStart",\n    value: function handleTravellerDragStart(id, e) {\n      var event = isTouch(e) ? e.changedTouches[0] : e;\n      this.setState({\n        isSlideMoving: false,\n        isTravellerMoving: true,\n        movingTravellerId: id,\n        brushMoveStartX: event.pageX\n      });\n      this.attachDragEndListener();\n    }\n  }, {\n    key: "handleTravellerMove",\n    value: function handleTravellerMove(e) {\n      var _this$setState;\n\n      var _this$state2 = this.state,\n          brushMoveStartX = _this$state2.brushMoveStartX,\n          movingTravellerId = _this$state2.movingTravellerId,\n          endX = _this$state2.endX,\n          startX = _this$state2.startX;\n      var prevValue = this.state[movingTravellerId];\n      var _this$props5 = this.props,\n          x = _this$props5.x,\n          width = _this$props5.width,\n          travellerWidth = _this$props5.travellerWidth,\n          onChange = _this$props5.onChange,\n          gap = _this$props5.gap,\n          data = _this$props5.data;\n      var params = {\n        startX: this.state.startX,\n        endX: this.state.endX\n      };\n      var delta = e.pageX - brushMoveStartX;\n\n      if (delta > 0) {\n        delta = Math.min(delta, x + width - travellerWidth - prevValue);\n      } else if (delta < 0) {\n        delta = Math.max(delta, x - prevValue);\n      }\n\n      params[movingTravellerId] = prevValue + delta;\n      var newIndex = this.getIndex(params);\n      var startIndex = newIndex.startIndex,\n          endIndex = newIndex.endIndex;\n\n      var isFullGap = function isFullGap() {\n        var lastIndex = data.length - 1;\n\n        if (movingTravellerId === \'startX\' && (endX > startX ? startIndex % gap === 0 : endIndex % gap === 0) || endX < startX && endIndex === lastIndex || movingTravellerId === \'endX\' && (endX > startX ? endIndex % gap === 0 : startIndex % gap === 0) || endX > startX && endIndex === lastIndex) {\n          return true;\n        }\n\n        return false;\n      };\n\n      this.setState((_this$setState = {}, Brush_defineProperty(_this$setState, movingTravellerId, prevValue + delta), Brush_defineProperty(_this$setState, "brushMoveStartX", e.pageX), _this$setState), function () {\n        if (onChange) {\n          if (isFullGap()) {\n            onChange(newIndex);\n          }\n        }\n      });\n    }\n  }, {\n    key: "createScale",\n    value: function createScale(props) {\n      var _this3 = this;\n\n      var data = props.data,\n          startIndex = props.startIndex,\n          endIndex = props.endIndex,\n          x = props.x,\n          width = props.width,\n          travellerWidth = props.travellerWidth;\n      var len = data.length;\n      this.scale = Object(band["b" /* point */])().domain(range_default()(0, len)).range([x, x + width - travellerWidth]);\n      this.scaleValues = this.scale.domain().map(function (entry) {\n        return _this3.scale(entry);\n      });\n      return {\n        isTextActive: false,\n        isSlideMoving: false,\n        isTravellerMoving: false,\n        startX: this.scale(startIndex),\n        endX: this.scale(endIndex)\n      };\n    }\n  }, {\n    key: "removeScale",\n    value: function removeScale() {\n      this.scale = null;\n      this.scaleValues = null;\n    }\n  }, {\n    key: "renderBackground",\n    value: function renderBackground() {\n      var _this$props6 = this.props,\n          x = _this$props6.x,\n          y = _this$props6.y,\n          width = _this$props6.width,\n          height = _this$props6.height,\n          fill = _this$props6.fill,\n          stroke = _this$props6.stroke;\n      return /*#__PURE__*/react_default.a.createElement("rect", {\n        stroke: stroke,\n        fill: fill,\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, {\n    key: "renderPanorama",\n    value: function renderPanorama() {\n      var _this$props7 = this.props,\n          x = _this$props7.x,\n          y = _this$props7.y,\n          width = _this$props7.width,\n          height = _this$props7.height,\n          data = _this$props7.data,\n          children = _this$props7.children,\n          padding = _this$props7.padding;\n      var chartElement = react["Children"].only(children);\n\n      if (!chartElement) {\n        return null;\n      }\n\n      return react_default.a.cloneElement(chartElement, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        margin: padding,\n        compact: true,\n        data: data\n      });\n    }\n  }, {\n    key: "renderTravellerLayer",\n    value: function renderTravellerLayer(travellerX, id) {\n      var _this$props8 = this.props,\n          y = _this$props8.y,\n          travellerWidth = _this$props8.travellerWidth,\n          height = _this$props8.height,\n          traveller = _this$props8.traveller;\n      var x = Math.max(travellerX, this.props.x);\n\n      var travellerProps = Brush_objectSpread({}, types_filterProps(this.props), {\n        x: x,\n        y: y,\n        width: travellerWidth,\n        height: height\n      });\n\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-brush-traveller",\n        onMouseEnter: this.handleEnterSlideOrTraveller,\n        onMouseLeave: this.handleLeaveSlideOrTraveller,\n        onMouseDown: this.travellerDragStartHandlers[id],\n        onTouchStart: this.travellerDragStartHandlers[id],\n        style: {\n          cursor: \'col-resize\'\n        }\n      }, Brush.renderTraveller(traveller, travellerProps));\n    }\n  }, {\n    key: "renderSlide",\n    value: function renderSlide(startX, endX) {\n      var _this$props9 = this.props,\n          y = _this$props9.y,\n          height = _this$props9.height,\n          stroke = _this$props9.stroke,\n          travellerWidth = _this$props9.travellerWidth;\n      var x = Math.min(startX, endX) + travellerWidth;\n      var width = Math.max(Math.abs(endX - startX) - travellerWidth, 0);\n      return /*#__PURE__*/react_default.a.createElement("rect", {\n        className: "recharts-brush-slide",\n        onMouseEnter: this.handleEnterSlideOrTraveller,\n        onMouseLeave: this.handleLeaveSlideOrTraveller,\n        onMouseDown: this.handleSlideDragStart,\n        onTouchStart: this.handleSlideDragStart,\n        style: {\n          cursor: \'move\'\n        },\n        stroke: "none",\n        fill: stroke,\n        fillOpacity: 0.2,\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, {\n    key: "renderText",\n    value: function renderText() {\n      var _this$props10 = this.props,\n          startIndex = _this$props10.startIndex,\n          endIndex = _this$props10.endIndex,\n          y = _this$props10.y,\n          height = _this$props10.height,\n          travellerWidth = _this$props10.travellerWidth,\n          stroke = _this$props10.stroke;\n      var _this$state3 = this.state,\n          startX = _this$state3.startX,\n          endX = _this$state3.endX;\n      var offset = 5;\n      var attrs = {\n        pointerEvents: \'none\',\n        fill: stroke\n      };\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-brush-texts"\n      }, /*#__PURE__*/react_default.a.createElement(component_Text, Brush_extends({\n        textAnchor: "end",\n        verticalAnchor: "middle",\n        x: Math.min(startX, endX) - offset,\n        y: y + height / 2\n      }, attrs), this.getTextOfTick(startIndex)), /*#__PURE__*/react_default.a.createElement(component_Text, Brush_extends({\n        textAnchor: "start",\n        verticalAnchor: "middle",\n        x: Math.max(startX, endX) + travellerWidth + offset,\n        y: y + height / 2\n      }, attrs), this.getTextOfTick(endIndex)));\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props11 = this.props,\n          data = _this$props11.data,\n          className = _this$props11.className,\n          children = _this$props11.children,\n          x = _this$props11.x,\n          y = _this$props11.y,\n          width = _this$props11.width,\n          height = _this$props11.height,\n          alwaysShowText = _this$props11.alwaysShowText;\n      var _this$state4 = this.state,\n          startX = _this$state4.startX,\n          endX = _this$state4.endX,\n          isTextActive = _this$state4.isTextActive,\n          isSlideMoving = _this$state4.isSlideMoving,\n          isTravellerMoving = _this$state4.isTravellerMoving;\n\n      if (!data || !data.length || !DataUtils_isNumber(x) || !DataUtils_isNumber(y) || !DataUtils_isNumber(width) || !DataUtils_isNumber(height) || width <= 0 || height <= 0) {\n        return null;\n      }\n\n      var layerClass = classnames_default()(\'recharts-brush\', className);\n      var isPanoramic = react_default.a.Children.count(children) === 1;\n      var style = generatePrefixStyle(\'userSelect\', \'none\');\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass,\n        onMouseMove: this.handleDrag,\n        onMouseLeave: this.handleLeaveWrapper,\n        onTouchMove: this.handleTouchMove,\n        style: style\n      }, this.renderBackground(), isPanoramic && this.renderPanorama(), this.renderSlide(startX, endX), this.renderTravellerLayer(startX, \'startX\'), this.renderTravellerLayer(endX, \'endX\'), (isTextActive || isSlideMoving || isTravellerMoving || alwaysShowText) && this.renderText());\n    }\n  }], [{\n    key: "renderDefaultTraveller",\n    value: function renderDefaultTraveller(props) {\n      var x = props.x,\n          y = props.y,\n          width = props.width,\n          height = props.height,\n          stroke = props.stroke;\n      var lineY = Math.floor(y + height / 2) - 1;\n      return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement("rect", {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        fill: stroke,\n        stroke: "none"\n      }), /*#__PURE__*/react_default.a.createElement("line", {\n        x1: x + 1,\n        y1: lineY,\n        x2: x + width - 1,\n        y2: lineY,\n        fill: "none",\n        stroke: "#fff"\n      }), /*#__PURE__*/react_default.a.createElement("line", {\n        x1: x + 1,\n        y1: lineY + 2,\n        x2: x + width - 1,\n        y2: lineY + 2,\n        fill: "none",\n        stroke: "#fff"\n      }));\n    }\n  }, {\n    key: "renderTraveller",\n    value: function renderTraveller(option, props) {\n      var rectangle;\n\n      if (react_default.a.isValidElement(option)) {\n        rectangle = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        rectangle = option(props);\n      } else {\n        rectangle = Brush.renderDefaultTraveller(props);\n      }\n\n      return rectangle;\n    }\n  }, {\n    key: "getIndexInRange",\n    value: function getIndexInRange(range, x) {\n      var len = range.length;\n      var start = 0;\n      var end = len - 1;\n\n      while (end - start > 1) {\n        var middle = Math.floor((start + end) / 2);\n\n        if (range[middle] > x) {\n          end = middle;\n        } else {\n          start = middle;\n        }\n      }\n\n      return x >= range[end] ? end : start;\n    }\n  }]);\n\n  return Brush;\n}(react["PureComponent"]);\n\nBrush_Brush.displayName = \'Brush\';\nBrush_Brush.defaultProps = {\n  height: 40,\n  travellerWidth: 5,\n  gap: 1,\n  fill: \'#fff\',\n  stroke: \'#666\',\n  padding: {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  },\n  leaveTimeOut: 1000,\n  alwaysShowText: false\n};\n/* harmony default export */ var cartesian_Brush = (Brush_Brush);\n// EXTERNAL MODULE: ./node_modules/lodash/some.js\nvar some = __webpack_require__("MJIl");\nvar some_default = /*#__PURE__*/__webpack_require__.n(some);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/IfOverflowMatches.js\nvar ifOverflowMatches = function ifOverflowMatches(props, value) {\n  var alwaysShow = props.alwaysShow;\n  var ifOverflow = props.ifOverflow;\n\n  if (alwaysShow) {\n    ifOverflow = \'extendDomain\';\n  }\n\n  return ifOverflow === value;\n};\n// EXTERNAL MODULE: ./node_modules/lodash/every.js\nvar every = __webpack_require__("Jlc5");\nvar every_default = /*#__PURE__*/__webpack_require__.n(every);\n\n// EXTERNAL MODULE: ./node_modules/lodash/mapValues.js\nvar mapValues = __webpack_require__("noZS");\nvar mapValues_default = /*#__PURE__*/__webpack_require__.n(mapValues);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/CartesianUtils.js\n\n\n\nfunction CartesianUtils_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction CartesianUtils_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CartesianUtils_createClass(Constructor, protoProps, staticProps) { if (protoProps) CartesianUtils_defineProperties(Constructor.prototype, protoProps); if (staticProps) CartesianUtils_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction CartesianUtils_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CartesianUtils_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CartesianUtils_ownKeys(Object(source), true).forEach(function (key) { CartesianUtils_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CartesianUtils_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CartesianUtils_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n/**\n * Calculate the scale function, position, width, height of axes\n * @param  {Object} props     Latest props\n * @param  {Object} axisMap   The configuration of axes\n * @param  {Object} offset    The offset of main part in the svg element\n * @param  {String} axisType  The type of axes, x-axis or y-axis\n * @param  {String} chartName The name of chart\n * @return {Object} Configuration\n */\nvar CartesianUtils_formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {\n  var width = props.width,\n      height = props.height,\n      layout = props.layout;\n  var ids = Object.keys(axisMap);\n  var steps = {\n    left: offset.left,\n    leftMirror: offset.left,\n    right: width - offset.right,\n    rightMirror: width - offset.right,\n    top: offset.top,\n    topMirror: offset.top,\n    bottom: height - offset.bottom,\n    bottomMirror: height - offset.bottom\n  };\n  return ids.reduce(function (result, id) {\n    var axis = axisMap[id];\n    var orientation = axis.orientation,\n        domain = axis.domain,\n        _axis$padding = axis.padding,\n        padding = _axis$padding === void 0 ? {} : _axis$padding,\n        mirror = axis.mirror,\n        reversed = axis.reversed;\n    var offsetKey = "".concat(orientation).concat(mirror ? \'Mirror\' : \'\');\n    var range, x, y, needSpace;\n\n    if (axisType === \'xAxis\') {\n      range = [offset.left + (padding.left || 0), offset.left + offset.width - (padding.right || 0)];\n    } else if (axisType === \'yAxis\') {\n      range = layout === \'horizontal\' ? [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)] : [offset.top + (padding.top || 0), offset.top + offset.height - (padding.bottom || 0)];\n    } else {\n      range = axis.range;\n    }\n\n    if (reversed) {\n      range = [range[1], range[0]];\n    }\n\n    var _parseScale = ChartUtils_parseScale(axis, chartName),\n        scale = _parseScale.scale,\n        realScaleType = _parseScale.realScaleType;\n\n    scale.domain(domain).range(range);\n    checkDomainOfScale(scale);\n    var ticks = ChartUtils_getTicksOfScale(scale, CartesianUtils_objectSpread({}, axis, {\n      realScaleType: realScaleType\n    }));\n\n    if (axisType === \'xAxis\') {\n      needSpace = orientation === \'top\' && !mirror || orientation === \'bottom\' && mirror;\n      x = offset.left;\n      y = steps[offsetKey] - needSpace * axis.height;\n    } else if (axisType === \'yAxis\') {\n      needSpace = orientation === \'left\' && !mirror || orientation === \'right\' && mirror;\n      x = steps[offsetKey] - needSpace * axis.width;\n      y = offset.top;\n    }\n\n    var finalAxis = CartesianUtils_objectSpread({}, axis, {}, ticks, {\n      realScaleType: realScaleType,\n      x: x,\n      y: y,\n      scale: scale,\n      width: axisType === \'xAxis\' ? offset.width : axis.width,\n      height: axisType === \'yAxis\' ? offset.height : axis.height\n    });\n\n    finalAxis.bandSize = ChartUtils_getBandSizeOfAxis(finalAxis, ticks);\n\n    if (!axis.hide && axisType === \'xAxis\') {\n      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;\n    } else if (!axis.hide) {\n      steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;\n    }\n\n    return CartesianUtils_objectSpread({}, result, CartesianUtils_defineProperty({}, id, finalAxis));\n  }, {});\n};\nvar rectWithPoints = function rectWithPoints(_ref, _ref2) {\n  var x1 = _ref.x,\n      y1 = _ref.y;\n  var x2 = _ref2.x,\n      y2 = _ref2.y;\n  return {\n    x: Math.min(x1, x2),\n    y: Math.min(y1, y2),\n    width: Math.abs(x2 - x1),\n    height: Math.abs(y2 - y1)\n  };\n};\n/**\n * Compute the x, y, width, and height of a box from two reference points.\n * @param  {Object} coords     x1, x2, y1, and y2\n * @return {Object} object\n */\n\nvar rectWithCoords = function rectWithCoords(_ref3) {\n  var x1 = _ref3.x1,\n      y1 = _ref3.y1,\n      x2 = _ref3.x2,\n      y2 = _ref3.y2;\n  return rectWithPoints({\n    x: x1,\n    y: y1\n  }, {\n    x: x2,\n    y: y2\n  });\n};\nvar ScaleHelper = /*#__PURE__*/function () {\n  CartesianUtils_createClass(ScaleHelper, null, [{\n    key: "create",\n    value: function create(obj) {\n      return new ScaleHelper(obj);\n    }\n  }]);\n\n  function ScaleHelper(scale) {\n    CartesianUtils_classCallCheck(this, ScaleHelper);\n\n    this.scale = void 0;\n    this.scale = scale;\n  }\n\n  CartesianUtils_createClass(ScaleHelper, [{\n    key: "apply",\n    value: function apply(value) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          bandAware = _ref4.bandAware,\n          position = _ref4.position;\n\n      if (value === undefined) {\n        return undefined;\n      }\n\n      if (position) {\n        switch (position) {\n          case \'start\':\n            {\n              return this.scale(value);\n            }\n\n          case \'middle\':\n            {\n              var offset = this.bandwidth ? this.bandwidth() / 2 : 0;\n              return this.scale(value) + offset;\n            }\n\n          case \'end\':\n            {\n              var _offset = this.bandwidth ? this.bandwidth() : 0;\n\n              return this.scale(value) + _offset;\n            }\n\n          default:\n            {\n              return this.scale(value);\n            }\n        }\n      }\n\n      if (bandAware) {\n        var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;\n\n        return this.scale(value) + _offset2;\n      }\n\n      return this.scale(value);\n    }\n  }, {\n    key: "isInRange",\n    value: function isInRange(value) {\n      var range = this.range();\n      var first = range[0];\n      var last = range[range.length - 1];\n      return first <= last ? value >= first && value <= last : value >= last && value <= first;\n    }\n  }, {\n    key: "domain",\n    get: function get() {\n      return this.scale.domain;\n    }\n  }, {\n    key: "range",\n    get: function get() {\n      return this.scale.range;\n    }\n  }, {\n    key: "rangeMin",\n    get: function get() {\n      return this.range()[0];\n    }\n  }, {\n    key: "rangeMax",\n    get: function get() {\n      return this.range()[1];\n    }\n  }, {\n    key: "bandwidth",\n    get: function get() {\n      return this.scale.bandwidth;\n    }\n  }]);\n\n  return ScaleHelper;\n}();\nScaleHelper.EPS = 1e-4;\nvar CartesianUtils_createLabeldScales = function createLabeldScales(options) {\n  var scales = Object.keys(options).reduce(function (res, key) {\n    return CartesianUtils_objectSpread({}, res, CartesianUtils_defineProperty({}, key, ScaleHelper.create(options[key])));\n  }, {});\n  return CartesianUtils_objectSpread({}, scales, {\n    apply: function apply(coord) {\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          bandAware = _ref5.bandAware;\n\n      return mapValues_default()(coord, function (value, label) {\n        return scales[label].apply(value, {\n          bandAware: bandAware\n        });\n      });\n    },\n    isInRange: function isInRange(coord) {\n      return every_default()(coord, function (value, label) {\n        return scales[label].isInRange(value);\n      });\n    }\n  });\n};\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/ReferenceLine.js\n\n\n\nfunction ReferenceLine_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction ReferenceLine_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ReferenceLine_ownKeys(Object(source), true).forEach(function (key) { ReferenceLine_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ReferenceLine_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction ReferenceLine_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction ReferenceLine_slicedToArray(arr, i) { return ReferenceLine_arrayWithHoles(arr) || ReferenceLine_iterableToArrayLimit(arr, i) || ReferenceLine_unsupportedIterableToArray(arr, i) || ReferenceLine_nonIterableRest(); }\n\nfunction ReferenceLine_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction ReferenceLine_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return ReferenceLine_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ReferenceLine_arrayLikeToArray(o, minLen); }\n\nfunction ReferenceLine_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ReferenceLine_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction ReferenceLine_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ReferenceLine_extends() { ReferenceLine_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ReferenceLine_extends.apply(this, arguments); }\n\n/**\n * @fileOverview Reference Line\n */\n\n\n\n\n\n\n\n\n\n\nvar ReferenceLine_renderLine = function renderLine(option, props) {\n  var line;\n\n  if (react_default.a.isValidElement(option)) {\n    line = react_default.a.cloneElement(option, props);\n  } else if (isFunction_default()(option)) {\n    line = option(props);\n  } else {\n    line = /*#__PURE__*/react_default.a.createElement("line", ReferenceLine_extends({}, props, {\n      className: "recharts-reference-line-line"\n    }));\n  }\n\n  return line;\n}; // TODO: ScaleHelper\n\n\nvar ReferenceLine_getEndPoints = function getEndPoints(scales, isFixedX, isFixedY, isSegment, props) {\n  var _props$viewBox = props.viewBox,\n      x = _props$viewBox.x,\n      y = _props$viewBox.y,\n      width = _props$viewBox.width,\n      height = _props$viewBox.height,\n      position = props.position;\n\n  if (isFixedY) {\n    var yCoord = props.y,\n        orientation = props.yAxis.orientation;\n    var coord = scales.y.apply(yCoord, {\n      position: position\n    });\n\n    if (ifOverflowMatches(props, \'discard\') && !scales.y.isInRange(coord)) {\n      return null;\n    }\n\n    var points = [{\n      x: x + width,\n      y: coord\n    }, {\n      x: x,\n      y: coord\n    }];\n    return orientation === \'left\' ? points.reverse() : points;\n  }\n\n  if (isFixedX) {\n    var xCoord = props.x,\n        _orientation = props.xAxis.orientation;\n\n    var _coord = scales.x.apply(xCoord, {\n      position: position\n    });\n\n    if (ifOverflowMatches(props, \'discard\') && !scales.x.isInRange(_coord)) {\n      return null;\n    }\n\n    var _points = [{\n      x: _coord,\n      y: y + height\n    }, {\n      x: _coord,\n      y: y\n    }];\n    return _orientation === \'top\' ? _points.reverse() : _points;\n  }\n\n  if (isSegment) {\n    var segment = props.segment;\n\n    var _points2 = segment.map(function (p) {\n      return scales.apply(p, {\n        position: position\n      });\n    });\n\n    if (ifOverflowMatches(props, \'discard\') && some_default()(_points2, function (p) {\n      return !scales.isInRange(p);\n    })) {\n      return null;\n    }\n\n    return _points2;\n  }\n\n  return null;\n};\n\nfunction ReferenceLine(props) {\n  var fixedX = props.x,\n      fixedY = props.y,\n      segment = props.segment,\n      xAxis = props.xAxis,\n      yAxis = props.yAxis,\n      shape = props.shape,\n      className = props.className,\n      alwaysShow = props.alwaysShow,\n      clipPathId = props.clipPathId;\n  warn(alwaysShow === undefined, \'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.\');\n  var scales = CartesianUtils_createLabeldScales({\n    x: xAxis.scale,\n    y: yAxis.scale\n  });\n  var isX = DataUtils_isNumOrStr(fixedX);\n  var isY = DataUtils_isNumOrStr(fixedY);\n  var isSegment = segment && segment.length === 2;\n  var endPoints = ReferenceLine_getEndPoints(scales, isX, isY, isSegment, props);\n\n  if (!endPoints) {\n    return null;\n  }\n\n  var _endPoints = ReferenceLine_slicedToArray(endPoints, 2),\n      _endPoints$ = _endPoints[0],\n      x1 = _endPoints$.x,\n      y1 = _endPoints$.y,\n      _endPoints$2 = _endPoints[1],\n      x2 = _endPoints$2.x,\n      y2 = _endPoints$2.y;\n\n  var clipPath = ifOverflowMatches(props, \'hidden\') ? "url(#".concat(clipPathId, ")") : undefined;\n\n  var lineProps = ReferenceLine_objectSpread({\n    clipPath: clipPath\n  }, types_filterProps(props, true), {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2\n  });\n\n  return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n    className: classnames_default()(\'recharts-reference-line\', className)\n  }, ReferenceLine_renderLine(shape, lineProps), component_Label.renderCallByParent(props, rectWithCoords({\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2\n  })));\n}\n\nReferenceLine.displayName = \'ReferenceLine\';\nReferenceLine.defaultProps = {\n  isFront: false,\n  ifOverflow: \'discard\',\n  xAxisId: 0,\n  yAxisId: 0,\n  fill: \'none\',\n  stroke: \'#ccc\',\n  fillOpacity: 1,\n  strokeWidth: 1,\n  position: \'middle\'\n};\n/* harmony default export */ var cartesian_ReferenceLine = (ReferenceLine);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/ReferenceDot.js\n\n\nfunction ReferenceDot_extends() { ReferenceDot_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ReferenceDot_extends.apply(this, arguments); }\n\nfunction ReferenceDot_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction ReferenceDot_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ReferenceDot_ownKeys(Object(source), true).forEach(function (key) { ReferenceDot_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ReferenceDot_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction ReferenceDot_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * @fileOverview Reference Dot\n */\n\n\n\n\n\n\n\n\n\n\n\nvar ReferenceDot_getCoordinate = function getCoordinate(props) {\n  var x = props.x,\n      y = props.y,\n      xAxis = props.xAxis,\n      yAxis = props.yAxis;\n  var scales = CartesianUtils_createLabeldScales({\n    x: xAxis.scale,\n    y: yAxis.scale\n  });\n  var result = scales.apply({\n    x: x,\n    y: y\n  }, {\n    bandAware: true\n  });\n\n  if (ifOverflowMatches(props, \'discard\') && !scales.isInRange(result)) {\n    return null;\n  }\n\n  return result;\n};\n\nfunction ReferenceDot(props) {\n  var x = props.x,\n      y = props.y,\n      r = props.r,\n      alwaysShow = props.alwaysShow,\n      clipPathId = props.clipPathId;\n  var isX = DataUtils_isNumOrStr(x);\n  var isY = DataUtils_isNumOrStr(y);\n  warn(alwaysShow === undefined, \'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.\');\n\n  if (!isX || !isY) {\n    return null;\n  }\n\n  var coordinate = ReferenceDot_getCoordinate(props);\n\n  if (!coordinate) {\n    return null;\n  }\n\n  var cx = coordinate.x,\n      cy = coordinate.y;\n  var shape = props.shape,\n      className = props.className;\n  var clipPath = ifOverflowMatches(props, \'hidden\') ? "url(#".concat(clipPathId, ")") : undefined;\n\n  var dotProps = ReferenceDot_objectSpread({\n    clipPath: clipPath\n  }, types_filterProps(props, true), {\n    cx: cx,\n    cy: cy\n  });\n\n  return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n    className: classnames_default()(\'recharts-reference-dot\', className)\n  }, ReferenceDot.renderDot(shape, dotProps), component_Label.renderCallByParent(props, {\n    x: cx - r,\n    y: cy - r,\n    width: 2 * r,\n    height: 2 * r\n  }));\n}\n\nReferenceDot.displayName = \'ReferenceDot\';\nReferenceDot.defaultProps = {\n  isFront: false,\n  ifOverflow: \'discard\',\n  xAxisId: 0,\n  yAxisId: 0,\n  r: 10,\n  fill: \'#fff\',\n  stroke: \'#ccc\',\n  fillOpacity: 1,\n  strokeWidth: 1\n};\n\nReferenceDot.renderDot = function (option, props) {\n  var dot;\n\n  if (react_default.a.isValidElement(option)) {\n    dot = react_default.a.cloneElement(option, props);\n  } else if (isFunction_default()(option)) {\n    dot = option(props);\n  } else {\n    dot = /*#__PURE__*/react_default.a.createElement(shape_Dot, ReferenceDot_extends({}, props, {\n      cx: props.cx,\n      cy: props.cy,\n      className: "recharts-reference-dot-dot"\n    }));\n  }\n\n  return dot;\n};\n\n/* harmony default export */ var cartesian_ReferenceDot = (ReferenceDot);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/ReferenceArea.js\n\n\nfunction ReferenceArea_extends() { ReferenceArea_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ReferenceArea_extends.apply(this, arguments); }\n\nfunction ReferenceArea_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction ReferenceArea_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ReferenceArea_ownKeys(Object(source), true).forEach(function (key) { ReferenceArea_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ReferenceArea_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction ReferenceArea_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * @fileOverview Reference Line\n */\n\n\n\n\n\n\n\n\n\n\n\nvar ReferenceArea_getRect = function getRect(hasX1, hasX2, hasY1, hasY2, props) {\n  var xValue1 = props.x1,\n      xValue2 = props.x2,\n      yValue1 = props.y1,\n      yValue2 = props.y2,\n      xAxis = props.xAxis,\n      yAxis = props.yAxis;\n  var scales = CartesianUtils_createLabeldScales({\n    x: xAxis.scale,\n    y: yAxis.scale\n  });\n  var p1 = {\n    x: hasX1 ? scales.x.apply(xValue1, {\n      position: \'start\'\n    }) : scales.x.rangeMin,\n    y: hasY1 ? scales.y.apply(yValue1, {\n      position: \'start\'\n    }) : scales.y.rangeMin\n  };\n  var p2 = {\n    x: hasX2 ? scales.x.apply(xValue2, {\n      position: \'end\'\n    }) : scales.x.rangeMax,\n    y: hasY2 ? scales.y.apply(yValue2, {\n      position: \'end\'\n    }) : scales.y.rangeMax\n  };\n\n  if (ifOverflowMatches(props, \'discard\') && (!scales.isInRange(p1) || !scales.isInRange(p2))) {\n    return null;\n  }\n\n  return rectWithPoints(p1, p2);\n};\n\nfunction ReferenceArea(props) {\n  var x1 = props.x1,\n      x2 = props.x2,\n      y1 = props.y1,\n      y2 = props.y2,\n      className = props.className,\n      alwaysShow = props.alwaysShow,\n      clipPathId = props.clipPathId;\n  warn(alwaysShow === undefined, \'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.\');\n  var hasX1 = DataUtils_isNumOrStr(x1);\n  var hasX2 = DataUtils_isNumOrStr(x2);\n  var hasY1 = DataUtils_isNumOrStr(y1);\n  var hasY2 = DataUtils_isNumOrStr(y2);\n  var shape = props.shape;\n\n  if (!hasX1 && !hasX2 && !hasY1 && !hasY2 && !shape) {\n    return null;\n  }\n\n  var rect = ReferenceArea_getRect(hasX1, hasX2, hasY1, hasY2, props);\n\n  if (!rect && !shape) {\n    return null;\n  }\n\n  var clipPath = ifOverflowMatches(props, \'hidden\') ? "url(#".concat(clipPathId, ")") : undefined;\n  return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n    className: classnames_default()(\'recharts-reference-area\', className)\n  }, ReferenceArea.renderRect(shape, ReferenceArea_objectSpread({\n    clipPath: clipPath\n  }, types_filterProps(props, true), {}, rect)), component_Label.renderCallByParent(props, rect));\n}\n\nReferenceArea.displayName = \'ReferenceArea\';\nReferenceArea.defaultProps = {\n  isFront: false,\n  ifOverflow: \'discard\',\n  xAxisId: 0,\n  yAxisId: 0,\n  r: 10,\n  fill: \'#ccc\',\n  fillOpacity: 0.5,\n  stroke: \'none\',\n  strokeWidth: 1\n};\n\nReferenceArea.renderRect = function (option, props) {\n  var rect;\n\n  if (react_default.a.isValidElement(option)) {\n    rect = react_default.a.cloneElement(option, props);\n  } else if (isFunction_default()(option)) {\n    rect = option(props);\n  } else {\n    rect = /*#__PURE__*/react_default.a.createElement(shape_Rectangle, ReferenceArea_extends({}, props, {\n      className: "recharts-reference-area-rect"\n    }));\n  }\n\n  return rect;\n};\n\n/* harmony default export */ var cartesian_ReferenceArea = (ReferenceArea);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/CartesianAxis.js\n\n\n\nfunction CartesianAxis_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { CartesianAxis_typeof = function _typeof(obj) { return typeof obj; }; } else { CartesianAxis_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return CartesianAxis_typeof(obj); }\n\nfunction CartesianAxis_extends() { CartesianAxis_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CartesianAxis_extends.apply(this, arguments); }\n\nfunction CartesianAxis_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CartesianAxis_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CartesianAxis_ownKeys(Object(source), true).forEach(function (key) { CartesianAxis_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CartesianAxis_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CartesianAxis_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction CartesianAxis_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CartesianAxis_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction CartesianAxis_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction CartesianAxis_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction CartesianAxis_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CartesianAxis_createClass(Constructor, protoProps, staticProps) { if (protoProps) CartesianAxis_defineProperties(Constructor.prototype, protoProps); if (staticProps) CartesianAxis_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction CartesianAxis_createSuper(Derived) { return function () { var Super = CartesianAxis_getPrototypeOf(Derived), result; if (CartesianAxis_isNativeReflectConstruct()) { var NewTarget = CartesianAxis_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return CartesianAxis_possibleConstructorReturn(this, result); }; }\n\nfunction CartesianAxis_possibleConstructorReturn(self, call) { if (call && (CartesianAxis_typeof(call) === "object" || typeof call === "function")) { return call; } return CartesianAxis_assertThisInitialized(self); }\n\nfunction CartesianAxis_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction CartesianAxis_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction CartesianAxis_getPrototypeOf(o) { CartesianAxis_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return CartesianAxis_getPrototypeOf(o); }\n\nfunction CartesianAxis_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) CartesianAxis_setPrototypeOf(subClass, superClass); }\n\nfunction CartesianAxis_setPrototypeOf(o, p) { CartesianAxis_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return CartesianAxis_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Cartesian Axis\n */\n\n\n\n\n\n\n\n\n\n\n\nvar CartesianAxis_CartesianAxis = /*#__PURE__*/function (_Component) {\n  CartesianAxis_inherits(CartesianAxis, _Component);\n\n  var _super = CartesianAxis_createSuper(CartesianAxis);\n\n  function CartesianAxis() {\n    CartesianAxis_classCallCheck(this, CartesianAxis);\n\n    return _super.apply(this, arguments);\n  }\n\n  CartesianAxis_createClass(CartesianAxis, [{\n    key: "shouldComponentUpdate",\n    value: function shouldComponentUpdate(_ref) {\n      var viewBox = _ref.viewBox,\n          restProps = CartesianAxis_objectWithoutProperties(_ref, ["viewBox"]);\n\n      // props.viewBox is sometimes generated every time -\n      // check that specially as object equality is likely to fail\n      var _this$props = this.props,\n          viewBoxOld = _this$props.viewBox,\n          restPropsOld = CartesianAxis_objectWithoutProperties(_this$props, ["viewBox"]);\n\n      return !shallowEqual(viewBox, viewBoxOld) || !shallowEqual(restProps, restPropsOld);\n    }\n    /**\n     * Calculate the coordinates of endpoints in ticks\n     * @param  {Object} data The data of a simple tick\n     * @return {Object} (x1, y1): The coordinate of endpoint close to tick text\n     *  (x2, y2): The coordinate of endpoint close to axis\n     */\n\n  }, {\n    key: "getTickLineCoord",\n    value: function getTickLineCoord(data) {\n      var _this$props2 = this.props,\n          x = _this$props2.x,\n          y = _this$props2.y,\n          width = _this$props2.width,\n          height = _this$props2.height,\n          orientation = _this$props2.orientation,\n          tickSize = _this$props2.tickSize,\n          mirror = _this$props2.mirror,\n          tickMargin = _this$props2.tickMargin;\n      var x1, x2, y1, y2, tx, ty;\n      var sign = mirror ? -1 : 1;\n      var finalTickSize = data.tickSize || tickSize;\n      var tickCoord = DataUtils_isNumber(data.tickCoord) ? data.tickCoord : data.coordinate;\n\n      switch (orientation) {\n        case \'top\':\n          x1 = x2 = data.coordinate;\n          y2 = y + +!mirror * height;\n          y1 = y2 - sign * finalTickSize;\n          ty = y1 - sign * tickMargin;\n          tx = tickCoord;\n          break;\n\n        case \'left\':\n          y1 = y2 = data.coordinate;\n          x2 = x + +!mirror * width;\n          x1 = x2 - sign * finalTickSize;\n          tx = x1 - sign * tickMargin;\n          ty = tickCoord;\n          break;\n\n        case \'right\':\n          y1 = y2 = data.coordinate;\n          x2 = x + +mirror * width;\n          x1 = x2 + sign * finalTickSize;\n          tx = x1 + sign * tickMargin;\n          ty = tickCoord;\n          break;\n\n        default:\n          x1 = x2 = data.coordinate;\n          y2 = y + +mirror * height;\n          y1 = y2 + sign * finalTickSize;\n          ty = y1 + sign * tickMargin;\n          tx = tickCoord;\n          break;\n      }\n\n      return {\n        line: {\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        },\n        tick: {\n          x: tx,\n          y: ty\n        }\n      };\n    }\n  }, {\n    key: "getTickTextAnchor",\n    value: function getTickTextAnchor() {\n      var _this$props3 = this.props,\n          orientation = _this$props3.orientation,\n          mirror = _this$props3.mirror;\n      var textAnchor;\n\n      switch (orientation) {\n        case \'left\':\n          textAnchor = mirror ? \'start\' : \'end\';\n          break;\n\n        case \'right\':\n          textAnchor = mirror ? \'end\' : \'start\';\n          break;\n\n        default:\n          textAnchor = \'middle\';\n          break;\n      }\n\n      return textAnchor;\n    }\n  }, {\n    key: "getTickVerticalAnchor",\n    value: function getTickVerticalAnchor() {\n      var _this$props4 = this.props,\n          orientation = _this$props4.orientation,\n          mirror = _this$props4.mirror;\n      var verticalAnchor = \'end\';\n\n      switch (orientation) {\n        case \'left\':\n        case \'right\':\n          verticalAnchor = \'middle\';\n          break;\n\n        case \'top\':\n          verticalAnchor = mirror ? \'start\' : \'end\';\n          break;\n\n        default:\n          verticalAnchor = mirror ? \'end\' : \'start\';\n          break;\n      }\n\n      return verticalAnchor;\n    }\n  }, {\n    key: "renderAxisLine",\n    value: function renderAxisLine() {\n      var _this$props5 = this.props,\n          x = _this$props5.x,\n          y = _this$props5.y,\n          width = _this$props5.width,\n          height = _this$props5.height,\n          orientation = _this$props5.orientation,\n          mirror = _this$props5.mirror,\n          axisLine = _this$props5.axisLine;\n\n      var props = CartesianAxis_objectSpread({}, types_filterProps(this.props), {}, types_filterProps(axisLine), {\n        fill: \'none\'\n      });\n\n      if (orientation === \'top\' || orientation === \'bottom\') {\n        var needHeight = +(orientation === \'top\' && !mirror || orientation === \'bottom\' && mirror);\n        props = CartesianAxis_objectSpread({}, props, {\n          x1: x,\n          y1: y + needHeight * height,\n          x2: x + width,\n          y2: y + needHeight * height\n        });\n      } else {\n        var needWidth = +(orientation === \'left\' && !mirror || orientation === \'right\' && mirror);\n        props = CartesianAxis_objectSpread({}, props, {\n          x1: x + needWidth * width,\n          y1: y,\n          x2: x + needWidth * width,\n          y2: y + height\n        });\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("line", CartesianAxis_extends({}, props, {\n        className: classnames_default()(\'recharts-cartesian-axis-line\', get_default()(axisLine, \'className\'))\n      }));\n    }\n  }, {\n    key: "renderTicks",\n\n    /**\n     * render the ticks\n     * @param {Array} ticks The ticks to actually render (overrides what was passed in props)\n     * @return {ReactComponent} renderedTicks\n     */\n    value: function renderTicks(ticks) {\n      var _this = this;\n\n      var _this$props6 = this.props,\n          tickLine = _this$props6.tickLine,\n          stroke = _this$props6.stroke,\n          tick = _this$props6.tick,\n          tickFormatter = _this$props6.tickFormatter,\n          unit = _this$props6.unit;\n      var finalTicks = CartesianAxis.getTicks(CartesianAxis_objectSpread({}, this.props, {\n        ticks: ticks\n      }));\n      var textAnchor = this.getTickTextAnchor();\n      var verticalAnchor = this.getTickVerticalAnchor();\n      var axisProps = types_filterProps(this.props);\n      var customTickProps = types_filterProps(tick);\n\n      var tickLineProps = CartesianAxis_objectSpread({}, axisProps, {\n        fill: \'none\'\n      }, types_filterProps(tickLine));\n\n      var items = finalTicks.map(function (entry, i) {\n        var _this$getTickLineCoor = _this.getTickLineCoord(entry),\n            lineCoord = _this$getTickLineCoor.line,\n            tickCoord = _this$getTickLineCoor.tick;\n\n        var tickProps = CartesianAxis_objectSpread({\n          textAnchor: textAnchor,\n          verticalAnchor: verticalAnchor\n        }, axisProps, {\n          stroke: \'none\',\n          fill: stroke\n        }, customTickProps, {}, tickCoord, {\n          index: i,\n          payload: entry,\n          visibleTicksCount: finalTicks.length,\n          tickFormatter: tickFormatter\n        });\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, CartesianAxis_extends({\n          className: "recharts-cartesian-axis-tick",\n          key: "tick-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }, types_adaptEventsOfChild(_this.props, entry, i)), tickLine && /*#__PURE__*/react_default.a.createElement("line", CartesianAxis_extends({}, tickLineProps, lineCoord, {\n          className: classnames_default()(\'recharts-cartesian-axis-tick-line\', get_default()(tickLine, \'className\'))\n        })), tick && CartesianAxis.renderTickItem(tick, tickProps, "".concat(isFunction_default()(tickFormatter) ? tickFormatter(entry.value, i) : entry.value).concat(unit || \'\')));\n      });\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-cartesian-axis-ticks"\n      }, items);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props7 = this.props,\n          axisLine = _this$props7.axisLine,\n          width = _this$props7.width,\n          height = _this$props7.height,\n          ticksGenerator = _this$props7.ticksGenerator,\n          className = _this$props7.className,\n          hide = _this$props7.hide;\n\n      if (hide) {\n        return null;\n      }\n\n      var _this$props8 = this.props,\n          ticks = _this$props8.ticks,\n          noTicksProps = CartesianAxis_objectWithoutProperties(_this$props8, ["ticks"]);\n\n      var finalTicks = ticks;\n\n      if (isFunction_default()(ticksGenerator)) {\n        finalTicks = ticks && ticks.length > 0 ? ticksGenerator(this.props) : ticksGenerator(noTicksProps);\n      }\n\n      if (width <= 0 || height <= 0 || !finalTicks || !finalTicks.length) {\n        return null;\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: classnames_default()(\'recharts-cartesian-axis\', className)\n      }, axisLine && this.renderAxisLine(), this.renderTicks(finalTicks), component_Label.renderCallByParent(this.props));\n    }\n  }], [{\n    key: "getTicks",\n    // todo Array<Tick>\n    value: function getTicks(props) {\n      var tick = props.tick,\n          ticks = props.ticks,\n          viewBox = props.viewBox,\n          minTickGap = props.minTickGap,\n          orientation = props.orientation,\n          interval = props.interval,\n          tickFormatter = props.tickFormatter,\n          unit = props.unit;\n\n      if (!ticks || !ticks.length || !tick) {\n        return [];\n      }\n\n      if (DataUtils_isNumber(interval) || util_Global.isSsr) {\n        return CartesianAxis.getNumberIntervalTicks(ticks, typeof interval === \'number\' && DataUtils_isNumber(interval) ? interval : 0);\n      }\n\n      if (interval === \'preserveStartEnd\') {\n        return CartesianAxis.getTicksStart({\n          ticks: ticks,\n          tickFormatter: tickFormatter,\n          viewBox: viewBox,\n          orientation: orientation,\n          minTickGap: minTickGap,\n          unit: unit\n        }, true);\n      }\n\n      if (interval === \'preserveStart\') {\n        return CartesianAxis.getTicksStart({\n          ticks: ticks,\n          tickFormatter: tickFormatter,\n          viewBox: viewBox,\n          orientation: orientation,\n          minTickGap: minTickGap,\n          unit: unit\n        });\n      }\n\n      return CartesianAxis.getTicksEnd({\n        ticks: ticks,\n        tickFormatter: tickFormatter,\n        viewBox: viewBox,\n        orientation: orientation,\n        minTickGap: minTickGap,\n        unit: unit\n      });\n    }\n  }, {\n    key: "getNumberIntervalTicks",\n    value: function getNumberIntervalTicks(ticks, interval) {\n      return ticks.filter(function (entry, i) {\n        return i % (interval + 1) === 0;\n      });\n    }\n  }, {\n    key: "getTicksStart",\n    value: function getTicksStart(_ref2, preserveEnd) {\n      var ticks = _ref2.ticks,\n          tickFormatter = _ref2.tickFormatter,\n          viewBox = _ref2.viewBox,\n          orientation = _ref2.orientation,\n          minTickGap = _ref2.minTickGap,\n          unit = _ref2.unit;\n      var x = viewBox.x,\n          y = viewBox.y,\n          width = viewBox.width,\n          height = viewBox.height;\n      var sizeKey = orientation === \'top\' || orientation === \'bottom\' ? \'width\' : \'height\';\n      var result = (ticks || []).slice(); // we need add the width of \'unit\' only when sizeKey === \'width\'\n\n      var unitSize = unit && sizeKey === \'width\' ? DOMUtils_getStringSize(unit)[sizeKey] : 0;\n      var len = result.length;\n      var sign = len >= 2 ? mathSign(result[1].coordinate - result[0].coordinate) : 1;\n      var start, end;\n\n      if (sign === 1) {\n        start = sizeKey === \'width\' ? x : y;\n        end = sizeKey === \'width\' ? x + width : y + height;\n      } else {\n        start = sizeKey === \'width\' ? x + width : y + height;\n        end = sizeKey === \'width\' ? x : y;\n      }\n\n      if (preserveEnd) {\n        // Try to guarantee the tail to be displayed\n        var tail = ticks[len - 1];\n        var tailContent = isFunction_default()(tickFormatter) ? tickFormatter(tail.value, len - 1) : tail.value;\n        var tailSize = DOMUtils_getStringSize(tailContent)[sizeKey] + unitSize;\n        var tailGap = sign * (tail.coordinate + sign * tailSize / 2 - end);\n        result[len - 1] = tail = CartesianAxis_objectSpread({}, tail, {\n          tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign : tail.coordinate\n        });\n        var isTailShow = sign * (tail.tickCoord - sign * tailSize / 2 - start) >= 0 && sign * (tail.tickCoord + sign * tailSize / 2 - end) <= 0;\n\n        if (isTailShow) {\n          end = tail.tickCoord - sign * (tailSize / 2 + minTickGap);\n          result[len - 1] = CartesianAxis_objectSpread({}, tail, {\n            isShow: true\n          });\n        }\n      }\n\n      var count = preserveEnd ? len - 1 : len;\n\n      for (var i = 0; i < count; i++) {\n        var entry = result[i];\n        var content = isFunction_default()(tickFormatter) ? tickFormatter(entry.value, i) : entry.value;\n        var size = DOMUtils_getStringSize(content)[sizeKey] + unitSize;\n\n        if (i === 0) {\n          var gap = sign * (entry.coordinate - sign * size / 2 - start);\n          result[i] = entry = CartesianAxis_objectSpread({}, entry, {\n            tickCoord: gap < 0 ? entry.coordinate - gap * sign : entry.coordinate\n          });\n        } else {\n          result[i] = entry = CartesianAxis_objectSpread({}, entry, {\n            tickCoord: entry.coordinate\n          });\n        }\n\n        var isShow = sign * (entry.tickCoord - sign * size / 2 - start) >= 0 && sign * (entry.tickCoord + sign * size / 2 - end) <= 0;\n\n        if (isShow) {\n          start = entry.tickCoord + sign * (size / 2 + minTickGap);\n          result[i] = CartesianAxis_objectSpread({}, entry, {\n            isShow: true\n          });\n        }\n      }\n\n      return result.filter(function (entry) {\n        return entry.isShow;\n      });\n    }\n  }, {\n    key: "getTicksEnd",\n    value: function getTicksEnd(_ref3) {\n      var ticks = _ref3.ticks,\n          tickFormatter = _ref3.tickFormatter,\n          viewBox = _ref3.viewBox,\n          orientation = _ref3.orientation,\n          minTickGap = _ref3.minTickGap,\n          unit = _ref3.unit;\n      var x = viewBox.x,\n          y = viewBox.y,\n          width = viewBox.width,\n          height = viewBox.height;\n      var sizeKey = orientation === \'top\' || orientation === \'bottom\' ? \'width\' : \'height\'; // we need add the width of \'unit\' only when sizeKey === \'width\'\n\n      var unitSize = unit && sizeKey === \'width\' ? DOMUtils_getStringSize(unit)[sizeKey] : 0;\n      var result = (ticks || []).slice();\n      var len = result.length;\n      var sign = len >= 2 ? mathSign(result[1].coordinate - result[0].coordinate) : 1;\n      var start, end;\n\n      if (sign === 1) {\n        start = sizeKey === \'width\' ? x : y;\n        end = sizeKey === \'width\' ? x + width : y + height;\n      } else {\n        start = sizeKey === \'width\' ? x + width : y + height;\n        end = sizeKey === \'width\' ? x : y;\n      }\n\n      for (var i = len - 1; i >= 0; i--) {\n        var entry = result[i];\n        var content = isFunction_default()(tickFormatter) ? tickFormatter(entry.value, len - i - 1) : entry.value;\n        var size = DOMUtils_getStringSize(content)[sizeKey] + unitSize;\n\n        if (i === len - 1) {\n          var gap = sign * (entry.coordinate + sign * size / 2 - end);\n          result[i] = entry = CartesianAxis_objectSpread({}, entry, {\n            tickCoord: gap > 0 ? entry.coordinate - gap * sign : entry.coordinate\n          });\n        } else {\n          result[i] = entry = CartesianAxis_objectSpread({}, entry, {\n            tickCoord: entry.coordinate\n          });\n        }\n\n        var isShow = sign * (entry.tickCoord - sign * size / 2 - start) >= 0 && sign * (entry.tickCoord + sign * size / 2 - end) <= 0;\n\n        if (isShow) {\n          end = entry.tickCoord - sign * (size / 2 + minTickGap);\n          result[i] = CartesianAxis_objectSpread({}, entry, {\n            isShow: true\n          });\n        }\n      }\n\n      return result.filter(function (entry) {\n        return entry.isShow;\n      });\n    }\n  }, {\n    key: "renderTickItem",\n    value: function renderTickItem(option, props, value) {\n      var tickItem;\n\n      if (react_default.a.isValidElement(option)) {\n        tickItem = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        tickItem = option(props);\n      } else {\n        tickItem = /*#__PURE__*/react_default.a.createElement(component_Text, CartesianAxis_extends({}, props, {\n          className: "recharts-cartesian-axis-tick-value"\n        }), value);\n      }\n\n      return tickItem;\n    }\n  }]);\n\n  return CartesianAxis;\n}(react["Component"]);\n\nCartesianAxis_CartesianAxis.displayName = \'CartesianAxis\';\nCartesianAxis_CartesianAxis.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  viewBox: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  // The orientation of axis\n  orientation: \'bottom\',\n  // The ticks\n  ticks: [],\n  stroke: \'#666\',\n  tickLine: true,\n  axisLine: true,\n  tick: true,\n  mirror: false,\n  minTickGap: 5,\n  // The width or height of tick\n  tickSize: 6,\n  tickMargin: 2,\n  interval: \'preserveEnd\'\n};\n/* harmony default export */ var cartesian_CartesianAxis = (CartesianAxis_CartesianAxis);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/CartesianGrid.js\n\n\nfunction CartesianGrid_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { CartesianGrid_typeof = function _typeof(obj) { return typeof obj; }; } else { CartesianGrid_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return CartesianGrid_typeof(obj); }\n\nfunction CartesianGrid_extends() { CartesianGrid_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CartesianGrid_extends.apply(this, arguments); }\n\nfunction CartesianGrid_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CartesianGrid_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction CartesianGrid_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction CartesianGrid_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CartesianGrid_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CartesianGrid_ownKeys(Object(source), true).forEach(function (key) { CartesianGrid_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CartesianGrid_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CartesianGrid_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction CartesianGrid_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction CartesianGrid_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CartesianGrid_createClass(Constructor, protoProps, staticProps) { if (protoProps) CartesianGrid_defineProperties(Constructor.prototype, protoProps); if (staticProps) CartesianGrid_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction CartesianGrid_createSuper(Derived) { return function () { var Super = CartesianGrid_getPrototypeOf(Derived), result; if (CartesianGrid_isNativeReflectConstruct()) { var NewTarget = CartesianGrid_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return CartesianGrid_possibleConstructorReturn(this, result); }; }\n\nfunction CartesianGrid_possibleConstructorReturn(self, call) { if (call && (CartesianGrid_typeof(call) === "object" || typeof call === "function")) { return call; } return CartesianGrid_assertThisInitialized(self); }\n\nfunction CartesianGrid_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction CartesianGrid_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction CartesianGrid_getPrototypeOf(o) { CartesianGrid_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return CartesianGrid_getPrototypeOf(o); }\n\nfunction CartesianGrid_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) CartesianGrid_setPrototypeOf(subClass, superClass); }\n\nfunction CartesianGrid_setPrototypeOf(o, p) { CartesianGrid_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return CartesianGrid_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Cartesian Grid\n */\n\n\n\n\nvar CartesianGrid_CartesianGrid = /*#__PURE__*/function (_PureComponent) {\n  CartesianGrid_inherits(CartesianGrid, _PureComponent);\n\n  var _super = CartesianGrid_createSuper(CartesianGrid);\n\n  function CartesianGrid() {\n    CartesianGrid_classCallCheck(this, CartesianGrid);\n\n    return _super.apply(this, arguments);\n  }\n\n  CartesianGrid_createClass(CartesianGrid, [{\n    key: "renderHorizontal",\n\n    /**\n     * Draw the horizontal grid lines\n     * @param {Array} horizontalPoints either passed in as props or generated from function\n     * @return {Group} Horizontal lines\n     */\n    value: function renderHorizontal(horizontalPoints) {\n      var _this = this;\n\n      var _this$props = this.props,\n          x = _this$props.x,\n          width = _this$props.width,\n          horizontal = _this$props.horizontal;\n\n      if (!horizontalPoints || !horizontalPoints.length) {\n        return null;\n      }\n\n      var items = horizontalPoints.map(function (entry, i) {\n        var props = CartesianGrid_objectSpread({}, _this.props, {\n          x1: x,\n          y1: entry,\n          x2: x + width,\n          y2: entry,\n          key: "line-".concat(i),\n          index: i\n        });\n\n        return CartesianGrid.renderLineItem(horizontal, props);\n      });\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-cartesian-grid-horizontal"\n      }, items);\n    }\n    /**\n     * Draw vertical grid lines\n     * @param {Array} verticalPoints either passed in as props or generated from function\n     * @return {Group} Vertical lines\n     */\n\n  }, {\n    key: "renderVertical",\n    value: function renderVertical(verticalPoints) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          y = _this$props2.y,\n          height = _this$props2.height,\n          vertical = _this$props2.vertical;\n\n      if (!verticalPoints || !verticalPoints.length) {\n        return null;\n      }\n\n      var items = verticalPoints.map(function (entry, i) {\n        var props = CartesianGrid_objectSpread({}, _this2.props, {\n          x1: entry,\n          y1: y,\n          x2: entry,\n          y2: y + height,\n          key: "line-".concat(i),\n          index: i\n        });\n\n        return CartesianGrid.renderLineItem(vertical, props);\n      });\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-cartesian-grid-vertical"\n      }, items);\n    }\n    /**\n     * Draw vertical grid stripes filled by colors\n     * @param {Array} verticalPoints either passed in as props or generated from function\n     * @return {Group} Vertical stripes\n     */\n\n  }, {\n    key: "renderVerticalStripes",\n    value: function renderVerticalStripes(verticalPoints) {\n      var verticalFill = this.props.verticalFill;\n\n      if (!verticalFill || !verticalFill.length) {\n        return null;\n      }\n\n      var _this$props3 = this.props,\n          fillOpacity = _this$props3.fillOpacity,\n          x = _this$props3.x,\n          y = _this$props3.y,\n          width = _this$props3.width,\n          height = _this$props3.height;\n      var verticalPointsUpdated = verticalPoints.slice().sort(function (a, b) {\n        return a - b;\n      });\n\n      if (x !== verticalPointsUpdated[0]) {\n        verticalPointsUpdated.unshift(0);\n      }\n\n      var items = verticalPointsUpdated.map(function (entry, i) {\n        var lineWidth = verticalPointsUpdated[i + 1] ? verticalPointsUpdated[i + 1] - entry : x + width - entry;\n\n        if (lineWidth <= 0) {\n          return null;\n        }\n\n        var colorIndex = i % verticalFill.length;\n        return /*#__PURE__*/react_default.a.createElement("rect", {\n          key: "react-".concat(i) // eslint-disable-line react/no-array-index-key\n          ,\n          x: Math.round(entry + x - x),\n          y: y,\n          width: lineWidth,\n          height: height,\n          stroke: "none",\n          fill: verticalFill[colorIndex],\n          fillOpacity: fillOpacity,\n          className: "recharts-cartesian-grid-bg"\n        });\n      });\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-cartesian-gridstripes-vertical"\n      }, items);\n    }\n    /**\n     * Draw horizontal grid stripes filled by colors\n     * @param {Array} horizontalPoints either passed in as props or generated from function\n     * @return {Group} Horizontal stripes\n     */\n\n  }, {\n    key: "renderHorizontalStripes",\n    value: function renderHorizontalStripes(horizontalPoints) {\n      var horizontalFill = this.props.horizontalFill;\n\n      if (!horizontalFill || !horizontalFill.length) {\n        return null;\n      }\n\n      var _this$props4 = this.props,\n          fillOpacity = _this$props4.fillOpacity,\n          x = _this$props4.x,\n          y = _this$props4.y,\n          width = _this$props4.width,\n          height = _this$props4.height;\n      var horizontalPointsUpdated = horizontalPoints.slice().sort(function (a, b) {\n        return a - b;\n      });\n\n      if (y !== horizontalPointsUpdated[0]) {\n        horizontalPointsUpdated.unshift(0);\n      }\n\n      var items = horizontalPointsUpdated.map(function (entry, i) {\n        var lineHeight = horizontalPointsUpdated[i + 1] ? horizontalPointsUpdated[i + 1] - entry : y + height - entry;\n\n        if (lineHeight <= 0) {\n          return null;\n        }\n\n        var colorIndex = i % horizontalFill.length;\n        return /*#__PURE__*/react_default.a.createElement("rect", {\n          key: "react-".concat(i) // eslint-disable-line react/no-array-index-key\n          ,\n          y: Math.round(entry + y - y),\n          x: x,\n          height: lineHeight,\n          width: width,\n          stroke: "none",\n          fill: horizontalFill[colorIndex],\n          fillOpacity: fillOpacity,\n          className: "recharts-cartesian-grid-bg"\n        });\n      });\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-cartesian-gridstripes-horizontal"\n      }, items);\n    }\n  }, {\n    key: "renderBackground",\n    value: function renderBackground() {\n      var fill = this.props.fill;\n\n      if (!fill || fill === \'none\') {\n        return null;\n      }\n\n      var _this$props5 = this.props,\n          fillOpacity = _this$props5.fillOpacity,\n          x = _this$props5.x,\n          y = _this$props5.y,\n          width = _this$props5.width,\n          height = _this$props5.height;\n      return /*#__PURE__*/react_default.a.createElement("rect", {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        stroke: "none",\n        fill: fill,\n        fillOpacity: fillOpacity,\n        className: "recharts-cartesian-grid-bg"\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props6 = this.props,\n          x = _this$props6.x,\n          y = _this$props6.y,\n          width = _this$props6.width,\n          height = _this$props6.height,\n          horizontal = _this$props6.horizontal,\n          vertical = _this$props6.vertical,\n          horizontalCoordinatesGenerator = _this$props6.horizontalCoordinatesGenerator,\n          verticalCoordinatesGenerator = _this$props6.verticalCoordinatesGenerator,\n          xAxis = _this$props6.xAxis,\n          yAxis = _this$props6.yAxis,\n          offset = _this$props6.offset,\n          chartWidth = _this$props6.chartWidth,\n          chartHeight = _this$props6.chartHeight;\n\n      if (!DataUtils_isNumber(width) || width <= 0 || !DataUtils_isNumber(height) || height <= 0 || !DataUtils_isNumber(x) || x !== +x || !DataUtils_isNumber(y) || y !== +y) {\n        return null;\n      }\n\n      var _this$props7 = this.props,\n          horizontalPoints = _this$props7.horizontalPoints,\n          verticalPoints = _this$props7.verticalPoints; // No horizontal points are specified\n\n      if ((!horizontalPoints || !horizontalPoints.length) && isFunction_default()(horizontalCoordinatesGenerator)) {\n        horizontalPoints = horizontalCoordinatesGenerator({\n          yAxis: yAxis,\n          width: chartWidth,\n          height: chartHeight,\n          offset: offset\n        });\n      } // No vertical points are specified\n\n\n      if ((!verticalPoints || !verticalPoints.length) && isFunction_default()(verticalCoordinatesGenerator)) {\n        verticalPoints = verticalCoordinatesGenerator({\n          xAxis: xAxis,\n          width: chartWidth,\n          height: chartHeight,\n          offset: offset\n        });\n      }\n\n      return /*#__PURE__*/react_default.a.createElement("g", {\n        className: "recharts-cartesian-grid"\n      }, this.renderBackground(), horizontal && this.renderHorizontal(horizontalPoints), vertical && this.renderVertical(verticalPoints), horizontal && this.renderHorizontalStripes(horizontalPoints), vertical && this.renderVerticalStripes(verticalPoints));\n    }\n  }], [{\n    key: "renderLineItem",\n    value: function renderLineItem(option, props) {\n      var lineItem;\n\n      if (react_default.a.isValidElement(option)) {\n        lineItem = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        lineItem = option(props);\n      } else {\n        var x1 = props.x1,\n            y1 = props.y1,\n            x2 = props.x2,\n            y2 = props.y2,\n            key = props.key,\n            others = CartesianGrid_objectWithoutProperties(props, ["x1", "y1", "x2", "y2", "key"]);\n\n        lineItem = /*#__PURE__*/react_default.a.createElement("line", CartesianGrid_extends({}, types_filterProps(others), {\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          fill: "none",\n          key: key\n        }));\n      }\n\n      return lineItem;\n    }\n  }]);\n\n  return CartesianGrid;\n}(react["PureComponent"]);\n\nCartesianGrid_CartesianGrid.displayName = \'CartesianGrid\';\nCartesianGrid_CartesianGrid.defaultProps = {\n  horizontal: true,\n  vertical: true,\n  // The ordinates of horizontal grid lines\n  horizontalPoints: [],\n  // The abscissas of vertical grid lines\n  verticalPoints: [],\n  stroke: \'#ccc\',\n  fill: \'none\',\n  // The fill of colors of grid lines\n  verticalFill: [],\n  horizontalFill: []\n};\n/* harmony default export */ var cartesian_CartesianGrid = (CartesianGrid_CartesianGrid);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/ErrorBar.js\nfunction ErrorBar_extends() { ErrorBar_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ErrorBar_extends.apply(this, arguments); }\n\nfunction ErrorBar_slicedToArray(arr, i) { return ErrorBar_arrayWithHoles(arr) || ErrorBar_iterableToArrayLimit(arr, i) || ErrorBar_unsupportedIterableToArray(arr, i) || ErrorBar_nonIterableRest(); }\n\nfunction ErrorBar_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction ErrorBar_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return ErrorBar_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ErrorBar_arrayLikeToArray(o, minLen); }\n\nfunction ErrorBar_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ErrorBar_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction ErrorBar_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ErrorBar_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ErrorBar_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction ErrorBar_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * @fileOverview Render a group of error bar\n */\n\n\n\n\nfunction ErrorBar(props) {\n  var offset = props.offset,\n      layout = props.layout,\n      width = props.width,\n      dataKey = props.dataKey,\n      data = props.data,\n      dataPointFormatter = props.dataPointFormatter,\n      xAxis = props.xAxis,\n      yAxis = props.yAxis,\n      others = ErrorBar_objectWithoutProperties(props, ["offset", "layout", "width", "dataKey", "data", "dataPointFormatter", "xAxis", "yAxis"]);\n\n  var svgProps = types_filterProps(others);\n  var errorBars = data.map(function (entry, i) {\n    var _dataPointFormatter = dataPointFormatter(entry, dataKey),\n        x = _dataPointFormatter.x,\n        y = _dataPointFormatter.y,\n        value = _dataPointFormatter.value,\n        errorVal = _dataPointFormatter.errorVal;\n\n    if (!errorVal) {\n      return null;\n    }\n\n    var lineCoordinates = [];\n    var lowBound, highBound;\n\n    if (Array.isArray(errorVal)) {\n      var _errorVal = ErrorBar_slicedToArray(errorVal, 2);\n\n      lowBound = _errorVal[0];\n      highBound = _errorVal[1];\n    } else {\n      lowBound = highBound = errorVal;\n    }\n\n    if (layout === \'vertical\') {\n      // error bar for horizontal charts, the y is fixed, x is a range value\n      var scale = xAxis.scale;\n      var yMid = y + offset;\n      var yMin = yMid + width;\n      var yMax = yMid - width;\n      var xMin = scale(value - lowBound);\n      var xMax = scale(value + highBound); // the right line of |--|\n\n      lineCoordinates.push({\n        x1: xMax,\n        y1: yMin,\n        x2: xMax,\n        y2: yMax\n      }); // the middle line of |--|\n\n      lineCoordinates.push({\n        x1: xMin,\n        y1: yMid,\n        x2: xMax,\n        y2: yMid\n      }); // the left line of |--|\n\n      lineCoordinates.push({\n        x1: xMin,\n        y1: yMin,\n        x2: xMin,\n        y2: yMax\n      });\n    } else if (layout === \'horizontal\') {\n      // error bar for horizontal charts, the x is fixed, y is a range value\n      var _scale = yAxis.scale;\n      var xMid = x + offset;\n\n      var _xMin = xMid - width;\n\n      var _xMax = xMid + width;\n\n      var _yMin = _scale(value - lowBound);\n\n      var _yMax = _scale(value + highBound); // the top line\n\n\n      lineCoordinates.push({\n        x1: _xMin,\n        y1: _yMax,\n        x2: _xMax,\n        y2: _yMax\n      }); // the middle line\n\n      lineCoordinates.push({\n        x1: xMid,\n        y1: _yMin,\n        x2: xMid,\n        y2: _yMax\n      }); // the bottom line\n\n      lineCoordinates.push({\n        x1: _xMin,\n        y1: _yMin,\n        x2: _xMax,\n        y2: _yMin\n      });\n    }\n\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      react_default.a.createElement(container_Layer, ErrorBar_extends({\n        className: "recharts-errorBar",\n        key: "bar-".concat(i)\n      }, svgProps), lineCoordinates.map(function (coordinates, index) {\n        return /*#__PURE__*/react_default.a.createElement("line", ErrorBar_extends({}, coordinates, {\n          key: "line-".concat(index)\n        }));\n      }))\n    );\n  });\n  return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n    className: "recharts-errorBars"\n  }, errorBars);\n}\n\nErrorBar.defaultProps = {\n  stroke: \'black\',\n  strokeWidth: 1.5,\n  width: 5,\n  offset: 0,\n  layout: \'horizontal\'\n};\nErrorBar.displayName = \'ErrorBar\';\n/* harmony default export */ var cartesian_ErrorBar = (ErrorBar);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/Line.js\n\n\n\n\nfunction Line_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Line_typeof = function _typeof(obj) { return typeof obj; }; } else { Line_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Line_typeof(obj); }\n\nfunction Line_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Line_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Line_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Line_extends() { Line_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Line_extends.apply(this, arguments); }\n\nfunction Line_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Line_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Line_ownKeys(Object(source), true).forEach(function (key) { Line_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Line_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Line_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Line_toConsumableArray(arr) { return Line_arrayWithoutHoles(arr) || Line_iterableToArray(arr) || Line_unsupportedIterableToArray(arr) || Line_nonIterableSpread(); }\n\nfunction Line_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction Line_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Line_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Line_arrayLikeToArray(o, minLen); }\n\nfunction Line_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction Line_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Line_arrayLikeToArray(arr); }\n\nfunction Line_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Line_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Line_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Line_createClass(Constructor, protoProps, staticProps) { if (protoProps) Line_defineProperties(Constructor.prototype, protoProps); if (staticProps) Line_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Line_createSuper(Derived) { return function () { var Super = Line_getPrototypeOf(Derived), result; if (Line_isNativeReflectConstruct()) { var NewTarget = Line_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Line_possibleConstructorReturn(this, result); }; }\n\nfunction Line_possibleConstructorReturn(self, call) { if (call && (Line_typeof(call) === "object" || typeof call === "function")) { return call; } return Line_assertThisInitialized(self); }\n\nfunction Line_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Line_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Line_getPrototypeOf(o) { Line_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Line_getPrototypeOf(o); }\n\nfunction Line_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Line_setPrototypeOf(subClass, superClass); }\n\nfunction Line_setPrototypeOf(o, p) { Line_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Line_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Line\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Line_Line = /*#__PURE__*/function (_PureComponent) {\n  Line_inherits(Line, _PureComponent);\n\n  var _super = Line_createSuper(Line);\n\n  function Line() {\n    var _this;\n\n    Line_classCallCheck(this, Line);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.mainCurve = void 0;\n    _this.state = {\n      isAnimationFinished: true,\n      totalLength: 0\n    };\n\n    _this.getStrokeDasharray = function (length, totalLength, lines) {\n      var lineLength = lines.reduce(function (pre, next) {\n        return pre + next;\n      });\n      var count = Math.floor(length / lineLength);\n      var remainLength = length % lineLength;\n      var restLength = totalLength - length;\n      var remainLines = [];\n\n      for (var i = 0, sum = 0;; sum += lines[i], ++i) {\n        if (sum + lines[i] > remainLength) {\n          remainLines = [].concat(Line_toConsumableArray(lines.slice(0, i)), [remainLength - sum]);\n          break;\n        }\n      }\n\n      var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n      return [].concat(Line_toConsumableArray(Line.repeat(lines, count)), Line_toConsumableArray(remainLines), emptyLines).map(function (line) {\n        return "".concat(line, "px");\n      }).join(\', \');\n    };\n\n    _this.id = uniqueId(\'recharts-line-\');\n\n    _this.cachePrevData = function (points) {\n      _this.setState({\n        prevPoints: points\n      });\n    };\n\n    _this.pathRef = function (node) {\n      _this.mainCurve = node;\n    };\n\n    _this.handleAnimationEnd = function () {\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (_this.props.onAnimationEnd) {\n        _this.props.onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (_this.props.onAnimationStart) {\n        _this.props.onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  Line_createClass(Line, [{\n    key: "componentDidMount",\n\n    /* eslint-disable  react/no-did-mount-set-state */\n    value: function componentDidMount() {\n      if (!this.props.isAnimationActive) {\n        return;\n      }\n\n      var totalLength = this.getTotalLength();\n      this.setState({\n        totalLength: totalLength\n      });\n    } // eslint-disable-next-line camelcase\n\n  }, {\n    key: "UNSAFE_componentWillReceiveProps",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          points = _this$props.points;\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(points);\n      }\n    }\n  }, {\n    key: "getTotalLength",\n    value: function getTotalLength() {\n      var curveDom = this.mainCurve;\n\n      try {\n        return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;\n      } catch (err) {\n        return 0;\n      }\n    }\n  }, {\n    key: "renderErrorBar",\n    value: function renderErrorBar() {\n      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props2 = this.props,\n          points = _this$props2.points,\n          xAxis = _this$props2.xAxis,\n          yAxis = _this$props2.yAxis,\n          layout = _this$props2.layout,\n          children = _this$props2.children;\n      var errorBarItems = ReactUtils_findAllByType(children, cartesian_ErrorBar.displayName);\n\n      if (!errorBarItems) {\n        return null;\n      }\n\n      function dataPointFormatter(dataPoint, dataKey) {\n        return {\n          x: dataPoint.x,\n          y: dataPoint.y,\n          value: dataPoint.value,\n          errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n        };\n      }\n\n      return errorBarItems.map(function (item, i) {\n        return react_default.a.cloneElement(item, {\n          key: "bar-".concat(i),\n          data: points,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          layout: layout,\n          dataPointFormatter: dataPointFormatter\n        });\n      });\n    }\n  }, {\n    key: "renderDots",\n    value: function renderDots(needClip, clipPathId) {\n      var isAnimationActive = this.props.isAnimationActive;\n\n      if (isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props3 = this.props,\n          dot = _this$props3.dot,\n          points = _this$props3.points,\n          dataKey = _this$props3.dataKey;\n      var lineProps = types_filterProps(this.props);\n      var customDotProps = types_filterProps(dot, true);\n      var dots = points.map(function (entry, i) {\n        var dotProps = Line_objectSpread({\n          key: "dot-".concat(i),\n          r: 3\n        }, lineProps, {}, customDotProps, {\n          value: entry.value,\n          dataKey: dataKey,\n          cx: entry.x,\n          cy: entry.y,\n          index: i,\n          payload: entry.payload\n        });\n\n        return Line.renderDotItem(dot, dotProps);\n      });\n      var dotsProps = {\n        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null\n      };\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, Line_extends({\n        className: "recharts-line-dots",\n        key: "dots"\n      }, dotsProps), dots);\n    }\n  }, {\n    key: "renderCurveStatically",\n    value: function renderCurveStatically(points, needClip, clipPathId, props) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _this$props4 = this.props,\n          type = _this$props4.type,\n          layout = _this$props4.layout,\n          connectNulls = _this$props4.connectNulls,\n          ref = _this$props4.ref,\n          others = Line_objectWithoutProperties(_this$props4, ["type", "layout", "connectNulls", "ref"]);\n\n      var curveProps = Line_objectSpread({}, types_filterProps(others, true), {\n        fill: \'none\',\n        className: \'recharts-line-curve\',\n        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null,\n        points: points\n      }, props, {\n        type: type,\n        layout: layout,\n        connectNulls: connectNulls\n      });\n\n      return /*#__PURE__*/react_default.a.createElement(shape_Curve, Line_extends({}, curveProps, {\n        pathRef: this.pathRef\n      }));\n    }\n  }, {\n    key: "renderCurveWithAnimation",\n    value: function renderCurveWithAnimation(needClip, clipPathId) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          points = _this$props5.points,\n          strokeDasharray = _this$props5.strokeDasharray,\n          isAnimationActive = _this$props5.isAnimationActive,\n          animationBegin = _this$props5.animationBegin,\n          animationDuration = _this$props5.animationDuration,\n          animationEasing = _this$props5.animationEasing,\n          animationId = _this$props5.animationId,\n          animateNewValues = _this$props5.animateNewValues,\n          width = _this$props5.width,\n          height = _this$props5.height;\n      var _this$state = this.state,\n          prevPoints = _this$state.prevPoints,\n          totalLength = _this$state.totalLength;\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "line-".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n\n        if (prevPoints) {\n          var prevPointsDiffFactor = prevPoints.length / points.length;\n          var stepData = points.map(function (entry, index) {\n            var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n\n            if (prevPoints[prevPointIndex]) {\n              var prev = prevPoints[prevPointIndex];\n              var interpolatorX = interpolateNumber(prev.x, entry.x);\n              var interpolatorY = interpolateNumber(prev.y, entry.y);\n              return Line_objectSpread({}, entry, {\n                x: interpolatorX(t),\n                y: interpolatorY(t)\n              });\n            } // magic number of faking previous x and y location\n\n\n            if (animateNewValues) {\n              var _interpolatorX = interpolateNumber(width * 2, entry.x);\n\n              var _interpolatorY = interpolateNumber(height / 2, entry.y);\n\n              return Line_objectSpread({}, entry, {\n                x: _interpolatorX(t),\n                y: _interpolatorY(t)\n              });\n            }\n\n            return Line_objectSpread({}, entry, {\n              x: entry.x,\n              y: entry.y\n            });\n          });\n          return _this2.renderCurveStatically(stepData, needClip, clipPathId);\n        }\n\n        var interpolator = interpolateNumber(0, totalLength);\n        var curLength = interpolator(t);\n        var currentStrokeDasharray;\n\n        if (strokeDasharray) {\n          var lines = "".concat(strokeDasharray).split(/[,\\s]+/gim).map(function (num) {\n            return parseFloat(num);\n          });\n          currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);\n        } else {\n          currentStrokeDasharray = "".concat(curLength, "px ").concat(totalLength - curLength, "px");\n        }\n\n        return _this2.renderCurveStatically(points, needClip, clipPathId, {\n          strokeDasharray: currentStrokeDasharray\n        });\n      });\n    }\n  }, {\n    key: "renderCurve",\n    value: function renderCurve(needClip, clipPathId) {\n      var _this$props6 = this.props,\n          points = _this$props6.points,\n          isAnimationActive = _this$props6.isAnimationActive;\n      var _this$state2 = this.state,\n          prevPoints = _this$state2.prevPoints,\n          totalLength = _this$state2.totalLength;\n\n      if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !isEqual_default()(prevPoints, points))) {\n        return this.renderCurveWithAnimation(needClip, clipPathId);\n      }\n\n      return this.renderCurveStatically(points, needClip, clipPathId);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props7 = this.props,\n          hide = _this$props7.hide,\n          dot = _this$props7.dot,\n          points = _this$props7.points,\n          className = _this$props7.className,\n          xAxis = _this$props7.xAxis,\n          yAxis = _this$props7.yAxis,\n          top = _this$props7.top,\n          left = _this$props7.left,\n          width = _this$props7.width,\n          height = _this$props7.height,\n          isAnimationActive = _this$props7.isAnimationActive,\n          id = _this$props7.id;\n\n      if (hide || !points || !points.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var hasSinglePoint = points.length === 1;\n      var layerClass = classnames_default()(\'recharts-line\', className);\n      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;\n      var clipPathId = isNil_default()(id) ? this.id : id;\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass\n      }, needClip ? /*#__PURE__*/react_default.a.createElement("defs", null, /*#__PURE__*/react_default.a.createElement("clipPath", {\n        id: "clipPath-".concat(clipPathId)\n      }, /*#__PURE__*/react_default.a.createElement("rect", {\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(), (hasSinglePoint || dot) && this.renderDots(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && component_LabelList.renderCallByParent(this.props, points));\n    }\n  }], [{\n    key: "repeat",\n    value: function repeat(lines, count) {\n      var linesUnit = lines.length % 2 !== 0 ? [].concat(Line_toConsumableArray(lines), [0]) : lines;\n      var result = [];\n\n      for (var i = 0; i < count; ++i) {\n        result = [].concat(Line_toConsumableArray(result), Line_toConsumableArray(linesUnit));\n      }\n\n      return result;\n    }\n  }, {\n    key: "renderDotItem",\n    value: function renderDotItem(option, props) {\n      var dotItem;\n\n      if (react_default.a.isValidElement(option)) {\n        dotItem = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        dotItem = option(props);\n      } else {\n        var className = classnames_default()(\'recharts-line-dot\', option ? option.className : \'\');\n        dotItem = /*#__PURE__*/react_default.a.createElement(shape_Dot, Line_extends({}, props, {\n          className: className\n        }));\n      }\n\n      return dotItem;\n    }\n  }]);\n\n  return Line;\n}(react["PureComponent"]);\n\nLine_Line.displayName = \'Line\';\nLine_Line.defaultProps = {\n  xAxisId: 0,\n  yAxisId: 0,\n  connectNulls: false,\n  activeDot: true,\n  dot: true,\n  legendType: \'line\',\n  stroke: \'#3182bd\',\n  strokeWidth: 1,\n  fill: \'#fff\',\n  points: [],\n  isAnimationActive: !util_Global.isSsr,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: \'ease\',\n  hide: false\n};\n\nLine_Line.getComposedData = function (_ref2) {\n  var props = _ref2.props,\n      xAxis = _ref2.xAxis,\n      yAxis = _ref2.yAxis,\n      xAxisTicks = _ref2.xAxisTicks,\n      yAxisTicks = _ref2.yAxisTicks,\n      dataKey = _ref2.dataKey,\n      bandSize = _ref2.bandSize,\n      displayedData = _ref2.displayedData,\n      offset = _ref2.offset;\n  var layout = props.layout;\n  var points = displayedData.map(function (entry, index) {\n    var value = getValueByDataKey(entry, dataKey);\n\n    if (layout === \'horizontal\') {\n      return {\n        x: ChartUtils_getCateCoordinateOfLine({\n          axis: xAxis,\n          ticks: xAxisTicks,\n          bandSize: bandSize,\n          entry: entry,\n          index: index\n        }),\n        y: isNil_default()(value) ? null : yAxis.scale(value),\n        value: value,\n        payload: entry\n      };\n    }\n\n    return {\n      x: isNil_default()(value) ? null : xAxis.scale(value),\n      y: ChartUtils_getCateCoordinateOfLine({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize: bandSize,\n        entry: entry,\n        index: index\n      }),\n      value: value,\n      payload: entry\n    };\n  });\n  return Line_objectSpread({\n    points: points,\n    layout: layout\n  }, offset);\n};\n\n/* harmony default export */ var cartesian_Line = (Line_Line);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/Area.js\n\n\n\n\n\n\n\n\nfunction Area_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Area_typeof = function _typeof(obj) { return typeof obj; }; } else { Area_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Area_typeof(obj); }\n\nfunction Area_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Area_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Area_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Area_extends() { Area_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Area_extends.apply(this, arguments); }\n\nfunction Area_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Area_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Area_ownKeys(Object(source), true).forEach(function (key) { Area_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Area_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Area_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Area_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Area_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Area_createClass(Constructor, protoProps, staticProps) { if (protoProps) Area_defineProperties(Constructor.prototype, protoProps); if (staticProps) Area_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Area_createSuper(Derived) { return function () { var Super = Area_getPrototypeOf(Derived), result; if (Area_isNativeReflectConstruct()) { var NewTarget = Area_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Area_possibleConstructorReturn(this, result); }; }\n\nfunction Area_possibleConstructorReturn(self, call) { if (call && (Area_typeof(call) === "object" || typeof call === "function")) { return call; } return Area_assertThisInitialized(self); }\n\nfunction Area_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Area_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Area_getPrototypeOf(o) { Area_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Area_getPrototypeOf(o); }\n\nfunction Area_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Area_setPrototypeOf(subClass, superClass); }\n\nfunction Area_setPrototypeOf(o, p) { Area_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Area_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Area\n */\n\n\n\n\n\n\n\n\n\n\n\n\nvar Area_Area = /*#__PURE__*/function (_PureComponent) {\n  Area_inherits(Area, _PureComponent);\n\n  var _super = Area_createSuper(Area);\n\n  function Area() {\n    var _this;\n\n    Area_classCallCheck(this, Area);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: true\n    };\n    _this.id = uniqueId(\'recharts-area-\');\n\n    _this.cachePrevData = function (points, baseLine) {\n      _this.setState({\n        prevPoints: points,\n        prevBaseLine: baseLine\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (isFunction_default()(onAnimationEnd)) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (isFunction_default()(onAnimationStart)) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  Area_createClass(Area, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          points = _this$props.points,\n          baseLine = _this$props.baseLine;\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(points, baseLine);\n      }\n    }\n  }, {\n    key: "renderDots",\n    value: function renderDots(needClip, clipPathId) {\n      var isAnimationActive = this.props.isAnimationActive;\n      var isAnimationFinished = this.state.isAnimationFinished;\n\n      if (isAnimationActive && !isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props2 = this.props,\n          dot = _this$props2.dot,\n          points = _this$props2.points,\n          dataKey = _this$props2.dataKey;\n      var areaProps = types_filterProps(this.props);\n      var customDotProps = types_filterProps(dot, true);\n      var dots = points.map(function (entry, i) {\n        var dotProps = Area_objectSpread({\n          key: "dot-".concat(i),\n          r: 3\n        }, areaProps, {}, customDotProps, {\n          dataKey: dataKey,\n          cx: entry.x,\n          cy: entry.y,\n          index: i,\n          value: entry.value,\n          payload: entry.payload\n        });\n\n        return Area.renderDotItem(dot, dotProps);\n      });\n      var dotsProps = {\n        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null\n      };\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, Area_extends({\n        className: "recharts-area-dots"\n      }, dotsProps), dots);\n    }\n  }, {\n    key: "renderHorizontalRect",\n    value: function renderHorizontalRect(alpha) {\n      var _this$props3 = this.props,\n          baseLine = _this$props3.baseLine,\n          points = _this$props3.points,\n          strokeWidth = _this$props3.strokeWidth;\n      var startX = points[0].x;\n      var endX = points[points.length - 1].x;\n      var width = alpha * Math.abs(startX - endX);\n\n      var maxY = max_default()(points.map(function (entry) {\n        return entry.y || 0;\n      }));\n\n      if (DataUtils_isNumber(baseLine) && typeof baseLine === \'number\') {\n        maxY = Math.max(baseLine, maxY);\n      } else if (baseLine && isArray_default()(baseLine) && baseLine.length) {\n        maxY = Math.max(max_default()(baseLine.map(function (entry) {\n          return entry.y || 0;\n        })), maxY);\n      }\n\n      if (DataUtils_isNumber(maxY)) {\n        return /*#__PURE__*/react_default.a.createElement("rect", {\n          x: startX < endX ? startX : startX - width,\n          y: 0,\n          width: width,\n          height: Math.floor(maxY + (strokeWidth ? parseInt("".concat(strokeWidth), 10) : 1))\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: "renderVerticalRect",\n    value: function renderVerticalRect(alpha) {\n      var _this$props4 = this.props,\n          baseLine = _this$props4.baseLine,\n          points = _this$props4.points,\n          strokeWidth = _this$props4.strokeWidth;\n      var startY = points[0].y;\n      var endY = points[points.length - 1].y;\n      var height = alpha * Math.abs(startY - endY);\n\n      var maxX = max_default()(points.map(function (entry) {\n        return entry.x || 0;\n      }));\n\n      if (DataUtils_isNumber(baseLine) && typeof baseLine === \'number\') {\n        maxX = Math.max(baseLine, maxX);\n      } else if (baseLine && isArray_default()(baseLine) && baseLine.length) {\n        maxX = Math.max(max_default()(baseLine.map(function (entry) {\n          return entry.x || 0;\n        })), maxX);\n      }\n\n      if (DataUtils_isNumber(maxX)) {\n        return /*#__PURE__*/react_default.a.createElement("rect", {\n          x: 0,\n          y: startY < endY ? startY : startY - height,\n          width: maxX + (strokeWidth ? parseInt("".concat(strokeWidth), 10) : 1),\n          height: Math.floor(height)\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: "renderClipRect",\n    value: function renderClipRect(alpha) {\n      var layout = this.props.layout;\n\n      if (layout === \'vertical\') {\n        return this.renderVerticalRect(alpha);\n      }\n\n      return this.renderHorizontalRect(alpha);\n    }\n  }, {\n    key: "renderAreaStatically",\n    value: function renderAreaStatically(points, baseLine, needClip, clipPathId) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _this$props5 = this.props,\n          layout = _this$props5.layout,\n          type = _this$props5.type,\n          stroke = _this$props5.stroke,\n          connectNulls = _this$props5.connectNulls,\n          isRange = _this$props5.isRange,\n          ref = _this$props5.ref,\n          others = Area_objectWithoutProperties(_this$props5, ["layout", "type", "stroke", "connectNulls", "isRange", "ref"]);\n\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null\n      }, /*#__PURE__*/react_default.a.createElement(shape_Curve, Area_extends({}, types_filterProps(others, true), {\n        points: points,\n        connectNulls: connectNulls,\n        type: type,\n        baseLine: baseLine,\n        layout: layout,\n        stroke: "none",\n        className: "recharts-area-area"\n      })), stroke !== \'none\' && /*#__PURE__*/react_default.a.createElement(shape_Curve, Area_extends({}, types_filterProps(this.props), {\n        className: "recharts-area-curve",\n        layout: layout,\n        type: type,\n        connectNulls: connectNulls,\n        fill: "none",\n        points: points\n      })), stroke !== \'none\' && isRange && /*#__PURE__*/react_default.a.createElement(shape_Curve, Area_extends({}, types_filterProps(this.props), {\n        className: "recharts-area-curve",\n        layout: layout,\n        type: type,\n        connectNulls: connectNulls,\n        fill: "none",\n        points: baseLine\n      })));\n    }\n  }, {\n    key: "renderAreaWithAnimation",\n    value: function renderAreaWithAnimation(needClip, clipPathId) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          points = _this$props6.points,\n          baseLine = _this$props6.baseLine,\n          isAnimationActive = _this$props6.isAnimationActive,\n          animationBegin = _this$props6.animationBegin,\n          animationDuration = _this$props6.animationDuration,\n          animationEasing = _this$props6.animationEasing,\n          animationId = _this$props6.animationId;\n      var _this$state = this.state,\n          prevPoints = _this$state.prevPoints,\n          prevBaseLine = _this$state.prevBaseLine; // const clipPathId = _.isNil(id) ? this.id : id;\n\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "area-".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n\n        if (prevPoints) {\n          var prevPointsDiffFactor = prevPoints.length / points.length; // update animtaion\n\n          var stepPoints = points.map(function (entry, index) {\n            var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n\n            if (prevPoints[prevPointIndex]) {\n              var prev = prevPoints[prevPointIndex];\n              var interpolatorX = interpolateNumber(prev.x, entry.x);\n              var interpolatorY = interpolateNumber(prev.y, entry.y);\n              return Area_objectSpread({}, entry, {\n                x: interpolatorX(t),\n                y: interpolatorY(t)\n              });\n            }\n\n            return entry;\n          });\n          var stepBaseLine;\n\n          if (DataUtils_isNumber(baseLine) && typeof baseLine === \'number\') {\n            var interpolator = interpolateNumber(prevBaseLine, baseLine);\n            stepBaseLine = interpolator(t);\n          } else if (isNil_default()(baseLine) || isNaN_default()(baseLine)) {\n            var _interpolator = interpolateNumber(prevBaseLine, 0);\n\n            stepBaseLine = _interpolator(t);\n          } else {\n            stepBaseLine = baseLine.map(function (entry, index) {\n              var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n\n              if (prevBaseLine[prevPointIndex]) {\n                var prev = prevBaseLine[prevPointIndex];\n                var interpolatorX = interpolateNumber(prev.x, entry.x);\n                var interpolatorY = interpolateNumber(prev.y, entry.y);\n                return Area_objectSpread({}, entry, {\n                  x: interpolatorX(t),\n                  y: interpolatorY(t)\n                });\n              }\n\n              return entry;\n            });\n          }\n\n          return _this2.renderAreaStatically(stepPoints, stepBaseLine, needClip, clipPathId);\n        }\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, null, /*#__PURE__*/react_default.a.createElement("defs", null, /*#__PURE__*/react_default.a.createElement("clipPath", {\n          id: "animationClipPath-".concat(clipPathId)\n        }, _this2.renderClipRect(t))), /*#__PURE__*/react_default.a.createElement(container_Layer, {\n          clipPath: "url(#animationClipPath-".concat(clipPathId, ")")\n        }, _this2.renderAreaStatically(points, baseLine, needClip, clipPathId)));\n      });\n    }\n  }, {\n    key: "renderArea",\n    value: function renderArea(needClip, clipPathId) {\n      var _this$props7 = this.props,\n          points = _this$props7.points,\n          baseLine = _this$props7.baseLine,\n          isAnimationActive = _this$props7.isAnimationActive;\n      var _this$state2 = this.state,\n          prevPoints = _this$state2.prevPoints,\n          prevBaseLine = _this$state2.prevBaseLine,\n          totalLength = _this$state2.totalLength;\n\n      if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !isEqual_default()(prevPoints, points) || !isEqual_default()(prevBaseLine, baseLine))) {\n        return this.renderAreaWithAnimation(needClip, clipPathId);\n      }\n\n      return this.renderAreaStatically(points, baseLine, needClip, clipPathId);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props8 = this.props,\n          hide = _this$props8.hide,\n          dot = _this$props8.dot,\n          points = _this$props8.points,\n          className = _this$props8.className,\n          top = _this$props8.top,\n          left = _this$props8.left,\n          xAxis = _this$props8.xAxis,\n          yAxis = _this$props8.yAxis,\n          width = _this$props8.width,\n          height = _this$props8.height,\n          isAnimationActive = _this$props8.isAnimationActive,\n          id = _this$props8.id;\n\n      if (hide || !points || !points.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var hasSinglePoint = points.length === 1;\n      var layerClass = classnames_default()(\'recharts-area\', className);\n      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;\n      var clipPathId = isNil_default()(id) ? this.id : id;\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass\n      }, needClip ? /*#__PURE__*/react_default.a.createElement("defs", null, /*#__PURE__*/react_default.a.createElement("clipPath", {\n        id: "clipPath-".concat(clipPathId)\n      }, /*#__PURE__*/react_default.a.createElement("rect", {\n        x: left,\n        y: top,\n        width: width,\n        height: Math.floor(height)\n      }))) : null, !hasSinglePoint ? this.renderArea(needClip, clipPathId) : null, (dot || hasSinglePoint) && this.renderDots(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && component_LabelList.renderCallByParent(this.props, points));\n    }\n  }]);\n\n  return Area;\n}(react["PureComponent"]);\n\nArea_Area.displayName = \'Area\';\nArea_Area.defaultProps = {\n  stroke: \'#3182bd\',\n  fill: \'#3182bd\',\n  fillOpacity: 0.6,\n  xAxisId: 0,\n  yAxisId: 0,\n  legendType: \'line\',\n  connectNulls: false,\n  // points of area\n  points: [],\n  dot: false,\n  activeDot: true,\n  hide: false,\n  isAnimationActive: !util_Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: \'ease\'\n};\n\nArea_Area.getBaseValue = function (props, xAxis, yAxis) {\n  var layout = props.layout,\n      baseValue = props.baseValue;\n\n  if (DataUtils_isNumber(baseValue) && typeof baseValue === \'number\') {\n    return baseValue;\n  }\n\n  var numericAxis = layout === \'horizontal\' ? yAxis : xAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === \'number\') {\n    var max = Math.max(domain[0], domain[1]);\n    var min = Math.min(domain[0], domain[1]);\n\n    if (baseValue === \'dataMin\') {\n      return min;\n    }\n\n    if (baseValue === \'dataMax\') {\n      return max;\n    }\n\n    return max < 0 ? max : Math.max(Math.min(domain[0], domain[1]), 0);\n  }\n\n  if (baseValue === \'dataMin\') {\n    return domain[0];\n  }\n\n  if (baseValue === \'dataMax\') {\n    return domain[1];\n  }\n\n  return domain[0];\n};\n\nArea_Area.getComposedData = function (_ref2) {\n  var props = _ref2.props,\n      xAxis = _ref2.xAxis,\n      yAxis = _ref2.yAxis,\n      xAxisTicks = _ref2.xAxisTicks,\n      yAxisTicks = _ref2.yAxisTicks,\n      bandSize = _ref2.bandSize,\n      dataKey = _ref2.dataKey,\n      stackedData = _ref2.stackedData,\n      dataStartIndex = _ref2.dataStartIndex,\n      displayedData = _ref2.displayedData,\n      offset = _ref2.offset;\n  var layout = props.layout;\n  var hasStack = stackedData && stackedData.length;\n  var baseValue = Area_Area.getBaseValue(props, xAxis, yAxis);\n  var isRange = false;\n  var points = displayedData.map(function (entry, index) {\n    var originalValue = getValueByDataKey(entry, dataKey);\n    var value;\n\n    if (hasStack) {\n      value = stackedData[dataStartIndex + index];\n    } else {\n      value = originalValue;\n\n      if (!isArray_default()(value)) {\n        value = [baseValue, value];\n      } else {\n        isRange = true;\n      }\n    }\n\n    var isBreakPoint = isNil_default()(value[1]) || hasStack && isNil_default()(originalValue);\n\n    if (layout === \'horizontal\') {\n      return {\n        x: ChartUtils_getCateCoordinateOfLine({\n          axis: xAxis,\n          ticks: xAxisTicks,\n          bandSize: bandSize,\n          entry: entry,\n          index: index\n        }),\n        y: isBreakPoint ? null : yAxis.scale(value[1]),\n        value: value,\n        payload: entry\n      };\n    }\n\n    return {\n      x: isBreakPoint ? null : xAxis.scale(value[1]),\n      y: ChartUtils_getCateCoordinateOfLine({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize: bandSize,\n        entry: entry,\n        index: index\n      }),\n      value: value,\n      payload: entry\n    };\n  });\n  var baseLine;\n\n  if (hasStack || isRange) {\n    baseLine = points.map(function (entry) {\n      if (layout === \'horizontal\') {\n        return {\n          x: entry.x,\n          y: !isNil_default()(get_default()(entry, \'value[0]\')) ? yAxis.scale(get_default()(entry, \'value[0]\')) : null\n        };\n      }\n\n      return {\n        x: !isNil_default()(get_default()(entry, \'value[0]\')) ? xAxis.scale(get_default()(entry, \'value[0]\')) : null,\n        y: entry.y\n      };\n    });\n  } else if (layout === \'horizontal\') {\n    baseLine = yAxis.scale(baseValue);\n  } else {\n    baseLine = xAxis.scale(baseValue);\n  }\n\n  return Area_objectSpread({\n    points: points,\n    baseLine: baseLine,\n    layout: layout,\n    isRange: isRange\n  }, offset);\n};\n\nArea_Area.renderDotItem = function (option, props) {\n  var dotItem;\n\n  if (react_default.a.isValidElement(option)) {\n    dotItem = react_default.a.cloneElement(option, props);\n  } else if (isFunction_default()(option)) {\n    dotItem = option(props);\n  } else {\n    dotItem = /*#__PURE__*/react_default.a.createElement(shape_Dot, Area_extends({}, props, {\n      className: "recharts-area-dot"\n    }));\n  }\n\n  return dotItem;\n};\n\n/* harmony default export */ var cartesian_Area = (Area_Area);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/Bar.js\n\n\n\n\n\nfunction Bar_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Bar_typeof = function _typeof(obj) { return typeof obj; }; } else { Bar_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Bar_typeof(obj); }\n\nfunction Bar_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Bar_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Bar_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Bar_extends() { Bar_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Bar_extends.apply(this, arguments); }\n\nfunction Bar_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Bar_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Bar_ownKeys(Object(source), true).forEach(function (key) { Bar_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Bar_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Bar_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Bar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Bar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Bar_createClass(Constructor, protoProps, staticProps) { if (protoProps) Bar_defineProperties(Constructor.prototype, protoProps); if (staticProps) Bar_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Bar_createSuper(Derived) { return function () { var Super = Bar_getPrototypeOf(Derived), result; if (Bar_isNativeReflectConstruct()) { var NewTarget = Bar_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Bar_possibleConstructorReturn(this, result); }; }\n\nfunction Bar_possibleConstructorReturn(self, call) { if (call && (Bar_typeof(call) === "object" || typeof call === "function")) { return call; } return Bar_assertThisInitialized(self); }\n\nfunction Bar_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Bar_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Bar_getPrototypeOf(o) { Bar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Bar_getPrototypeOf(o); }\n\nfunction Bar_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Bar_setPrototypeOf(subClass, superClass); }\n\nfunction Bar_setPrototypeOf(o, p) { Bar_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Bar_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Render a group of bar\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Bar_Bar = /*#__PURE__*/function (_PureComponent) {\n  Bar_inherits(Bar, _PureComponent);\n\n  var _super = Bar_createSuper(Bar);\n\n  function Bar() {\n    var _this;\n\n    Bar_classCallCheck(this, Bar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: false\n    };\n    _this.id = uniqueId(\'recharts-bar-\');\n\n    _this.cachePrevData = function (data) {\n      _this.setState({\n        prevData: data\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (onAnimationEnd) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (onAnimationStart) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  Bar_createClass(Bar, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          data = _this$props.data;\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(data);\n      }\n    }\n  }, {\n    key: "renderRectanglesStatically",\n    value: function renderRectanglesStatically(data) {\n      var _this2 = this;\n\n      var shape = this.props.shape;\n      var baseProps = types_filterProps(this.props);\n      return data && data.map(function (entry, i) {\n        var props = Bar_objectSpread({}, baseProps, {}, entry, {\n          index: i\n        });\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, Bar_extends({\n          className: "recharts-bar-rectangle"\n        }, types_adaptEventsOfChild(_this2.props, entry, i), {\n          key: "rectangle-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }), Bar.renderRectangle(shape, props));\n      });\n    }\n  }, {\n    key: "renderRectanglesWithAnimation",\n    value: function renderRectanglesWithAnimation() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          layout = _this$props2.layout,\n          isAnimationActive = _this$props2.isAnimationActive,\n          animationBegin = _this$props2.animationBegin,\n          animationDuration = _this$props2.animationDuration,\n          animationEasing = _this$props2.animationEasing,\n          animationId = _this$props2.animationId;\n      var prevData = this.state.prevData;\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "bar-".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n        var stepData = data.map(function (entry, index) {\n          var prev = prevData && prevData[index];\n\n          if (prev) {\n            var interpolatorX = interpolateNumber(prev.x, entry.x);\n            var interpolatorY = interpolateNumber(prev.y, entry.y);\n            var interpolatorWidth = interpolateNumber(prev.width, entry.width);\n            var interpolatorHeight = interpolateNumber(prev.height, entry.height);\n            return Bar_objectSpread({}, entry, {\n              x: interpolatorX(t),\n              y: interpolatorY(t),\n              width: interpolatorWidth(t),\n              height: interpolatorHeight(t)\n            });\n          }\n\n          if (layout === \'horizontal\') {\n            var _interpolatorHeight = interpolateNumber(0, entry.height);\n\n            var h = _interpolatorHeight(t);\n\n            return Bar_objectSpread({}, entry, {\n              y: entry.y + entry.height - h,\n              height: h\n            });\n          }\n\n          var interpolator = interpolateNumber(0, entry.width);\n          var w = interpolator(t);\n          return Bar_objectSpread({}, entry, {\n            width: w\n          });\n        });\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, null, _this3.renderRectanglesStatically(stepData));\n      });\n    }\n  }, {\n    key: "renderRectangles",\n    value: function renderRectangles() {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          isAnimationActive = _this$props3.isAnimationActive;\n      var prevData = this.state.prevData;\n\n      if (isAnimationActive && data && data.length && (!prevData || !isEqual_default()(prevData, data))) {\n        return this.renderRectanglesWithAnimation();\n      }\n\n      return this.renderRectanglesStatically(data);\n    }\n  }, {\n    key: "renderBackground",\n    value: function renderBackground() {\n      var _this4 = this;\n\n      var data = this.props.data;\n      var backgroundProps = types_filterProps(this.props.background);\n      return data.map(function (entry, i) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var value = entry.value,\n            background = entry.background,\n            rest = Bar_objectWithoutProperties(entry, ["value", "background"]);\n\n        if (!background) {\n          return null;\n        }\n\n        var props = Bar_objectSpread({}, rest, {\n          fill: \'#eee\'\n        }, background, {}, backgroundProps, {}, types_adaptEventsOfChild(_this4.props, entry, i), {\n          index: i,\n          key: "background-bar-".concat(i),\n          className: \'recharts-bar-background-rectangle\'\n        });\n\n        return Bar.renderRectangle(_this4.props.background, props);\n      });\n    }\n  }, {\n    key: "renderErrorBar",\n    value: function renderErrorBar() {\n      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          xAxis = _this$props4.xAxis,\n          yAxis = _this$props4.yAxis,\n          layout = _this$props4.layout,\n          children = _this$props4.children;\n      var errorBarItems = ReactUtils_findAllByType(children, cartesian_ErrorBar.displayName);\n\n      if (!errorBarItems) {\n        return null;\n      }\n\n      var offset = layout === \'vertical\' ? data[0].height / 2 : data[0].width / 2;\n\n      function dataPointFormatter(dataPoint, dataKey) {\n        return {\n          x: dataPoint.x,\n          y: dataPoint.y,\n          value: dataPoint.value,\n          errorVal: getValueByDataKey(dataPoint, dataKey)\n        };\n      }\n\n      return errorBarItems.map(function (item, i) {\n        return react_default.a.cloneElement(item, {\n          key: "error-bar-".concat(i),\n          // eslint-disable-line react/no-array-index-key\n          data: data,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          layout: layout,\n          offset: offset,\n          dataPointFormatter: dataPointFormatter\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props5 = this.props,\n          hide = _this$props5.hide,\n          data = _this$props5.data,\n          className = _this$props5.className,\n          xAxis = _this$props5.xAxis,\n          yAxis = _this$props5.yAxis,\n          left = _this$props5.left,\n          top = _this$props5.top,\n          width = _this$props5.width,\n          height = _this$props5.height,\n          isAnimationActive = _this$props5.isAnimationActive,\n          background = _this$props5.background,\n          id = _this$props5.id;\n\n      if (hide || !data || !data.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var layerClass = classnames_default()(\'recharts-bar\', className);\n      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;\n      var clipPathId = isNil_default()(id) ? this.id : id;\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass\n      }, needClip ? /*#__PURE__*/react_default.a.createElement("defs", null, /*#__PURE__*/react_default.a.createElement("clipPath", {\n        id: "clipPath-".concat(clipPathId)\n      }, /*#__PURE__*/react_default.a.createElement("rect", {\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      }))) : null, /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-bar-rectangles",\n        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null\n      }, background ? this.renderBackground() : null, this.renderRectangles()), this.renderErrorBar(), (!isAnimationActive || isAnimationFinished) && component_LabelList.renderCallByParent(this.props, data));\n    }\n  }], [{\n    key: "renderRectangle",\n    value: function renderRectangle(option, props) {\n      var rectangle;\n\n      if (react_default.a.isValidElement(option)) {\n        rectangle = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        rectangle = option(props);\n      } else {\n        rectangle = /*#__PURE__*/react_default.a.createElement(shape_Rectangle, props);\n      }\n\n      return rectangle;\n    }\n  }]);\n\n  return Bar;\n}(react["PureComponent"]);\n\nBar_Bar.displayName = \'Bar\';\nBar_Bar.defaultProps = {\n  xAxisId: 0,\n  yAxisId: 0,\n  legendType: \'rect\',\n  minPointSize: 0,\n  hide: false,\n  // data of bar\n  data: [],\n  layout: \'vertical\',\n  isAnimationActive: !util_Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 400,\n  animationEasing: \'ease\'\n};\n\nBar_Bar.getComposedData = function (_ref2) {\n  var props = _ref2.props,\n      item = _ref2.item,\n      barPosition = _ref2.barPosition,\n      bandSize = _ref2.bandSize,\n      xAxis = _ref2.xAxis,\n      yAxis = _ref2.yAxis,\n      xAxisTicks = _ref2.xAxisTicks,\n      yAxisTicks = _ref2.yAxisTicks,\n      stackedData = _ref2.stackedData,\n      dataStartIndex = _ref2.dataStartIndex,\n      displayedData = _ref2.displayedData,\n      offset = _ref2.offset;\n  var pos = findPositionOfBar(barPosition, item);\n\n  if (!pos) {\n    return null;\n  }\n\n  var layout = props.layout;\n  var _item$props = item.props,\n      dataKey = _item$props.dataKey,\n      children = _item$props.children,\n      minPointSize = _item$props.minPointSize;\n  var numericAxis = layout === \'horizontal\' ? yAxis : xAxis;\n  var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n  var baseValue = getBaseValueOfBar({\n    numericAxis: numericAxis\n  });\n  var cells = ReactUtils_findAllByType(children, component_Cell.displayName);\n  var rects = displayedData.map(function (entry, index) {\n    var value, x, y, width, height, background;\n\n    if (stackedData) {\n      value = ChartUtils_truncateByDomain(stackedData[dataStartIndex + index], stackedDomain);\n    } else {\n      value = getValueByDataKey(entry, dataKey);\n\n      if (!isArray_default()(value)) {\n        value = [baseValue, value];\n      }\n    }\n\n    if (layout === \'horizontal\') {\n      x = ChartUtils_getCateCoordinateOfBar({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      y = yAxis.scale(value[1]);\n      width = pos.size;\n      height = yAxis.scale(value[0]) - yAxis.scale(value[1]);\n      background = {\n        x: x,\n        y: yAxis.y,\n        width: width,\n        height: yAxis.height\n      };\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {\n        var delta = mathSign(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));\n        y -= delta;\n        height += delta;\n      }\n    } else {\n      x = xAxis.scale(value[0]);\n      y = ChartUtils_getCateCoordinateOfBar({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      width = xAxis.scale(value[1]) - xAxis.scale(value[0]);\n      height = pos.size;\n      background = {\n        x: xAxis.x,\n        y: y,\n        width: xAxis.width,\n        height: height\n      };\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {\n        var _delta = mathSign(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));\n\n        width += _delta;\n      }\n    }\n\n    return Bar_objectSpread({}, entry, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      value: stackedData ? value : value[1],\n      payload: entry,\n      background: background\n    }, cells && cells[index] && cells[index].props);\n  });\n  return Bar_objectSpread({\n    data: rects,\n    layout: layout\n  }, offset);\n};\n\n/* harmony default export */ var cartesian_Bar = (Bar_Bar);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/ZAxis.js\n/**\n * @fileOverview Z Axis\n */\nfunction ZAxis(props) {\n  return null;\n}\n\nZAxis.displayName = \'ZAxis\';\nZAxis.defaultProps = {\n  zAxisId: 0,\n  range: [64, 64],\n  scale: \'auto\',\n  type: \'number\'\n};\n/* harmony default export */ var cartesian_ZAxis = (ZAxis);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/Scatter.js\n\n\n\n\nfunction Scatter_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Scatter_typeof = function _typeof(obj) { return typeof obj; }; } else { Scatter_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Scatter_typeof(obj); }\n\nfunction Scatter_extends() { Scatter_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Scatter_extends.apply(this, arguments); }\n\nfunction Scatter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Scatter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Scatter_ownKeys(Object(source), true).forEach(function (key) { Scatter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Scatter_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Scatter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Scatter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Scatter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Scatter_createClass(Constructor, protoProps, staticProps) { if (protoProps) Scatter_defineProperties(Constructor.prototype, protoProps); if (staticProps) Scatter_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Scatter_createSuper(Derived) { return function () { var Super = Scatter_getPrototypeOf(Derived), result; if (Scatter_isNativeReflectConstruct()) { var NewTarget = Scatter_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Scatter_possibleConstructorReturn(this, result); }; }\n\nfunction Scatter_possibleConstructorReturn(self, call) { if (call && (Scatter_typeof(call) === "object" || typeof call === "function")) { return call; } return Scatter_assertThisInitialized(self); }\n\nfunction Scatter_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Scatter_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Scatter_getPrototypeOf(o) { Scatter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Scatter_getPrototypeOf(o); }\n\nfunction Scatter_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Scatter_setPrototypeOf(subClass, superClass); }\n\nfunction Scatter_setPrototypeOf(o, p) { Scatter_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Scatter_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Render a group of scatters\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Scatter_Scatter = /*#__PURE__*/function (_PureComponent) {\n  Scatter_inherits(Scatter, _PureComponent);\n\n  var _super = Scatter_createSuper(Scatter);\n\n  function Scatter() {\n    var _this;\n\n    Scatter_classCallCheck(this, Scatter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: false\n    };\n\n    _this.cachePrevPoints = function (points) {\n      _this.setState({\n        prevPoints: points\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      _this.setState({\n        isAnimationFinished: true\n      });\n    };\n\n    _this.handleAnimationStart = function () {\n      _this.setState({\n        isAnimationFinished: false\n      });\n    };\n\n    _this.id = uniqueId(\'recharts-scatter-\');\n    return _this;\n  }\n\n  Scatter_createClass(Scatter, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          points = _this$props.points;\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevPoints(points);\n      }\n    }\n  }, {\n    key: "renderSymbolsStatically",\n    value: function renderSymbolsStatically(points) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          shape = _this$props2.shape,\n          activeShape = _this$props2.activeShape,\n          activeIndex = _this$props2.activeIndex;\n      var baseProps = types_filterProps(this.props);\n      return points.map(function (entry, i) {\n        var props = Scatter_objectSpread({\n          key: "symbol-".concat(i)\n        }, baseProps, {}, entry);\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, Scatter_extends({\n          className: "recharts-scatter-symbol"\n        }, types_adaptEventsOfChild(_this2.props, entry, i), {\n          key: "symbol-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }), Scatter.renderSymbolItem(activeIndex === i ? activeShape : shape, props));\n      });\n    }\n  }, {\n    key: "renderSymbolsWithAnimation",\n    value: function renderSymbolsWithAnimation() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          points = _this$props3.points,\n          isAnimationActive = _this$props3.isAnimationActive,\n          animationBegin = _this$props3.animationBegin,\n          animationDuration = _this$props3.animationDuration,\n          animationEasing = _this$props3.animationEasing,\n          animationId = _this$props3.animationId;\n      var prevPoints = this.state.prevPoints;\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "pie-".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n        var stepData = points.map(function (entry, index) {\n          var prev = prevPoints && prevPoints[index];\n\n          if (prev) {\n            var interpolatorCx = interpolateNumber(prev.cx, entry.cx);\n            var interpolatorCy = interpolateNumber(prev.cy, entry.cy);\n            var interpolatorSize = interpolateNumber(prev.size, entry.size);\n            return Scatter_objectSpread({}, entry, {\n              cx: interpolatorCx(t),\n              cy: interpolatorCy(t),\n              size: interpolatorSize(t)\n            });\n          }\n\n          var interpolator = interpolateNumber(0, entry.size);\n          return Scatter_objectSpread({}, entry, {\n            size: interpolator(t)\n          });\n        });\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, null, _this3.renderSymbolsStatically(stepData));\n      });\n    }\n  }, {\n    key: "renderSymbols",\n    value: function renderSymbols() {\n      var _this$props4 = this.props,\n          points = _this$props4.points,\n          isAnimationActive = _this$props4.isAnimationActive;\n      var prevPoints = this.state.prevPoints;\n\n      if (isAnimationActive && points && points.length && (!prevPoints || !isEqual_default()(prevPoints, points))) {\n        return this.renderSymbolsWithAnimation();\n      }\n\n      return this.renderSymbolsStatically(points);\n    }\n  }, {\n    key: "renderErrorBar",\n    value: function renderErrorBar() {\n      var isAnimationActive = this.props.isAnimationActive;\n\n      if (isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _this$props5 = this.props,\n          points = _this$props5.points,\n          xAxis = _this$props5.xAxis,\n          yAxis = _this$props5.yAxis,\n          children = _this$props5.children;\n      var errorBarItems = ReactUtils_findAllByType(children, cartesian_ErrorBar.displayName);\n\n      if (!errorBarItems) {\n        return null;\n      }\n\n      function dataPointFormatterY(dataPoint, dataKey) {\n        return {\n          x: dataPoint.cx,\n          y: dataPoint.cy,\n          value: +dataPoint.node.y,\n          errorVal: getValueByDataKey(dataPoint, dataKey)\n        };\n      }\n\n      function dataPointFormatterX(dataPoint, dataKey) {\n        return {\n          x: dataPoint.cx,\n          y: dataPoint.cy,\n          value: +dataPoint.node.x,\n          errorVal: getValueByDataKey(dataPoint, dataKey)\n        };\n      }\n\n      return errorBarItems.map(function (item, i) {\n        var direction = item.props.direction;\n        return react_default.a.cloneElement(item, {\n          key: i,\n          // eslint-disable-line react/no-array-index-key\n          data: points,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          layout: direction === \'x\' ? \'vertical\' : \'horizontal\',\n          dataPointFormatter: direction === \'x\' ? dataPointFormatterX : dataPointFormatterY\n        });\n      });\n    }\n  }, {\n    key: "renderLine",\n    value: function renderLine() {\n      var _this$props6 = this.props,\n          points = _this$props6.points,\n          line = _this$props6.line,\n          lineType = _this$props6.lineType,\n          lineJointType = _this$props6.lineJointType;\n      var scatterProps = types_filterProps(this.props);\n      var customLineProps = types_filterProps(line);\n      var linePoints, lineItem;\n\n      if (lineType === \'joint\') {\n        linePoints = points.map(function (entry) {\n          return {\n            x: entry.cx,\n            y: entry.cy\n          };\n        });\n      } else if (lineType === \'fitting\') {\n        var _getLinearRegression = getLinearRegression(points),\n            xmin = _getLinearRegression.xmin,\n            xmax = _getLinearRegression.xmax,\n            a = _getLinearRegression.a,\n            b = _getLinearRegression.b;\n\n        var linearExp = function linearExp(x) {\n          return a * x + b;\n        };\n\n        linePoints = [{\n          x: xmin,\n          y: linearExp(xmin)\n        }, {\n          x: xmax,\n          y: linearExp(xmax)\n        }];\n      }\n\n      var lineProps = Scatter_objectSpread({}, scatterProps, {\n        fill: \'none\',\n        stroke: scatterProps && scatterProps.fill\n      }, customLineProps, {\n        points: linePoints\n      });\n\n      if (react_default.a.isValidElement(line)) {\n        lineItem = react_default.a.cloneElement(line, lineProps);\n      } else if (isFunction_default()(line)) {\n        lineItem = line(lineProps);\n      } else {\n        lineItem = /*#__PURE__*/react_default.a.createElement(shape_Curve, Scatter_extends({}, lineProps, {\n          type: lineJointType\n        }));\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-scatter-line",\n        key: "recharts-scatter-line"\n      }, lineItem);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props7 = this.props,\n          hide = _this$props7.hide,\n          points = _this$props7.points,\n          line = _this$props7.line,\n          className = _this$props7.className,\n          xAxis = _this$props7.xAxis,\n          yAxis = _this$props7.yAxis,\n          left = _this$props7.left,\n          top = _this$props7.top,\n          width = _this$props7.width,\n          height = _this$props7.height,\n          id = _this$props7.id,\n          isAnimationActive = _this$props7.isAnimationActive;\n\n      if (hide || !points || !points.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var layerClass = classnames_default()(\'recharts-scatter\', className);\n      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;\n      var clipPathId = isNil_default()(id) ? this.id : id;\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass,\n        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null\n      }, needClip ? /*#__PURE__*/react_default.a.createElement("defs", null, /*#__PURE__*/react_default.a.createElement("clipPath", {\n        id: "clipPath-".concat(clipPathId)\n      }, /*#__PURE__*/react_default.a.createElement("rect", {\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      }))) : null, line && this.renderLine(), this.renderErrorBar(), /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        key: "recharts-scatter-symbols"\n      }, this.renderSymbols()), (!isAnimationActive || isAnimationFinished) && component_LabelList.renderCallByParent(this.props, points));\n    }\n  }], [{\n    key: "renderSymbolItem",\n    value: function renderSymbolItem(option, props) {\n      var symbol;\n\n      if (react_default.a.isValidElement(option)) {\n        symbol = react_default.a.cloneElement(option, props);\n      } else if (isFunction_default()(option)) {\n        symbol = option(props);\n      } else if (typeof option === \'string\') {\n        symbol = /*#__PURE__*/react_default.a.createElement(shape_Symbols, Scatter_extends({}, props, {\n          type: option\n        }));\n      }\n\n      return symbol;\n    }\n  }]);\n\n  return Scatter;\n}(react["PureComponent"]);\n\nScatter_Scatter.displayName = \'Scatter\';\nScatter_Scatter.defaultProps = {\n  xAxisId: 0,\n  yAxisId: 0,\n  zAxisId: 0,\n  legendType: \'circle\',\n  lineType: \'joint\',\n  lineJointType: \'linear\',\n  data: [],\n  shape: \'circle\',\n  hide: false,\n  isAnimationActive: !util_Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 400,\n  animationEasing: \'linear\'\n};\n\nScatter_Scatter.getComposedData = function (_ref2) {\n  var xAxis = _ref2.xAxis,\n      yAxis = _ref2.yAxis,\n      zAxis = _ref2.zAxis,\n      item = _ref2.item,\n      displayedData = _ref2.displayedData,\n      onItemMouseLeave = _ref2.onItemMouseLeave,\n      onItemMouseEnter = _ref2.onItemMouseEnter,\n      onItemClick = _ref2.onItemClick,\n      xAxisTicks = _ref2.xAxisTicks,\n      yAxisTicks = _ref2.yAxisTicks,\n      offset = _ref2.offset;\n  var tooltipType = item.props.tooltipType;\n  var cells = ReactUtils_findAllByType(item.props.children, component_Cell.displayName);\n  var xAxisDataKey = isNil_default()(xAxis.dataKey) ? item.props.dataKey : xAxis.dataKey;\n  var yAxisDataKey = isNil_default()(yAxis.dataKey) ? item.props.dataKey : yAxis.dataKey;\n  var zAxisDataKey = zAxis && zAxis.dataKey;\n  var defaultRangeZ = zAxis ? zAxis.range : cartesian_ZAxis.defaultProps.range;\n  var defaultZ = defaultRangeZ && defaultRangeZ[0];\n  var xBandSize = xAxis.scale.bandwidth ? xAxis.scale.bandwidth() : 0;\n  var yBandSize = yAxis.scale.bandwidth ? yAxis.scale.bandwidth() : 0;\n  var points = displayedData.map(function (entry, index) {\n    var x = getValueByDataKey(entry, xAxisDataKey);\n    var y = getValueByDataKey(entry, yAxisDataKey);\n    var z = !isNil_default()(zAxisDataKey) && getValueByDataKey(entry, zAxisDataKey) || \'-\';\n    var tooltipPayload = [{\n      name: isNil_default()(xAxis.dataKey) ? item.props.name : xAxis.name || xAxis.dataKey,\n      unit: xAxis.unit || \'\',\n      value: x,\n      payload: entry,\n      dataKey: xAxisDataKey,\n      type: tooltipType\n    }, {\n      name: isNil_default()(yAxis.dataKey) ? item.props.name : yAxis.name || yAxis.dataKey,\n      unit: yAxis.unit || \'\',\n      value: y,\n      payload: entry,\n      dataKey: yAxisDataKey,\n      type: tooltipType\n    }];\n\n    if (z !== \'-\') {\n      tooltipPayload.push({\n        name: zAxis.name || zAxis.dataKey,\n        unit: zAxis.unit || \'\',\n        value: z,\n        payload: entry,\n        dataKey: zAxisDataKey,\n        type: tooltipType\n      });\n    }\n\n    var cx = ChartUtils_getCateCoordinateOfLine({\n      axis: xAxis,\n      ticks: xAxisTicks,\n      bandSize: xBandSize,\n      entry: entry,\n      index: index,\n      dataKey: xAxisDataKey\n    });\n    var cy = ChartUtils_getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize: yBandSize,\n      entry: entry,\n      index: index,\n      dataKey: yAxisDataKey\n    });\n    var size = z !== \'-\' ? zAxis.scale(z) : defaultZ;\n    var radius = Math.sqrt(Math.max(size, 0) / Math.PI);\n    return Scatter_objectSpread({}, entry, {\n      cx: cx,\n      cy: cy,\n      x: cx - radius,\n      y: cy - radius,\n      xAxis: xAxis,\n      yAxis: yAxis,\n      zAxis: zAxis,\n      width: 2 * radius,\n      height: 2 * radius,\n      size: size,\n      node: {\n        x: x,\n        y: y,\n        z: z\n      },\n      tooltipPayload: tooltipPayload,\n      tooltipPosition: {\n        x: cx,\n        y: cy\n      },\n      payload: entry\n    }, cells && cells[index] && cells[index].props);\n  });\n  return Scatter_objectSpread({\n    onMouseLeave: isFunction_default()(onItemMouseLeave) ? onItemMouseLeave : item.props.onMouseLeave,\n    onMouseEnter: isFunction_default()(onItemMouseEnter) ? onItemMouseEnter : item.props.onMouseEnter,\n    onClick: isFunction_default()(onItemClick) ? onItemClick : item.props.onClick,\n    points: points\n  }, offset);\n};\n\n/* harmony default export */ var cartesian_Scatter = (Scatter_Scatter);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/XAxis.js\n/**\n * @fileOverview X Axis\n */\n\n/** Define of XAxis props */\nfunction XAxis(props) {\n  return null;\n}\n\nXAxis.displayName = \'XAxis\';\nXAxis.defaultProps = {\n  allowDecimals: true,\n  hide: false,\n  orientation: \'bottom\',\n  width: 0,\n  height: 30,\n  mirror: false,\n  xAxisId: 0,\n  tickCount: 5,\n  type: \'category\',\n  domain: [0, \'auto\'],\n  padding: {\n    left: 0,\n    right: 0\n  },\n  allowDataOverflow: false,\n  scale: \'auto\',\n  reversed: false,\n  allowDuplicatedCategory: true\n};\n/* harmony default export */ var cartesian_XAxis = (XAxis);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/cartesian/YAxis.js\n/**\n * @fileOverview Y Axis\n */\nfunction YAxis(props) {\n  return null;\n}\n\nYAxis.displayName = \'YAxis\';\nYAxis.defaultProps = {\n  allowDuplicatedCategory: true,\n  allowDecimals: true,\n  hide: false,\n  orientation: \'left\',\n  width: 60,\n  height: 0,\n  mirror: false,\n  yAxisId: 0,\n  tickCount: 5,\n  type: \'number\',\n  domain: [0, \'auto\'],\n  padding: {\n    top: 0,\n    bottom: 0\n  },\n  allowDataOverflow: false,\n  scale: \'auto\',\n  reversed: false\n};\n/* harmony default export */ var cartesian_YAxis = (YAxis);\n// EXTERNAL MODULE: ./node_modules/lodash/find.js\nvar find = __webpack_require__("J2m7");\nvar find_default = /*#__PURE__*/__webpack_require__.n(find);\n\n// EXTERNAL MODULE: ./node_modules/lodash/throttle.js\nvar throttle = __webpack_require__("DzJC");\nvar throttle_default = /*#__PURE__*/__webpack_require__.n(throttle);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/DetectReferenceElementsDomain.js\n\n\n\n\n\n\nvar DetectReferenceElementsDomain_detectReferenceElementsDomain = function detectReferenceElementsDomain(children, domain, axisId, axisType, specifiedTicks) {\n  var lines = ReactUtils_findAllByType(children, cartesian_ReferenceLine.displayName);\n  var dots = ReactUtils_findAllByType(children, cartesian_ReferenceDot.displayName);\n  var elements = lines.concat(dots);\n  var areas = ReactUtils_findAllByType(children, cartesian_ReferenceArea.displayName);\n  var idKey = "".concat(axisType, "Id");\n  var valueKey = axisType[0];\n  var finalDomain = domain;\n\n  if (elements.length) {\n    finalDomain = elements.reduce(function (result, el) {\n      if (el.props[idKey] === axisId && ifOverflowMatches(el.props, \'extendDomain\') && DataUtils_isNumber(el.props[valueKey])) {\n        var value = el.props[valueKey];\n        return [Math.min(result[0], value), Math.max(result[1], value)];\n      }\n\n      return result;\n    }, finalDomain);\n  }\n\n  if (areas.length) {\n    var key1 = "".concat(valueKey, "1");\n    var key2 = "".concat(valueKey, "2");\n    finalDomain = areas.reduce(function (result, el) {\n      if (el.props[idKey] === axisId && ifOverflowMatches(el.props, \'extendDomain\') && DataUtils_isNumber(el.props[key1]) && DataUtils_isNumber(el.props[key2])) {\n        var value1 = el.props[key1];\n        var value2 = el.props[key2];\n        return [Math.min(result[0], value1, value2), Math.max(result[1], value1, value2)];\n      }\n\n      return result;\n    }, finalDomain);\n  }\n\n  if (specifiedTicks && specifiedTicks.length) {\n    finalDomain = specifiedTicks.reduce(function (result, tick) {\n      if (DataUtils_isNumber(tick)) {\n        return [Math.min(result[0], tick), Math.max(result[1], tick)];\n      }\n\n      return result;\n    }, finalDomain);\n  }\n\n  return finalDomain;\n};\n// EXTERNAL MODULE: ./node_modules/eventemitter3/index.js\nvar eventemitter3 = __webpack_require__("uhBA");\nvar eventemitter3_default = /*#__PURE__*/__webpack_require__.n(eventemitter3);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/Events.js\n\nvar eventCenter = new eventemitter3_default.a();\n\nif (eventCenter.setMaxListeners) {\n  eventCenter.setMaxListeners(10);\n}\n\n\nvar SYNC_EVENT = \'recharts.syncMouseEvents\';\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/generateCategoricalChart.js\n\n\n\n\n\n\n\n\n\nfunction generateCategoricalChart_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { generateCategoricalChart_typeof = function _typeof(obj) { return typeof obj; }; } else { generateCategoricalChart_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return generateCategoricalChart_typeof(obj); }\n\nfunction generateCategoricalChart_extends() { generateCategoricalChart_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return generateCategoricalChart_extends.apply(this, arguments); }\n\nfunction generateCategoricalChart_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = generateCategoricalChart_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction generateCategoricalChart_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction generateCategoricalChart_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction generateCategoricalChart_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { generateCategoricalChart_ownKeys(Object(source), true).forEach(function (key) { generateCategoricalChart_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { generateCategoricalChart_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction generateCategoricalChart_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction generateCategoricalChart_toConsumableArray(arr) { return generateCategoricalChart_arrayWithoutHoles(arr) || generateCategoricalChart_iterableToArray(arr) || generateCategoricalChart_unsupportedIterableToArray(arr) || generateCategoricalChart_nonIterableSpread(); }\n\nfunction generateCategoricalChart_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction generateCategoricalChart_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return generateCategoricalChart_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return generateCategoricalChart_arrayLikeToArray(o, minLen); }\n\nfunction generateCategoricalChart_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction generateCategoricalChart_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return generateCategoricalChart_arrayLikeToArray(arr); }\n\nfunction generateCategoricalChart_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction generateCategoricalChart_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction generateCategoricalChart_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction generateCategoricalChart_createClass(Constructor, protoProps, staticProps) { if (protoProps) generateCategoricalChart_defineProperties(Constructor.prototype, protoProps); if (staticProps) generateCategoricalChart_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction generateCategoricalChart_createSuper(Derived) { return function () { var Super = generateCategoricalChart_getPrototypeOf(Derived), result; if (generateCategoricalChart_isNativeReflectConstruct()) { var NewTarget = generateCategoricalChart_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return generateCategoricalChart_possibleConstructorReturn(this, result); }; }\n\nfunction generateCategoricalChart_possibleConstructorReturn(self, call) { if (call && (generateCategoricalChart_typeof(call) === "object" || typeof call === "function")) { return call; } return generateCategoricalChart_assertThisInitialized(self); }\n\nfunction generateCategoricalChart_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction generateCategoricalChart_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction generateCategoricalChart_getPrototypeOf(o) { generateCategoricalChart_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return generateCategoricalChart_getPrototypeOf(o); }\n\nfunction generateCategoricalChart_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) generateCategoricalChart_setPrototypeOf(subClass, superClass); }\n\nfunction generateCategoricalChart_setPrototypeOf(o, p) { generateCategoricalChart_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return generateCategoricalChart_setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ORIENT_MAP = {\n  xAxis: [\'bottom\', \'top\'],\n  yAxis: [\'left\', \'right\']\n};\nvar originCoordinate = {\n  x: 0,\n  y: 0\n};\n\nvar generateCategoricalChart_generateCategoricalChart = function generateCategoricalChart(_ref) {\n  var _class, _temp;\n\n  var chartName = _ref.chartName,\n      GraphicalChild = _ref.GraphicalChild,\n      _ref$eventType = _ref.eventType,\n      eventType = _ref$eventType === void 0 ? \'axis\' : _ref$eventType,\n      axisComponents = _ref.axisComponents,\n      legendContent = _ref.legendContent,\n      formatAxisMap = _ref.formatAxisMap,\n      defaultProps = _ref.defaultProps;\n  return _temp = _class = /*#__PURE__*/function (_Component) {\n    generateCategoricalChart_inherits(CategoricalChartWrapper, _Component);\n\n    var _super = generateCategoricalChart_createSuper(CategoricalChartWrapper);\n\n    // todo join specific chart propTypes\n\n    /**\n     * Returns default, reset state for the categorical chart.\n     * @param {Object} props Props object to use when creating the default state\n     * @return {Object} Whole new state\n     */\n    function CategoricalChartWrapper(_props) {\n      var _this;\n\n      generateCategoricalChart_classCallCheck(this, CategoricalChartWrapper);\n\n      _this = _super.call(this, _props);\n      _this.uniqueChartId = void 0;\n      _this.clipPathId = void 0;\n      _this.legendInstance = void 0;\n      _this.container = void 0;\n\n      _this.getAxisMapByAxes = function (props, _ref2) {\n        var axes = _ref2.axes,\n            graphicalItems = _ref2.graphicalItems,\n            axisType = _ref2.axisType,\n            axisIdKey = _ref2.axisIdKey,\n            stackGroups = _ref2.stackGroups,\n            dataStartIndex = _ref2.dataStartIndex,\n            dataEndIndex = _ref2.dataEndIndex;\n        var layout = props.layout,\n            children = props.children,\n            stackOffset = props.stackOffset;\n        var isCategorical = isCategoricalAxis(layout, axisType); // Eliminate duplicated axes\n\n        var axisMap = axes.reduce(function (result, child) {\n          var _child$props = child.props,\n              type = _child$props.type,\n              dataKey = _child$props.dataKey,\n              allowDataOverflow = _child$props.allowDataOverflow,\n              allowDuplicatedCategory = _child$props.allowDuplicatedCategory,\n              scale = _child$props.scale,\n              ticks = _child$props.ticks;\n          var axisId = child.props[axisIdKey];\n          var displayedData = CategoricalChartWrapper.getDisplayedData(props, {\n            graphicalItems: graphicalItems.filter(function (item) {\n              return item.props[axisIdKey] === axisId;\n            }),\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          });\n          var len = displayedData.length;\n\n          if (!result[axisId]) {\n            var domain, duplicateDomain, categoricalDomain;\n\n            if (dataKey) {\n              // has dataKey in <Axis />\n              domain = getDomainOfDataByKey(displayedData, dataKey, type);\n\n              if (type === \'category\' && isCategorical) {\n                // the field type is category data and this axis is catrgorical axis\n                var duplicate = DataUtils_hasDuplicate(domain);\n\n                if (allowDuplicatedCategory && duplicate) {\n                  duplicateDomain = domain; // When category axis has duplicated text, serial numbers are used to generate scale\n\n                  domain = range_default()(0, len);\n                } else if (!allowDuplicatedCategory) {\n                  // remove duplicated category\n                  domain = ChartUtils_parseDomainOfCategoryAxis(child.props.domain, domain, child).reduce(function (finalDomain, entry) {\n                    return finalDomain.indexOf(entry) >= 0 ? finalDomain : [].concat(generateCategoricalChart_toConsumableArray(finalDomain), [entry]);\n                  }, []);\n                }\n              } else if (type === \'category\') {\n                // the field type is category data and this axis is numerical axis\n                if (!allowDuplicatedCategory) {\n                  domain = ChartUtils_parseDomainOfCategoryAxis(child.props.domain, domain, child).reduce(function (finalDomain, entry) {\n                    return finalDomain.indexOf(entry) >= 0 || entry === \'\' || isNil_default()(entry) ? finalDomain : [].concat(generateCategoricalChart_toConsumableArray(finalDomain), [entry]);\n                  }, []);\n                } else {\n                  // eliminate undefined or null or empty string\n                  domain = domain.filter(function (entry) {\n                    return entry !== \'\' && !isNil_default()(entry);\n                  });\n                }\n              } else if (type === \'number\') {\n                // the field type is numerical\n                var errorBarsDomain = ChartUtils_parseErrorBarsOfAxis(displayedData, graphicalItems.filter(function (item) {\n                  return item.props[axisIdKey] === axisId && !item.props.hide;\n                }), dataKey, axisType);\n\n                if (errorBarsDomain) {\n                  domain = errorBarsDomain;\n                }\n              }\n\n              if (isCategorical && (type === \'number\' || scale !== \'auto\')) {\n                categoricalDomain = getDomainOfDataByKey(displayedData, dataKey, \'category\');\n              }\n            } else if (isCategorical) {\n              // the axis is a categorical axis\n              domain = range_default()(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type === \'number\') {\n              // when stackOffset is \'expand\', the domain may be calculated as [0, 1.000000000002]\n              domain = stackOffset === \'expand\' ? [0, 1] : getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n            } else {\n              domain = getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function (item) {\n                return item.props[axisIdKey] === axisId && !item.props.hide;\n              }), type, true);\n            }\n\n            if (type === \'number\') {\n              // To detect wether there is any reference lines whose props alwaysShow is true\n              domain = DetectReferenceElementsDomain_detectReferenceElementsDomain(children, domain, axisId, axisType, ticks);\n\n              if (child.props.domain) {\n                domain = ChartUtils_parseSpecifiedDomain(child.props.domain, domain, allowDataOverflow);\n              }\n            } else if (type === \'category\' && child.props.domain) {\n              var axisDomain = child.props.domain;\n              var isDomainValidate = domain.every(function (entry) {\n                return axisDomain.indexOf(entry) >= 0;\n              });\n\n              if (isDomainValidate) {\n                domain = axisDomain;\n              }\n            }\n\n            return generateCategoricalChart_objectSpread({}, result, generateCategoricalChart_defineProperty({}, axisId, generateCategoricalChart_objectSpread({}, child.props, {\n              axisType: axisType,\n              domain: domain,\n              categoricalDomain: categoricalDomain,\n              duplicateDomain: duplicateDomain,\n              originalDomain: child.props.domain,\n              isCategorical: isCategorical,\n              layout: layout\n            })));\n          }\n\n          return result;\n        }, {});\n        return axisMap;\n      };\n\n      _this.getAxisMapByItems = function (props, _ref3) {\n        var graphicalItems = _ref3.graphicalItems,\n            Axis = _ref3.Axis,\n            axisType = _ref3.axisType,\n            axisIdKey = _ref3.axisIdKey,\n            stackGroups = _ref3.stackGroups,\n            dataStartIndex = _ref3.dataStartIndex,\n            dataEndIndex = _ref3.dataEndIndex;\n        var layout = props.layout,\n            children = props.children;\n        var displayedData = CategoricalChartWrapper.getDisplayedData(props, {\n          graphicalItems: graphicalItems,\n          dataStartIndex: dataStartIndex,\n          dataEndIndex: dataEndIndex\n        });\n        var len = displayedData.length;\n        var isCategorical = isCategoricalAxis(layout, axisType);\n        var index = -1; // The default type of x-axis is category axis,\n        // The default contents of x-axis is the serial numbers of data\n        // The default type of y-axis is number axis\n        // The default contents of y-axis is the domain of data\n\n        var axisMap = graphicalItems.reduce(function (result, child) {\n          var axisId = child.props[axisIdKey];\n\n          if (!result[axisId]) {\n            index++;\n            var domain;\n\n            if (isCategorical) {\n              domain = range_default()(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {\n              domain = getDomainOfStackGroups(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n              domain = DetectReferenceElementsDomain_detectReferenceElementsDomain(children, domain, axisId, axisType);\n            } else {\n              domain = ChartUtils_parseSpecifiedDomain(Axis.defaultProps.domain, getDomainOfItemsWithSameAxis(displayedData, graphicalItems.filter(function (item) {\n                return item.props[axisIdKey] === axisId && !item.props.hide;\n              }), \'number\'), Axis.defaultProps.allowDataOverflow);\n              domain = DetectReferenceElementsDomain_detectReferenceElementsDomain(children, domain, axisId, axisType);\n            }\n\n            return generateCategoricalChart_objectSpread({}, result, generateCategoricalChart_defineProperty({}, axisId, generateCategoricalChart_objectSpread({\n              axisType: axisType\n            }, Axis.defaultProps, {\n              hide: true,\n              orientation: get_default()(ORIENT_MAP, "".concat(axisType, ".").concat(index % 2), null),\n              domain: domain,\n              originalDomain: Axis.defaultProps.domain,\n              isCategorical: isCategorical,\n              layout: layout // specify scale when no Axis\n              // scale: isCategorical ? \'band\' : \'linear\',\n\n            })));\n          }\n\n          return result;\n        }, {});\n        return axisMap;\n      };\n\n      _this.handleLegendBBoxUpdate = function (box) {\n        if (box && _this.legendInstance) {\n          var _this$state = _this.state,\n              dataStartIndex = _this$state.dataStartIndex,\n              dataEndIndex = _this$state.dataEndIndex,\n              updateId = _this$state.updateId;\n\n          _this.setState(_this.updateStateOfAxisMapsOffsetAndStackGroups({\n            props: _this.props,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex,\n            updateId: updateId\n          }));\n        }\n      };\n\n      _this.handleReceiveSyncEvent = function (cId, chartId, data) {\n        var _this$props = _this.props,\n            syncId = _this$props.syncId,\n            layout = _this$props.layout;\n        var updateId = _this.state.updateId;\n\n        if (syncId === cId && chartId !== _this.uniqueChartId) {\n          var dataStartIndex = data.dataStartIndex,\n              dataEndIndex = data.dataEndIndex;\n\n          if (!isNil_default()(data.dataStartIndex) || !isNil_default()(data.dataEndIndex)) {\n            _this.setState(generateCategoricalChart_objectSpread({\n              dataStartIndex: dataStartIndex,\n              dataEndIndex: dataEndIndex\n            }, _this.updateStateOfAxisMapsOffsetAndStackGroups({\n              props: _this.props,\n              dataStartIndex: dataStartIndex,\n              dataEndIndex: dataEndIndex,\n              updateId: updateId\n            })));\n          } else if (!isNil_default()(data.activeTooltipIndex)) {\n            var chartX = data.chartX,\n                chartY = data.chartY,\n                activeTooltipIndex = data.activeTooltipIndex;\n            var _this$state2 = _this.state,\n                offset = _this$state2.offset,\n                tooltipTicks = _this$state2.tooltipTicks;\n\n            if (!offset) {\n              return;\n            }\n\n            var viewBox = generateCategoricalChart_objectSpread({}, offset, {\n              x: offset.left,\n              y: offset.top\n            }); // When a categotical chart is combined with another chart, the value of chartX\n            // and chartY may beyond the boundaries.\n\n\n            var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);\n            var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);\n            var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;\n\n            var activePayload = _this.getTooltipContent(activeTooltipIndex);\n\n            var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {\n              x: layout === \'horizontal\' ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,\n              y: layout === \'horizontal\' ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate\n            } : originCoordinate;\n\n            _this.setState(generateCategoricalChart_objectSpread({}, data, {\n              activeLabel: activeLabel,\n              activeCoordinate: activeCoordinate,\n              activePayload: activePayload\n            }));\n          } else {\n            _this.setState(data);\n          }\n        }\n      };\n\n      _this.handleBrushChange = function (_ref4) {\n        var startIndex = _ref4.startIndex,\n            endIndex = _ref4.endIndex;\n\n        // Only trigger changes if the extents of the brush have actually changed\n        if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {\n          var updateId = _this.state.updateId;\n\n          _this.setState(function () {\n            return generateCategoricalChart_objectSpread({\n              dataStartIndex: startIndex,\n              dataEndIndex: endIndex\n            }, _this.updateStateOfAxisMapsOffsetAndStackGroups({\n              props: _this.props,\n              dataStartIndex: startIndex,\n              dataEndIndex: endIndex,\n              updateId: updateId\n            }));\n          });\n\n          _this.triggerSyncEvent({\n            dataStartIndex: startIndex,\n            dataEndIndex: endIndex\n          });\n        }\n      };\n\n      _this.handleMouseEnter = function (e) {\n        var onMouseEnter = _this.props.onMouseEnter;\n\n        var mouse = _this.getMouseInfo(e);\n\n        if (mouse) {\n          var nextState = generateCategoricalChart_objectSpread({}, mouse, {\n            isTooltipActive: true\n          });\n\n          _this.setState(nextState);\n\n          _this.triggerSyncEvent(nextState);\n\n          if (isFunction_default()(onMouseEnter)) {\n            onMouseEnter(nextState, e);\n          }\n        }\n      };\n\n      _this.triggeredAfterMouseMove = function (e) {\n        var onMouseMove = _this.props.onMouseMove;\n\n        var mouse = _this.getMouseInfo(e);\n\n        var nextState = mouse ? generateCategoricalChart_objectSpread({}, mouse, {\n          isTooltipActive: true\n        }) : {\n          isTooltipActive: false\n        };\n\n        _this.setState(nextState);\n\n        _this.triggerSyncEvent(nextState);\n\n        if (isFunction_default()(onMouseMove)) {\n          onMouseMove(nextState, e);\n        }\n      };\n\n      _this.handleItemMouseEnter = function (el) {\n        _this.setState(function () {\n          return {\n            isTooltipActive: true,\n            activeItem: el,\n            activePayload: el.tooltipPayload,\n            activeCoordinate: el.tooltipPosition || {\n              x: el.cx,\n              y: el.cy\n            }\n          };\n        });\n      };\n\n      _this.handleItemMouseLeave = function () {\n        _this.setState(function () {\n          return {\n            isTooltipActive: false\n          };\n        });\n      };\n\n      _this.handleMouseMove = function (e) {\n        if (e && isFunction_default()(e.persist)) {\n          e.persist();\n        }\n\n        _this.triggeredAfterMouseMove(e);\n      };\n\n      _this.handleMouseLeave = function (e) {\n        var onMouseLeave = _this.props.onMouseLeave;\n        var nextState = {\n          isTooltipActive: false\n        };\n\n        _this.setState(nextState);\n\n        _this.triggerSyncEvent(nextState);\n\n        if (isFunction_default()(onMouseLeave)) {\n          onMouseLeave(nextState, e);\n        }\n\n        _this.cancelThrottledTriggerAfterMouseMove();\n      };\n\n      _this.handleOuterEvent = function (e) {\n        var eventName = getReactEventByType(e);\n\n        var event = get_default()(_this.props, "".concat(eventName));\n\n        if (eventName && isFunction_default()(event)) {\n          var mouse;\n\n          if (/.*touch.*/i.test(eventName)) {\n            mouse = _this.getMouseInfo(e.changedTouches[0]);\n          } else {\n            mouse = _this.getMouseInfo(e);\n          }\n\n          var handler = event;\n          handler(mouse, e);\n        }\n      };\n\n      _this.handleClick = function (e) {\n        var onClick = _this.props.onClick;\n\n        var mouse = _this.getMouseInfo(e);\n\n        if (mouse) {\n          var nextState = generateCategoricalChart_objectSpread({}, mouse, {\n            isTooltipActive: true\n          });\n\n          _this.setState(nextState);\n\n          _this.triggerSyncEvent(nextState);\n\n          if (isFunction_default()(onClick)) {\n            onClick(nextState, e);\n          }\n        }\n      };\n\n      _this.handleMouseDown = function (e) {\n        var onMouseDown = _this.props.onMouseDown;\n\n        if (isFunction_default()(onMouseDown)) {\n          var mouse = _this.getMouseInfo(e);\n\n          onMouseDown(mouse, e);\n        }\n      };\n\n      _this.handleMouseUp = function (e) {\n        var onMouseUp = _this.props.onMouseUp;\n\n        if (isFunction_default()(onMouseUp)) {\n          var mouse = _this.getMouseInfo(e);\n\n          onMouseUp(mouse, e);\n        }\n      };\n\n      _this.handleTouchMove = function (e) {\n        if (e.changedTouches != null && e.changedTouches.length > 0) {\n          _this.handleMouseMove(e.changedTouches[0]);\n        }\n      };\n\n      _this.handleTouchStart = function (e) {\n        if (e.changedTouches != null && e.changedTouches.length > 0) {\n          _this.handleMouseDown(e.changedTouches[0]);\n        }\n      };\n\n      _this.handleTouchEnd = function (e) {\n        if (e.changedTouches != null && e.changedTouches.length > 0) {\n          _this.handleMouseUp(e.changedTouches[0]);\n        }\n      };\n\n      _this.verticalCoordinatesGenerator = function (_ref5) {\n        var xAxis = _ref5.xAxis,\n            width = _ref5.width,\n            height = _ref5.height,\n            offset = _ref5.offset;\n        return getCoordinatesOfGrid(cartesian_CartesianAxis.getTicks(generateCategoricalChart_objectSpread({}, cartesian_CartesianAxis.defaultProps, {}, xAxis, {\n          ticks: ChartUtils_getTicksOfAxis(xAxis, true),\n          viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          }\n        })), offset.left, offset.left + offset.width);\n      };\n\n      _this.horizontalCoordinatesGenerator = function (_ref6) {\n        var yAxis = _ref6.yAxis,\n            width = _ref6.width,\n            height = _ref6.height,\n            offset = _ref6.offset;\n        return getCoordinatesOfGrid(cartesian_CartesianAxis.getTicks(generateCategoricalChart_objectSpread({}, cartesian_CartesianAxis.defaultProps, {}, yAxis, {\n          ticks: ChartUtils_getTicksOfAxis(yAxis, true),\n          viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          }\n        })), offset.top, offset.top + offset.height);\n      };\n\n      _this.axesTicksGenerator = function (axis) {\n        return ChartUtils_getTicksOfAxis(axis, true);\n      };\n\n      _this.tooltipTicksGenerator = function (axisMap) {\n        var axis = getAnyElementOfObject(axisMap);\n        var tooltipTicks = ChartUtils_getTicksOfAxis(axis, false, true);\n        return {\n          tooltipTicks: tooltipTicks,\n          orderedTooltipTicks: sortBy_default()(tooltipTicks, function (o) {\n            return o.coordinate;\n          }),\n          tooltipAxis: axis,\n          tooltipAxisBandSize: ChartUtils_getBandSizeOfAxis(axis)\n        };\n      };\n\n      _this.renderCursor = function (element) {\n        var _this$state3 = _this.state,\n            isTooltipActive = _this$state3.isTooltipActive,\n            activeCoordinate = _this$state3.activeCoordinate,\n            activePayload = _this$state3.activePayload,\n            offset = _this$state3.offset,\n            activeTooltipIndex = _this$state3.activeTooltipIndex;\n\n        if (!element || !element.props.cursor || !isTooltipActive || !activeCoordinate) {\n          return null;\n        }\n\n        var layout = _this.props.layout;\n        var restProps;\n        var cursorComp = shape_Curve;\n\n        if (chartName === \'ScatterChart\') {\n          restProps = activeCoordinate;\n          cursorComp = shape_Cross;\n        } else if (chartName === \'BarChart\') {\n          restProps = _this.getCursorRectangle();\n          cursorComp = shape_Rectangle;\n        } else if (layout === \'radial\') {\n          var _this$getCursorPoints = _this.getCursorPoints(),\n              cx = _this$getCursorPoints.cx,\n              cy = _this$getCursorPoints.cy,\n              radius = _this$getCursorPoints.radius,\n              startAngle = _this$getCursorPoints.startAngle,\n              endAngle = _this$getCursorPoints.endAngle;\n\n          restProps = {\n            cx: cx,\n            cy: cy,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            innerRadius: radius,\n            outerRadius: radius\n          };\n          cursorComp = shape_Sector;\n        } else {\n          restProps = {\n            points: _this.getCursorPoints()\n          };\n          cursorComp = shape_Curve;\n        }\n\n        var key = element.key || \'_recharts-cursor\';\n\n        var cursorProps = generateCategoricalChart_objectSpread({\n          stroke: \'#ccc\',\n          pointerEvents: \'none\'\n        }, offset, {}, restProps, {}, types_filterProps(element.props.cursor), {\n          payload: activePayload,\n          payloadIndex: activeTooltipIndex,\n          key: key,\n          className: \'recharts-tooltip-cursor\'\n        });\n\n        return Object(react["isValidElement"])(element.props.cursor) ? Object(react["cloneElement"])(element.props.cursor, cursorProps) : Object(react["createElement"])(cursorComp, cursorProps);\n      };\n\n      _this.renderPolarAxis = function (element, displayName, index) {\n        var axisType = get_default()(element, \'type.axisType\');\n\n        var axisMap = get_default()(_this.state, "".concat(axisType, "Map"));\n\n        var axisOption = axisMap[element.props["".concat(axisType, "Id")]];\n        return Object(react["cloneElement"])(element, generateCategoricalChart_objectSpread({}, axisOption, {\n          className: axisType,\n          key: element.key || "".concat(displayName, "-").concat(index),\n          ticks: ChartUtils_getTicksOfAxis(axisOption, true)\n        }));\n      };\n\n      _this.renderXAxis = function (element, displayName, index) {\n        var xAxisMap = _this.state.xAxisMap;\n        var axisObj = xAxisMap[element.props.xAxisId];\n        return _this.renderAxis(axisObj, element, displayName, index);\n      };\n\n      _this.renderYAxis = function (element, displayName, index) {\n        var yAxisMap = _this.state.yAxisMap;\n        var axisObj = yAxisMap[element.props.yAxisId];\n        return _this.renderAxis(axisObj, element, displayName, index);\n      };\n\n      _this.renderGrid = function (element) {\n        var _this$state4 = _this.state,\n            xAxisMap = _this$state4.xAxisMap,\n            yAxisMap = _this$state4.yAxisMap,\n            offset = _this$state4.offset;\n        var _this$props2 = _this.props,\n            width = _this$props2.width,\n            height = _this$props2.height;\n        var xAxis = getAnyElementOfObject(xAxisMap);\n\n        var yAxisWithFiniteDomain = find_default()(yAxisMap, function (axis) {\n          return every_default()(axis.domain, isFinite);\n        });\n\n        var yAxis = yAxisWithFiniteDomain || getAnyElementOfObject(yAxisMap);\n        var props = element.props || {};\n        return Object(react["cloneElement"])(element, {\n          key: element.key || \'grid\',\n          x: DataUtils_isNumber(props.x) ? props.x : offset.left,\n          y: DataUtils_isNumber(props.y) ? props.y : offset.top,\n          width: DataUtils_isNumber(props.width) ? props.width : offset.width,\n          height: DataUtils_isNumber(props.height) ? props.height : offset.height,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          offset: offset,\n          chartWidth: width,\n          chartHeight: height,\n          verticalCoordinatesGenerator: props.verticalCoordinatesGenerator || _this.verticalCoordinatesGenerator,\n          horizontalCoordinatesGenerator: props.horizontalCoordinatesGenerator || _this.horizontalCoordinatesGenerator\n        });\n      };\n\n      _this.renderPolarGrid = function (element) {\n        var _this$state5 = _this.state,\n            radiusAxisMap = _this$state5.radiusAxisMap,\n            angleAxisMap = _this$state5.angleAxisMap;\n        var radiusAxis = getAnyElementOfObject(radiusAxisMap);\n        var angleAxis = getAnyElementOfObject(angleAxisMap);\n        var cx = angleAxis.cx,\n            cy = angleAxis.cy,\n            innerRadius = angleAxis.innerRadius,\n            outerRadius = angleAxis.outerRadius;\n        return Object(react["cloneElement"])(element, {\n          polarAngles: ChartUtils_getTicksOfAxis(angleAxis, true).map(function (entry) {\n            return entry.coordinate;\n          }),\n          polarRadius: ChartUtils_getTicksOfAxis(radiusAxis, true).map(function (entry) {\n            return entry.coordinate;\n          }),\n          cx: cx,\n          cy: cy,\n          innerRadius: innerRadius,\n          outerRadius: outerRadius,\n          key: element.key || \'polar-grid\'\n        });\n      };\n\n      _this.renderLegend = function () {\n        var formatedGraphicalItems = _this.state.formatedGraphicalItems;\n        var _this$props3 = _this.props,\n            children = _this$props3.children,\n            width = _this$props3.width,\n            height = _this$props3.height;\n        var margin = _this.props.margin || {};\n        var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n        var props = ChartUtils_getLegendProps({\n          children: children,\n          formatedGraphicalItems: formatedGraphicalItems,\n          legendWidth: legendWidth,\n          legendContent: legendContent\n        });\n\n        if (!props) {\n          return null;\n        }\n\n        var item = props.item,\n            otherProps = generateCategoricalChart_objectWithoutProperties(props, ["item"]);\n\n        return Object(react["cloneElement"])(item, generateCategoricalChart_objectSpread({}, otherProps, {\n          chartWidth: width,\n          chartHeight: height,\n          margin: margin,\n          ref: function ref(legend) {\n            _this.legendInstance = legend;\n          },\n          onBBoxUpdate: _this.handleLegendBBoxUpdate\n        }));\n      };\n\n      _this.renderTooltip = function () {\n        var children = _this.props.children;\n        var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n\n        if (!tooltipItem) {\n          return null;\n        }\n\n        var _this$state6 = _this.state,\n            isTooltipActive = _this$state6.isTooltipActive,\n            activeCoordinate = _this$state6.activeCoordinate,\n            activePayload = _this$state6.activePayload,\n            activeLabel = _this$state6.activeLabel,\n            offset = _this$state6.offset;\n        return Object(react["cloneElement"])(tooltipItem, {\n          viewBox: generateCategoricalChart_objectSpread({}, offset, {\n            x: offset.left,\n            y: offset.top\n          }),\n          active: isTooltipActive,\n          label: activeLabel,\n          payload: isTooltipActive ? activePayload : [],\n          coordinate: activeCoordinate\n        });\n      };\n\n      _this.renderBrush = function (element) {\n        var _this$props4 = _this.props,\n            margin = _this$props4.margin,\n            data = _this$props4.data;\n        var _this$state7 = _this.state,\n            offset = _this$state7.offset,\n            dataStartIndex = _this$state7.dataStartIndex,\n            dataEndIndex = _this$state7.dataEndIndex,\n            updateId = _this$state7.updateId; // TODO: update brush when children update\n\n        return Object(react["cloneElement"])(element, {\n          key: element.key || \'_recharts-brush\',\n          onChange: ChartUtils_combineEventHandlers(_this.handleBrushChange, null, element.props.onChange),\n          data: data,\n          x: DataUtils_isNumber(element.props.x) ? element.props.x : offset.left,\n          y: DataUtils_isNumber(element.props.y) ? element.props.y : offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),\n          width: DataUtils_isNumber(element.props.width) ? element.props.width : offset.width,\n          startIndex: dataStartIndex,\n          endIndex: dataEndIndex,\n          updateId: "brush-".concat(updateId)\n        });\n      };\n\n      _this.renderReferenceElement = function (element, displayName, index) {\n        if (!element) {\n          return null;\n        }\n\n        var _assertThisInitialize = generateCategoricalChart_assertThisInitialized(_this),\n            clipPathId = _assertThisInitialize.clipPathId;\n\n        var _this$state8 = _this.state,\n            xAxisMap = _this$state8.xAxisMap,\n            yAxisMap = _this$state8.yAxisMap,\n            offset = _this$state8.offset;\n        var _element$props = element.props,\n            xAxisId = _element$props.xAxisId,\n            yAxisId = _element$props.yAxisId;\n        return Object(react["cloneElement"])(element, {\n          key: element.key || "".concat(displayName, "-").concat(index),\n          xAxis: xAxisMap[xAxisId],\n          yAxis: yAxisMap[yAxisId],\n          viewBox: {\n            x: offset.left,\n            y: offset.top,\n            width: offset.width,\n            height: offset.height\n          },\n          clipPathId: clipPathId\n        });\n      };\n\n      _this.renderActivePoints = function (_ref7) {\n        var item = _ref7.item,\n            activePoint = _ref7.activePoint,\n            basePoint = _ref7.basePoint,\n            childIndex = _ref7.childIndex,\n            isRange = _ref7.isRange;\n        var result = [];\n        var key = item.props.key;\n        var _item$item$props = item.item.props,\n            activeDot = _item$item$props.activeDot,\n            dataKey = _item$item$props.dataKey;\n\n        var dotProps = generateCategoricalChart_objectSpread({\n          index: childIndex,\n          dataKey: dataKey,\n          cx: activePoint.x,\n          cy: activePoint.y,\n          r: 4,\n          fill: getMainColorOfGraphicItem(item.item),\n          strokeWidth: 2,\n          stroke: \'#fff\',\n          payload: activePoint.payload,\n          value: activePoint.value,\n          key: "".concat(key, "-activePoint-").concat(childIndex)\n        }, types_filterProps(activeDot), {}, types_adaptEventHandlers(activeDot));\n\n        result.push(CategoricalChartWrapper.renderActiveDot(activeDot, dotProps));\n\n        if (basePoint) {\n          result.push(CategoricalChartWrapper.renderActiveDot(activeDot, generateCategoricalChart_objectSpread({}, dotProps, {\n            cx: basePoint.x,\n            cy: basePoint.y,\n            key: "".concat(key, "-basePoint-").concat(childIndex)\n          })));\n        } else if (isRange) {\n          result.push(null);\n        }\n\n        return result;\n      };\n\n      _this.renderGraphicChild = function (element, displayName, index) {\n        var item = _this.filterFormatItem(element, displayName, index);\n\n        if (!item) {\n          return null;\n        }\n\n        var graphicalItem = Object(react["cloneElement"])(element, item.props);\n        var _this$state9 = _this.state,\n            isTooltipActive = _this$state9.isTooltipActive,\n            tooltipAxis = _this$state9.tooltipAxis,\n            activeTooltipIndex = _this$state9.activeTooltipIndex,\n            activeLabel = _this$state9.activeLabel;\n        var children = _this.props.children;\n        var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n        var _item$props = item.props,\n            points = _item$props.points,\n            isRange = _item$props.isRange,\n            baseLine = _item$props.baseLine;\n        var _item$item$props2 = item.item.props,\n            activeDot = _item$item$props2.activeDot,\n            hide = _item$item$props2.hide;\n        var hasActive = !hide && isTooltipActive && tooltipItem && activeDot && activeTooltipIndex >= 0;\n\n        function findWithPayload(entry) {\n          // TODO needs to verify dataKey is Function\n          return typeof tooltipAxis.dataKey === \'function\' ? tooltipAxis.dataKey(entry.payload) : null;\n        }\n\n        if (hasActive) {\n          var activePoint, basePoint;\n\n          if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {\n            // number transform to string\n            var specifiedKey = typeof tooltipAxis.dataKey === \'function\' ? findWithPayload : \'payload.\'.concat(tooltipAxis.dataKey.toString());\n            activePoint = findEntryInArray(points, specifiedKey, activeLabel);\n            basePoint = isRange && baseLine && findEntryInArray(baseLine, specifiedKey, activeLabel);\n          } else {\n            activePoint = points[activeTooltipIndex];\n            basePoint = isRange && baseLine && baseLine[activeTooltipIndex];\n          }\n\n          if (!isNil_default()(activePoint)) {\n            return [graphicalItem].concat(generateCategoricalChart_toConsumableArray(_this.renderActivePoints({\n              item: item,\n              activePoint: activePoint,\n              basePoint: basePoint,\n              childIndex: activeTooltipIndex,\n              isRange: isRange\n            })));\n          }\n        }\n\n        if (isRange) {\n          return [graphicalItem, null, null];\n        }\n\n        return [graphicalItem, null];\n      };\n\n      _this.renderCustomized = function (element) {\n        return Object(react["cloneElement"])(element, generateCategoricalChart_objectSpread({}, _this.props, {}, _this.state));\n      };\n\n      var defaultState = CategoricalChartWrapper.createDefaultState(_props);\n      var _updateId = 0;\n      _this.state = generateCategoricalChart_objectSpread({}, defaultState, {\n        updateId: 0\n      }, _this.updateStateOfAxisMapsOffsetAndStackGroups(generateCategoricalChart_objectSpread({\n        props: _props\n      }, defaultState, {\n        updateId: _updateId\n      })));\n      _this.uniqueChartId = isNil_default()(_props.id) ? uniqueId(\'recharts\') : _props.id;\n      _this.clipPathId = "".concat(_this.uniqueChartId, "-clip");\n\n      if (_props.throttleDelay) {\n        _this.triggeredAfterMouseMove = throttle_default()(_this.triggeredAfterMouseMove, _props.throttleDelay);\n      }\n\n      return _this;\n    }\n    /* eslint-disable  react/no-did-mount-set-state */\n\n\n    generateCategoricalChart_createClass(CategoricalChartWrapper, [{\n      key: "componentDidMount",\n      value: function componentDidMount() {\n        if (!isNil_default()(this.props.syncId)) {\n          this.addListener();\n        }\n      } // eslint-disable-next-line camelcase\n\n    }, {\n      key: "UNSAFE_componentWillReceiveProps",\n      value: function UNSAFE_componentWillReceiveProps(nextProps) {\n        var _this2 = this;\n\n        var _this$props5 = this.props,\n            data = _this$props5.data,\n            children = _this$props5.children,\n            width = _this$props5.width,\n            height = _this$props5.height,\n            layout = _this$props5.layout,\n            stackOffset = _this$props5.stackOffset,\n            margin = _this$props5.margin;\n        var updateId = this.state.updateId;\n\n        if (nextProps.data !== data || nextProps.width !== width || nextProps.height !== height || nextProps.layout !== layout || nextProps.stackOffset !== stackOffset || !shallowEqual(nextProps.margin, margin)) {\n          var defaultState = CategoricalChartWrapper.createDefaultState(nextProps); // Fixes https://github.com/recharts/recharts/issues/2143\n\n          var keepFromPrevState = {\n            // (chartX, chartY) are (0,0) in default state, but we want to keep the last mouse position to avoid\n            // any flickering\n            chartX: this.state.chartX,\n            chartY: this.state.chartY,\n            // The tooltip should stay active when it was active in the previous render. If this is not\n            // the case, the tooltip disappears and immediately re-appears, causing a flickering effect\n            isTooltipActive: this.state.isTooltipActive\n          };\n\n          var updatesToState = generateCategoricalChart_objectSpread({}, this.getTooltipData(), {\n            // Update the current tooltip data (in case it changes without mouse interaction)\n            updateId: updateId + 1\n          });\n\n          var newState = generateCategoricalChart_objectSpread({}, defaultState, {}, keepFromPrevState, {}, updatesToState);\n\n          this.setState(generateCategoricalChart_objectSpread({}, newState, {}, this.updateStateOfAxisMapsOffsetAndStackGroups(generateCategoricalChart_objectSpread({\n            props: nextProps\n          }, newState))));\n        } else if (!ReactUtils_isChildrenEqual(nextProps.children, children)) {\n          // update configuration in chilren\n          var hasGlobalData = !isNil_default()(nextProps.data);\n          var newUpdateId = hasGlobalData ? updateId : updateId + 1;\n          this.setState(function (prevState) {\n            return generateCategoricalChart_objectSpread({\n              updateId: newUpdateId\n            }, _this2.updateStateOfAxisMapsOffsetAndStackGroups(generateCategoricalChart_objectSpread({\n              props: nextProps\n            }, prevState, {\n              updateId: newUpdateId\n            })));\n          });\n        } // add syncId\n\n\n        if (isNil_default()(this.props.syncId) && !isNil_default()(nextProps.syncId)) {\n          this.addListener();\n        } // remove syncId\n\n\n        if (!isNil_default()(this.props.syncId) && isNil_default()(nextProps.syncId)) {\n          this.removeListener();\n        }\n      }\n    }, {\n      key: "componentWillUnmount",\n      value: function componentWillUnmount() {\n        if (!isNil_default()(this.props.syncId)) {\n          this.removeListener();\n        }\n\n        this.cancelThrottledTriggerAfterMouseMove();\n      }\n    }, {\n      key: "cancelThrottledTriggerAfterMouseMove",\n      value: function cancelThrottledTriggerAfterMouseMove() {\n        if (typeof this.triggeredAfterMouseMove.cancel === \'function\') {\n          this.triggeredAfterMouseMove.cancel();\n        }\n      }\n      /**\n       * Get the configuration of all x-axis or y-axis\n       * @param  {Object} props          Latest props\n       * @param  {String} axisType       The type of axis\n       * @param  {Array}  graphicalItems The instances of item\n       * @param  {Object} stackGroups    The items grouped by axisId and stackId\n       * @param {Number} dataStartIndex  The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex    The end index of the data series when a brush is applied\n       * @return {Object}          Configuration\n       */\n\n    }, {\n      key: "getAxisMap",\n      value: function getAxisMap(props, _ref8) {\n        var _ref8$axisType = _ref8.axisType,\n            axisType = _ref8$axisType === void 0 ? \'xAxis\' : _ref8$axisType,\n            AxisComp = _ref8.AxisComp,\n            graphicalItems = _ref8.graphicalItems,\n            stackGroups = _ref8.stackGroups,\n            dataStartIndex = _ref8.dataStartIndex,\n            dataEndIndex = _ref8.dataEndIndex;\n        var children = props.children;\n        var axisIdKey = "".concat(axisType, "Id"); // Get all the instance of Axis\n\n        var axes = ReactUtils_findAllByType(children, AxisComp);\n        var axisMap = {};\n\n        if (axes && axes.length) {\n          axisMap = this.getAxisMapByAxes(props, {\n            axes: axes,\n            graphicalItems: graphicalItems,\n            axisType: axisType,\n            axisIdKey: axisIdKey,\n            stackGroups: stackGroups,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          });\n        } else if (graphicalItems && graphicalItems.length) {\n          axisMap = this.getAxisMapByItems(props, {\n            Axis: AxisComp,\n            graphicalItems: graphicalItems,\n            axisType: axisType,\n            axisIdKey: axisIdKey,\n            stackGroups: stackGroups,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          });\n        }\n\n        return axisMap;\n      }\n      /**\n       * Get the configuration of axis by the options of axis instance\n       * @param  {Object} props         Latest props\n       * @param {Array}  axes           The instance of axes\n       * @param  {Array} graphicalItems The instances of item\n       * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis\n       * @param  {String} axisIdKey     The unique id of an axis\n       * @param  {Object} stackGroups   The items grouped by axisId and stackId\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n       * @return {Object}      Configuration\n       */\n\n    }, {\n      key: "getActiveCoordinate",\n      value: function getActiveCoordinate(tooltipTicks, activeIndex, rangeObj) {\n        var layout = this.props.layout;\n        var entry = tooltipTicks.find(function (tick) {\n          return tick && tick.index === activeIndex;\n        });\n\n        if (entry) {\n          if (layout === \'horizontal\') {\n            return {\n              x: entry.coordinate,\n              y: rangeObj.y\n            };\n          }\n\n          if (layout === \'vertical\') {\n            return {\n              x: rangeObj.x,\n              y: entry.coordinate\n            };\n          }\n\n          if (layout === \'centric\') {\n            var _angle = entry.coordinate;\n            var _radius = rangeObj.radius;\n            return generateCategoricalChart_objectSpread({}, rangeObj, {}, polarToCartesian(rangeObj.cx, rangeObj.cy, _radius, _angle), {\n              angle: _angle,\n              radius: _radius\n            });\n          }\n\n          var radius = entry.coordinate;\n          var angle = rangeObj.angle;\n          return generateCategoricalChart_objectSpread({}, rangeObj, {}, polarToCartesian(rangeObj.cx, rangeObj.cy, radius, angle), {\n            angle: angle,\n            radius: radius\n          });\n        }\n\n        return originCoordinate;\n      }\n      /**\n       * Returns tooltip data based on a mouse position (as a parameter or in state)\n       * @param  {Object} rangeObj  { x, y } coordinates\n       * @return {Object}           Tooltip data data\n       */\n\n    }, {\n      key: "getTooltipData",\n      value: function getTooltipData(rangeObj) {\n        var rangeData = rangeObj || {\n          x: this.state.chartX,\n          y: this.state.chartY\n        };\n        var pos = this.calculateTooltipPos(rangeData);\n        var _this$state10 = this.state,\n            ticks = _this$state10.orderedTooltipTicks,\n            axis = _this$state10.tooltipAxis,\n            tooltipTicks = _this$state10.tooltipTicks;\n        var activeIndex = ChartUtils_calculateActiveTickIndex(pos, ticks, tooltipTicks, axis);\n\n        if (activeIndex >= 0 && tooltipTicks) {\n          var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;\n          var activePayload = this.getTooltipContent(activeIndex, activeLabel);\n          var activeCoordinate = this.getActiveCoordinate(ticks, activeIndex, rangeData);\n          return {\n            activeTooltipIndex: activeIndex,\n            activeLabel: activeLabel,\n            activePayload: activePayload,\n            activeCoordinate: activeCoordinate\n          };\n        }\n\n        return null;\n      }\n      /**\n       * Get the information of mouse in chart, return null when the mouse is not in the chart\n       * @param  {Object} event    The event object\n       * @return {Object}          Mouse data\n       */\n\n    }, {\n      key: "getMouseInfo",\n      value: function getMouseInfo(event) {\n        if (!this.container) {\n          return null;\n        }\n\n        var containerOffset = getOffset(this.container);\n        var e = calculateChartCoordinate(event, containerOffset);\n        var rangeObj = this.inRange(e.chartX, e.chartY);\n\n        if (!rangeObj) {\n          return null;\n        }\n\n        var _this$state11 = this.state,\n            xAxisMap = _this$state11.xAxisMap,\n            yAxisMap = _this$state11.yAxisMap;\n\n        if (eventType !== \'axis\' && xAxisMap && yAxisMap) {\n          var xScale = getAnyElementOfObject(xAxisMap).scale;\n          var yScale = getAnyElementOfObject(yAxisMap).scale;\n          var xValue = xScale && xScale.invert ? xScale.invert(e.chartX) : null;\n          var yValue = yScale && yScale.invert ? yScale.invert(e.chartY) : null;\n          return generateCategoricalChart_objectSpread({}, e, {\n            xValue: xValue,\n            yValue: yValue\n          });\n        }\n\n        var toolTipData = this.getTooltipData(rangeObj);\n\n        if (toolTipData) {\n          return generateCategoricalChart_objectSpread({}, e, {}, toolTipData);\n        }\n\n        return null;\n      }\n      /**\n       * Get the content to be displayed in the tooltip\n       * @param  {Number} activeIndex    Active index of data\n       * @param  {String} activeLabel    Active label of data\n       * @return {Array}                 The content of tooltip\n       */\n\n    }, {\n      key: "getTooltipContent",\n      value: function getTooltipContent(activeIndex, activeLabel) {\n        var _this$state12 = this.state,\n            graphicalItems = _this$state12.graphicalItems,\n            tooltipAxis = _this$state12.tooltipAxis;\n        var displayedData = CategoricalChartWrapper.getDisplayedData(this.props, this.state);\n\n        if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= displayedData.length) {\n          return null;\n        } // get data by activeIndex when the axis don\'t allow duplicated category\n\n\n        return graphicalItems.reduce(function (result, child) {\n          var hide = child.props.hide;\n\n          if (hide) {\n            return result;\n          }\n\n          var _child$props2 = child.props,\n              dataKey = _child$props2.dataKey,\n              name = _child$props2.name,\n              unit = _child$props2.unit,\n              formatter = _child$props2.formatter,\n              data = _child$props2.data,\n              tooltipType = _child$props2.tooltipType;\n          var payload;\n\n          if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {\n            // graphic child has data props\n            payload = findEntryInArray(data || displayedData, tooltipAxis.dataKey, activeLabel);\n          } else {\n            payload = data && data[activeIndex] || displayedData[activeIndex];\n          }\n\n          if (!payload) {\n            return result;\n          }\n\n          return [].concat(generateCategoricalChart_toConsumableArray(result), [generateCategoricalChart_objectSpread({}, types_filterProps(child), {\n            dataKey: dataKey,\n            unit: unit,\n            formatter: formatter,\n            name: name || dataKey,\n            color: getMainColorOfGraphicItem(child),\n            value: getValueByDataKey(payload, dataKey),\n            type: tooltipType,\n            payload: payload\n          })]);\n        }, []);\n      }\n    }, {\n      key: "getFormatItems",\n      value: function getFormatItems(props, currentState) {\n        var _this3 = this;\n\n        var graphicalItems = currentState.graphicalItems,\n            stackGroups = currentState.stackGroups,\n            offset = currentState.offset,\n            updateId = currentState.updateId,\n            dataStartIndex = currentState.dataStartIndex,\n            dataEndIndex = currentState.dataEndIndex;\n        var barSize = props.barSize,\n            layout = props.layout,\n            barGap = props.barGap,\n            barCategoryGap = props.barCategoryGap,\n            globalMaxBarSize = props.maxBarSize;\n\n        var _CategoricalChartWrap = CategoricalChartWrapper.getAxisNameByLayout(layout),\n            numericAxisName = _CategoricalChartWrap.numericAxisName,\n            cateAxisName = _CategoricalChartWrap.cateAxisName;\n\n        var hasBar = CategoricalChartWrapper.hasBar(graphicalItems);\n        var sizeList = hasBar && ChartUtils_getBarSizeList({\n          barSize: barSize,\n          stackGroups: stackGroups\n        });\n        var formatedItems = [];\n        var tooltipItem = findChildByType(props.children, component_Tooltip.displayName);\n        var isTooltipTriggerByClick = tooltipItem && tooltipItem.props.trigger === \'click\';\n        graphicalItems.forEach(function (item, index) {\n          var displayedData = CategoricalChartWrapper.getDisplayedData(props, {\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          }, item);\n          var _item$props2 = item.props,\n              dataKey = _item$props2.dataKey,\n              childMaxBarSize = _item$props2.maxBarSize;\n          var numericAxisId = item.props["".concat(numericAxisName, "Id")];\n          var cateAxisId = item.props["".concat(cateAxisName, "Id")];\n          var axisObj = axisComponents.reduce(function (result, entry) {\n            var _objectSpread4;\n\n            var axisMap = currentState["".concat(entry.axisType, "Map")];\n            var id = item.props["".concat(entry.axisType, "Id")];\n            var axis = axisMap && axisMap[id];\n            return generateCategoricalChart_objectSpread({}, result, (_objectSpread4 = {}, generateCategoricalChart_defineProperty(_objectSpread4, entry.axisType, axis), generateCategoricalChart_defineProperty(_objectSpread4, "".concat(entry.axisType, "Ticks"), ChartUtils_getTicksOfAxis(axis)), _objectSpread4));\n          }, {});\n          var cateAxis = axisObj[cateAxisName];\n          var cateTicks = axisObj["".concat(cateAxisName, "Ticks")];\n          var stackedData = stackGroups && stackGroups[numericAxisId] && stackGroups[numericAxisId].hasStack && ChartUtils_getStackedDataOfItem(item, stackGroups[numericAxisId].stackGroups);\n          var itemIsBar = getDisplayName(item.type).indexOf(\'Bar\') >= 0;\n          var bandSize = ChartUtils_getBandSizeOfAxis(cateAxis, cateTicks);\n          var barPosition = [];\n\n          if (itemIsBar) {\n            var barBandSize = ChartUtils_getBandSizeOfAxis(cateAxis, cateTicks, true); // \u5982\u679c\u662fbar\uff0c\u8ba1\u7b97bar\u7684\u4f4d\u7f6e\n\n            var maxBarSize = isNil_default()(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n            barPosition = ChartUtils_getBarPosition({\n              barGap: barGap,\n              barCategoryGap: barCategoryGap,\n              bandSize: barBandSize !== bandSize ? barBandSize : bandSize,\n              sizeList: sizeList[cateAxisId],\n              maxBarSize: maxBarSize\n            });\n\n            if (barBandSize !== bandSize) {\n              barPosition = barPosition.map(function (pos) {\n                return generateCategoricalChart_objectSpread({}, pos, {\n                  position: generateCategoricalChart_objectSpread({}, pos.position, {\n                    offset: pos.position.offset - barBandSize / 2\n                  })\n                });\n              });\n            }\n          }\n\n          var componsedFn = item && item.type && item.type.getComposedData;\n\n          if (componsedFn) {\n            var _objectSpread5;\n\n            var itemEvents = isTooltipTriggerByClick ? {\n              onItemClick: ChartUtils_combineEventHandlers(_this3.handleItemMouseEnter, null, item.props.onCLick)\n            } : {\n              onItemMouseLeave: ChartUtils_combineEventHandlers(_this3.handleItemMouseLeave, null, item.props.onMouseLeave),\n              onItemMouseEnter: ChartUtils_combineEventHandlers(_this3.handleItemMouseEnter, null, item.props.onMouseEnter)\n            };\n            formatedItems.push({\n              props: generateCategoricalChart_objectSpread({}, componsedFn(generateCategoricalChart_objectSpread({}, axisObj, {\n                displayedData: displayedData,\n                props: props,\n                dataKey: dataKey,\n                item: item,\n                bandSize: bandSize,\n                barPosition: barPosition,\n                offset: offset,\n                stackedData: stackedData,\n                layout: layout,\n                dataStartIndex: dataStartIndex,\n                dataEndIndex: dataEndIndex\n              }, itemEvents)), (_objectSpread5 = {\n                key: item.key || "item-".concat(index)\n              }, generateCategoricalChart_defineProperty(_objectSpread5, numericAxisName, axisObj[numericAxisName]), generateCategoricalChart_defineProperty(_objectSpread5, cateAxisName, axisObj[cateAxisName]), generateCategoricalChart_defineProperty(_objectSpread5, "animationId", updateId), _objectSpread5)),\n              childIndex: ReactUtils_parseChildIndex(item, props.children),\n              item: item\n            });\n          }\n        });\n        return formatedItems;\n      }\n    }, {\n      key: "getCursorRectangle",\n      value: function getCursorRectangle() {\n        var layout = this.props.layout;\n        var _this$state13 = this.state,\n            activeCoordinate = _this$state13.activeCoordinate,\n            offset = _this$state13.offset,\n            tooltipAxisBandSize = _this$state13.tooltipAxisBandSize;\n        var halfSize = tooltipAxisBandSize / 2;\n        return {\n          stroke: \'none\',\n          fill: \'#ccc\',\n          x: layout === \'horizontal\' ? activeCoordinate.x - halfSize : offset.left + 0.5,\n          y: layout === \'horizontal\' ? offset.top + 0.5 : activeCoordinate.y - halfSize,\n          width: layout === \'horizontal\' ? tooltipAxisBandSize : offset.width - 1,\n          height: layout === \'horizontal\' ? offset.height - 1 : tooltipAxisBandSize\n        };\n      }\n    }, {\n      key: "getCursorPoints",\n      value: function getCursorPoints() {\n        var layout = this.props.layout;\n        var _this$state14 = this.state,\n            activeCoordinate = _this$state14.activeCoordinate,\n            offset = _this$state14.offset;\n        var x1, y1, x2, y2;\n\n        if (layout === \'horizontal\') {\n          x1 = activeCoordinate.x;\n          x2 = x1;\n          y1 = offset.top;\n          y2 = offset.top + offset.height;\n        } else if (layout === \'vertical\') {\n          y1 = activeCoordinate.y;\n          y2 = y1;\n          x1 = offset.left;\n          x2 = offset.left + offset.width;\n        } else if (!isNil_default()(activeCoordinate.cx) || !isNil_default()(activeCoordinate.cy)) {\n          if (layout === \'centric\') {\n            var cx = activeCoordinate.cx,\n                cy = activeCoordinate.cy,\n                innerRadius = activeCoordinate.innerRadius,\n                outerRadius = activeCoordinate.outerRadius,\n                angle = activeCoordinate.angle;\n            var innerPoint = polarToCartesian(cx, cy, innerRadius, angle);\n            var outerPoint = polarToCartesian(cx, cy, outerRadius, angle);\n            x1 = innerPoint.x;\n            y1 = innerPoint.y;\n            x2 = outerPoint.x;\n            y2 = outerPoint.y;\n          } else {\n            var _cx = activeCoordinate.cx,\n                _cy = activeCoordinate.cy,\n                radius = activeCoordinate.radius,\n                startAngle = activeCoordinate.startAngle,\n                endAngle = activeCoordinate.endAngle;\n            var startPoint = polarToCartesian(_cx, _cy, radius, startAngle);\n            var endPoint = polarToCartesian(_cx, _cy, radius, endAngle);\n            return {\n              points: [startPoint, endPoint],\n              cx: _cx,\n              cy: _cy,\n              radius: radius,\n              startAngle: startAngle,\n              endAngle: endAngle\n            };\n          }\n        }\n\n        return [{\n          x: x1,\n          y: y1\n        }, {\n          x: x2,\n          y: y2\n        }];\n      }\n    }, {\n      key: "calculateTooltipPos",\n      value: function calculateTooltipPos(rangeObj) {\n        var layout = this.props.layout;\n\n        if (layout === \'horizontal\') {\n          return rangeObj.x;\n        }\n\n        if (layout === \'vertical\') {\n          return rangeObj.y;\n        }\n\n        if (layout === \'centric\') {\n          return rangeObj.angle;\n        }\n\n        return rangeObj.radius;\n      }\n    }, {\n      key: "inRange",\n      value: function inRange(x, y) {\n        var layout = this.props.layout;\n\n        if (layout === \'horizontal\' || layout === \'vertical\') {\n          var offset = this.state.offset;\n          var isInRange = x >= offset.left && x <= offset.left + offset.width && y >= offset.top && y <= offset.top + offset.height;\n          return isInRange ? {\n            x: x,\n            y: y\n          } : null;\n        }\n\n        var _this$state15 = this.state,\n            angleAxisMap = _this$state15.angleAxisMap,\n            radiusAxisMap = _this$state15.radiusAxisMap;\n\n        if (angleAxisMap && radiusAxisMap) {\n          var angleAxis = getAnyElementOfObject(angleAxisMap);\n          return inRangeOfSector({\n            x: x,\n            y: y\n          }, angleAxis);\n        }\n\n        return null;\n      }\n    }, {\n      key: "parseEventsOfWrapper",\n      value: function parseEventsOfWrapper() {\n        var children = this.props.children;\n        var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n        var tooltipEvents = {};\n\n        if (tooltipItem && eventType === \'axis\') {\n          if (tooltipItem.props.trigger === \'click\') {\n            tooltipEvents = {\n              onClick: this.handleClick\n            };\n          } else {\n            tooltipEvents = {\n              onMouseEnter: this.handleMouseEnter,\n              onMouseMove: this.handleMouseMove,\n              onMouseLeave: this.handleMouseLeave,\n              onTouchMove: this.handleTouchMove,\n              onTouchStart: this.handleTouchStart,\n              onTouchEnd: this.handleTouchEnd\n            };\n          }\n        }\n\n        var outerEvents = types_adaptEventHandlers(this.props, this.handleOuterEvent);\n        return generateCategoricalChart_objectSpread({}, outerEvents, {}, tooltipEvents);\n      }\n      /**\n       * The AxisMaps are expensive to render on large data sets\n       * so provide the ability to store them in state and only update them when necessary\n       * they are dependent upon the start and end index of\n       * the brush so it\'s important that this method is called _after_\n       * the state is updated with any new start/end indices\n       *\n       * @param {Object} props          The props object to be used for updating the axismaps\n       * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n       * @param {Number} updateId       The update id\n       * @return {Object} state New state to set\n       */\n\n    }, {\n      key: "updateStateOfAxisMapsOffsetAndStackGroups",\n      value: function updateStateOfAxisMapsOffsetAndStackGroups(_ref9) {\n        var _this4 = this;\n\n        var props = _ref9.props,\n            dataStartIndex = _ref9.dataStartIndex,\n            dataEndIndex = _ref9.dataEndIndex,\n            updateId = _ref9.updateId;\n\n        if (!ReactUtils_validateWidthHeight({\n          props: props\n        })) {\n          return null;\n        }\n\n        var children = props.children,\n            layout = props.layout,\n            stackOffset = props.stackOffset,\n            data = props.data,\n            reverseStackOrder = props.reverseStackOrder;\n\n        var _CategoricalChartWrap2 = CategoricalChartWrapper.getAxisNameByLayout(layout),\n            numericAxisName = _CategoricalChartWrap2.numericAxisName,\n            cateAxisName = _CategoricalChartWrap2.cateAxisName;\n\n        var graphicalItems = ReactUtils_findAllByType(children, GraphicalChild);\n        var stackGroups = ChartUtils_getStackGroupsByAxisId(data, graphicalItems, "".concat(numericAxisName, "Id"), "".concat(cateAxisName, "Id"), stackOffset, reverseStackOrder);\n        var axisObj = axisComponents.reduce(function (result, entry) {\n          var name = "".concat(entry.axisType, "Map");\n          return generateCategoricalChart_objectSpread({}, result, generateCategoricalChart_defineProperty({}, name, _this4.getAxisMap(props, generateCategoricalChart_objectSpread({}, entry, {\n            graphicalItems: graphicalItems,\n            stackGroups: entry.axisType === numericAxisName && stackGroups,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n          }))));\n        }, {});\n        var offset = this.calculateOffset(generateCategoricalChart_objectSpread({}, axisObj, {\n          props: props,\n          graphicalItems: graphicalItems\n        }));\n        Object.keys(axisObj).forEach(function (key) {\n          axisObj[key] = formatAxisMap(props, axisObj[key], offset, key.replace(\'Map\', \'\'), chartName);\n        });\n        var cateAxisMap = axisObj["".concat(cateAxisName, "Map")];\n        var ticksObj = this.tooltipTicksGenerator(cateAxisMap);\n        var formatedGraphicalItems = this.getFormatItems(props, generateCategoricalChart_objectSpread({}, axisObj, {\n          dataStartIndex: dataStartIndex,\n          dataEndIndex: dataEndIndex,\n          updateId: updateId,\n          graphicalItems: graphicalItems,\n          stackGroups: stackGroups,\n          offset: offset\n        }));\n        return generateCategoricalChart_objectSpread({\n          formatedGraphicalItems: formatedGraphicalItems,\n          graphicalItems: graphicalItems,\n          offset: offset,\n          stackGroups: stackGroups\n        }, ticksObj, {}, axisObj);\n      }\n      /* eslint-disable  no-underscore-dangle */\n\n    }, {\n      key: "addListener",\n      value: function addListener() {\n        eventCenter.on(SYNC_EVENT, this.handleReceiveSyncEvent);\n\n        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {\n          eventCenter.setMaxListeners(eventCenter._maxListeners + 1);\n        }\n      }\n    }, {\n      key: "removeListener",\n      value: function removeListener() {\n        eventCenter.removeListener(SYNC_EVENT, this.handleReceiveSyncEvent);\n\n        if (eventCenter.setMaxListeners && eventCenter._maxListeners) {\n          eventCenter.setMaxListeners(eventCenter._maxListeners - 1);\n        }\n      }\n      /**\n       * Calculate the offset of main part in the svg element\n       * @param  {Object} props          Latest props\n       * @param  {Array}  graphicalItems The instances of item\n       * @param  {Object} xAxisMap       The configuration of x-axis\n       * @param  {Object} yAxisMap       The configuration of y-axis\n       * @return {Object} The offset of main part in the svg element\n       */\n\n    }, {\n      key: "calculateOffset",\n      value: function calculateOffset(_ref10) {\n        var props = _ref10.props,\n            graphicalItems = _ref10.graphicalItems,\n            _ref10$xAxisMap = _ref10.xAxisMap,\n            xAxisMap = _ref10$xAxisMap === void 0 ? {} : _ref10$xAxisMap,\n            _ref10$yAxisMap = _ref10.yAxisMap,\n            yAxisMap = _ref10$yAxisMap === void 0 ? {} : _ref10$yAxisMap;\n        var width = props.width,\n            height = props.height,\n            children = props.children;\n        var margin = props.margin || {};\n        var brushItem = findChildByType(children, cartesian_Brush.displayName);\n        var legendItem = findChildByType(children, component_Legend.displayName);\n        var offsetH = Object.keys(yAxisMap).reduce(function (result, id) {\n          var entry = yAxisMap[id];\n          var orientation = entry.orientation;\n\n          if (!entry.mirror && !entry.hide) {\n            return generateCategoricalChart_objectSpread({}, result, generateCategoricalChart_defineProperty({}, orientation, result[orientation] + entry.width));\n          }\n\n          return result;\n        }, {\n          left: margin.left || 0,\n          right: margin.right || 0\n        });\n        var offsetV = Object.keys(xAxisMap).reduce(function (result, id) {\n          var entry = xAxisMap[id];\n          var orientation = entry.orientation;\n\n          if (!entry.mirror && !entry.hide) {\n            return generateCategoricalChart_objectSpread({}, result, generateCategoricalChart_defineProperty({}, orientation, get_default()(result, "".concat(orientation)) + entry.height));\n          }\n\n          return result;\n        }, {\n          top: margin.top || 0,\n          bottom: margin.bottom || 0\n        });\n\n        var offset = generateCategoricalChart_objectSpread({}, offsetV, {}, offsetH);\n\n        var brushBottom = offset.bottom;\n\n        if (brushItem) {\n          offset.bottom += brushItem.props.height || cartesian_Brush.defaultProps.height;\n        }\n\n        if (legendItem && this.legendInstance) {\n          var legendBox = this.legendInstance.getBBox();\n          offset = ChartUtils_appendOffsetOfLegend(offset, graphicalItems, props, legendBox);\n        }\n\n        return generateCategoricalChart_objectSpread({\n          brushBottom: brushBottom\n        }, offset, {\n          width: width - offset.left - offset.right,\n          height: height - offset.top - offset.bottom\n        });\n      }\n    }, {\n      key: "triggerSyncEvent",\n      value: function triggerSyncEvent(data) {\n        var syncId = this.props.syncId;\n\n        if (!isNil_default()(syncId)) {\n          eventCenter.emit(SYNC_EVENT, syncId, this.uniqueChartId, data);\n        }\n      }\n    }, {\n      key: "filterFormatItem",\n      value: function filterFormatItem(item, displayName, childIndex) {\n        var formatedGraphicalItems = this.state.formatedGraphicalItems;\n\n        for (var i = 0, len = formatedGraphicalItems.length; i < len; i++) {\n          var entry = formatedGraphicalItems[i];\n\n          if (entry.item === item || entry.props.key === item.key || displayName === getDisplayName(entry.item.type) && childIndex === entry.childIndex) {\n            return entry;\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: "renderAxis",\n\n      /**\n       * Draw axis\n       * @param {Object} axisOptions The options of axis\n       * @param {Object} element      The axis element\n       * @param {String} displayName  The display name of axis\n       * @param {Number} index        The index of element\n       * @return {ReactElement}       The instance of x-axes\n       */\n      value: function renderAxis(axisOptions, element, displayName, index) {\n        var _this$props6 = this.props,\n            width = _this$props6.width,\n            height = _this$props6.height;\n        return /*#__PURE__*/react_default.a.createElement(cartesian_CartesianAxis, generateCategoricalChart_extends({}, axisOptions, {\n          className: "recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType),\n          key: element.key || "".concat(displayName, "-").concat(index),\n          viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          },\n          ticksGenerator: this.axesTicksGenerator\n        }));\n      }\n      /**\n       * Draw grid\n       * @param  {ReactElement} element the grid item\n       * @return {ReactElement} The instance of grid\n       */\n\n    }, {\n      key: "renderClipPath",\n      value: function renderClipPath() {\n        var clipPathId = this.clipPathId;\n        var _this$state$offset = this.state.offset,\n            left = _this$state$offset.left,\n            top = _this$state$offset.top,\n            height = _this$state$offset.height,\n            width = _this$state$offset.width;\n        return /*#__PURE__*/react_default.a.createElement("defs", null, /*#__PURE__*/react_default.a.createElement("clipPath", {\n          id: clipPathId\n        }, /*#__PURE__*/react_default.a.createElement("rect", {\n          x: left,\n          y: top,\n          height: height,\n          width: width\n        })));\n      }\n    }, {\n      key: "render",\n      value: function render() {\n        var _this5 = this;\n\n        if (!ReactUtils_validateWidthHeight(this)) {\n          return null;\n        }\n\n        var _this$props7 = this.props,\n            children = _this$props7.children,\n            className = _this$props7.className,\n            width = _this$props7.width,\n            height = _this$props7.height,\n            style = _this$props7.style,\n            compact = _this$props7.compact,\n            others = generateCategoricalChart_objectWithoutProperties(_this$props7, ["children", "className", "width", "height", "style", "compact"]);\n\n        var attrs = types_filterProps(others);\n        var map = {\n          CartesianGrid: {\n            handler: this.renderGrid,\n            once: true\n          },\n          ReferenceArea: {\n            handler: this.renderReferenceElement\n          },\n          ReferenceLine: {\n            handler: this.renderReferenceElement\n          },\n          ReferenceDot: {\n            handler: this.renderReferenceElement\n          },\n          XAxis: {\n            handler: this.renderXAxis\n          },\n          YAxis: {\n            handler: this.renderYAxis\n          },\n          Brush: {\n            handler: this.renderBrush,\n            once: true\n          },\n          Bar: {\n            handler: this.renderGraphicChild\n          },\n          Line: {\n            handler: this.renderGraphicChild\n          },\n          Area: {\n            handler: this.renderGraphicChild\n          },\n          Radar: {\n            handler: this.renderGraphicChild\n          },\n          RadialBar: {\n            handler: this.renderGraphicChild\n          },\n          Scatter: {\n            handler: this.renderGraphicChild\n          },\n          Pie: {\n            handler: this.renderGraphicChild\n          },\n          Funnel: {\n            handler: this.renderGraphicChild\n          },\n          Tooltip: {\n            handler: this.renderCursor,\n            once: true\n          },\n          PolarGrid: {\n            handler: this.renderPolarGrid,\n            once: true\n          },\n          PolarAngleAxis: {\n            handler: this.renderPolarAxis\n          },\n          PolarRadiusAxis: {\n            handler: this.renderPolarAxis\n          },\n          Customized: {\n            handler: this.renderCustomized\n          }\n        }; // The "compact" mode is mainly used as the panorama within Brush\n\n        if (compact) {\n          return /*#__PURE__*/react_default.a.createElement(container_Surface, generateCategoricalChart_extends({}, attrs, {\n            width: width,\n            height: height\n          }), this.renderClipPath(), ReactUtils_renderByOrder(children, map));\n        }\n\n        var events = this.parseEventsOfWrapper();\n        return /*#__PURE__*/react_default.a.createElement("div", generateCategoricalChart_extends({\n          className: classnames_default()(\'recharts-wrapper\', className),\n          style: generateCategoricalChart_objectSpread({\n            position: \'relative\',\n            cursor: \'default\',\n            width: width,\n            height: height\n          }, style)\n        }, events, {\n          ref: function ref(node) {\n            _this5.container = node;\n          }\n        }), /*#__PURE__*/react_default.a.createElement(container_Surface, generateCategoricalChart_extends({}, attrs, {\n          width: width,\n          height: height\n        }), this.renderClipPath(), ReactUtils_renderByOrder(children, map)), this.renderLegend(), this.renderTooltip());\n      }\n    }], [{\n      key: "getAxisNameByLayout",\n      value: function getAxisNameByLayout(layout) {\n        if (layout === \'horizontal\') {\n          return {\n            numericAxisName: \'yAxis\',\n            cateAxisName: \'xAxis\'\n          };\n        }\n\n        if (layout === \'vertical\') {\n          return {\n            numericAxisName: \'xAxis\',\n            cateAxisName: \'yAxis\'\n          };\n        }\n\n        if (layout === \'centric\') {\n          return {\n            numericAxisName: \'radiusAxis\',\n            cateAxisName: \'angleAxis\'\n          };\n        }\n\n        return {\n          numericAxisName: \'angleAxis\',\n          cateAxisName: \'radiusAxis\'\n        };\n      }\n    }, {\n      key: "renderActiveDot",\n      value: function renderActiveDot(option, props) {\n        var dot;\n\n        if (Object(react["isValidElement"])(option)) {\n          dot = Object(react["cloneElement"])(option, props);\n        } else if (isFunction_default()(option)) {\n          dot = option(props);\n        } else {\n          dot = /*#__PURE__*/react_default.a.createElement(shape_Dot, props);\n        }\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n          className: "recharts-active-dot",\n          key: props.key\n        }, dot);\n      }\n    }]);\n\n    return CategoricalChartWrapper;\n  }(react["Component"]), _class.displayName = chartName, _class.defaultProps = generateCategoricalChart_objectSpread({\n    layout: \'horizontal\',\n    stackOffset: \'none\',\n    barCategoryGap: \'10%\',\n    barGap: 4,\n    margin: {\n      top: 5,\n      right: 5,\n      bottom: 5,\n      left: 5\n    },\n    reverseStackOrder: false\n  }, defaultProps), _class.createDefaultState = function (props) {\n    var children = props.children,\n        defaultShowTooltip = props.defaultShowTooltip;\n    var brushItem = findChildByType(children, cartesian_Brush.displayName);\n    var startIndex = brushItem && brushItem.props && brushItem.props.startIndex || 0;\n    var endIndex = brushItem && brushItem.props && brushItem.props.endIndex || props.data && props.data.length - 1 || 0;\n    return {\n      chartX: 0,\n      chartY: 0,\n      dataStartIndex: startIndex,\n      dataEndIndex: endIndex,\n      activeTooltipIndex: -1,\n      isTooltipActive: !isNil_default()(defaultShowTooltip) ? defaultShowTooltip : false\n    };\n  }, _class.hasBar = function (graphicalItems) {\n    if (!graphicalItems || !graphicalItems.length) {\n      return false;\n    }\n\n    return graphicalItems.some(function (item) {\n      var name = getDisplayName(item && item.type);\n      return name && name.indexOf(\'Bar\') >= 0;\n    });\n  }, _class.getDisplayedData = function (props, _ref11, item) {\n    var graphicalItems = _ref11.graphicalItems,\n        dataStartIndex = _ref11.dataStartIndex,\n        dataEndIndex = _ref11.dataEndIndex;\n    var itemsData = (graphicalItems || []).reduce(function (result, child) {\n      var itemData = child.props.data;\n\n      if (itemData && itemData.length) {\n        return [].concat(generateCategoricalChart_toConsumableArray(result), generateCategoricalChart_toConsumableArray(itemData));\n      }\n\n      return result;\n    }, []);\n\n    if (itemsData && itemsData.length > 0) {\n      return itemsData;\n    }\n\n    if (item && item.props && item.props.data && item.props.data.length > 0) {\n      return item.props.data;\n    }\n\n    var data = props.data;\n\n    if (data && data.length && DataUtils_isNumber(dataStartIndex) && DataUtils_isNumber(dataEndIndex)) {\n      return data.slice(dataStartIndex, dataEndIndex + 1);\n    }\n\n    return [];\n  }, _temp;\n};\n\n/* harmony default export */ var chart_generateCategoricalChart = (generateCategoricalChart_generateCategoricalChart);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/LineChart.js\n/**\n * @fileOverview Line Chart\n */\n\n\n\n\n\n/* harmony default export */ var LineChart = (chart_generateCategoricalChart({\n  chartName: \'LineChart\',\n  GraphicalChild: cartesian_Line,\n  axisComponents: [{\n    axisType: \'xAxis\',\n    AxisComp: cartesian_XAxis\n  }, {\n    axisType: \'yAxis\',\n    AxisComp: cartesian_YAxis\n  }],\n  formatAxisMap: CartesianUtils_formatAxisMap\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/BarChart.js\n/**\n * @fileOverview Bar Chart\n */\n\n\n\n\n\n/* harmony default export */ var BarChart = (chart_generateCategoricalChart({\n  chartName: \'BarChart\',\n  GraphicalChild: cartesian_Bar,\n  axisComponents: [{\n    axisType: \'xAxis\',\n    AxisComp: cartesian_XAxis\n  }, {\n    axisType: \'yAxis\',\n    AxisComp: cartesian_YAxis\n  }],\n  formatAxisMap: CartesianUtils_formatAxisMap\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/PieChart.js\n/**\n * @fileOverview Pie Chart\n */\n\n\n\n\n\n/* harmony default export */ var PieChart = (chart_generateCategoricalChart({\n  chartName: \'PieChart\',\n  GraphicalChild: polar_Pie,\n  eventType: \'item\',\n  legendContent: \'children\',\n  axisComponents: [{\n    axisType: \'angleAxis\',\n    AxisComp: polar_PolarAngleAxis\n  }, {\n    axisType: \'radiusAxis\',\n    AxisComp: polar_PolarRadiusAxis\n  }],\n  formatAxisMap: PolarUtils_formatAxisMap,\n  defaultProps: {\n    layout: \'centric\',\n    startAngle: 0,\n    endAngle: 360,\n    cx: \'50%\',\n    cy: \'50%\',\n    innerRadius: 0,\n    outerRadius: \'80%\'\n  }\n}));\n// EXTERNAL MODULE: ./node_modules/lodash/omit.js\nvar omit = __webpack_require__("Puqe");\nvar omit_default = /*#__PURE__*/__webpack_require__.n(omit);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/util/Constants.js\nvar COLOR_PANEL = [\'#1890FF\', \'#66B5FF\', \'#41D9C7\', \'#2FC25B\', \'#6EDB8F\', \'#9AE65C\', \'#FACC14\', \'#E6965C\', \'#57AD71\', \'#223273\', \'#738AE6\', \'#7564CC\', \'#8543E0\', \'#A877ED\', \'#5C8EE6\', \'#13C2C2\', \'#70E0E0\', \'#5CA3E6\', \'#3436C7\', \'#8082FF\', \'#DD81E6\', \'#F04864\', \'#FA7D92\', \'#D598D9\'];\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/Treemap.js\n\n\n\n\n\nfunction Treemap_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Treemap_typeof = function _typeof(obj) { return typeof obj; }; } else { Treemap_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Treemap_typeof(obj); }\n\nfunction Treemap_extends() { Treemap_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Treemap_extends.apply(this, arguments); }\n\nfunction Treemap_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Treemap_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Treemap_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Treemap_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Treemap_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Treemap_createClass(Constructor, protoProps, staticProps) { if (protoProps) Treemap_defineProperties(Constructor.prototype, protoProps); if (staticProps) Treemap_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Treemap_createSuper(Derived) { return function () { var Super = Treemap_getPrototypeOf(Derived), result; if (Treemap_isNativeReflectConstruct()) { var NewTarget = Treemap_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Treemap_possibleConstructorReturn(this, result); }; }\n\nfunction Treemap_possibleConstructorReturn(self, call) { if (call && (Treemap_typeof(call) === "object" || typeof call === "function")) { return call; } return Treemap_assertThisInitialized(self); }\n\nfunction Treemap_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Treemap_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Treemap_getPrototypeOf(o) { Treemap_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Treemap_getPrototypeOf(o); }\n\nfunction Treemap_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Treemap_setPrototypeOf(subClass, superClass); }\n\nfunction Treemap_setPrototypeOf(o, p) { Treemap_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Treemap_setPrototypeOf(o, p); }\n\nfunction Treemap_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Treemap_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Treemap_ownKeys(Object(source), true).forEach(function (key) { Treemap_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Treemap_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Treemap_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/**\n * @fileOverview TreemapChart\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Treemap_computeNode = function computeNode(_ref) {\n  var depth = _ref.depth,\n      node = _ref.node,\n      index = _ref.index,\n      valueKey = _ref.valueKey;\n  var children = node.children;\n  var childDepth = depth + 1;\n  var computedChildren = children && children.length ? children.map(function (child, i) {\n    return computeNode({\n      depth: childDepth,\n      node: child,\n      index: i,\n      valueKey: valueKey\n    });\n  }) : null;\n  var value;\n\n  if (children && children.length) {\n    value = computedChildren.reduce(function (result, child) {\n      return result + child.value;\n    }, 0);\n  } else {\n    // TODO need to verify valueKey\n    value = isNaN_default()(node[valueKey]) || node[valueKey] <= 0 ? 0 : node[valueKey];\n  }\n\n  return Treemap_objectSpread({}, node, {\n    children: computedChildren,\n    value: value,\n    depth: depth,\n    index: index\n  });\n};\n\nvar filterRect = function filterRect(node) {\n  return {\n    x: node.x,\n    y: node.y,\n    width: node.width,\n    height: node.height\n  };\n}; // Compute the area for each child based on value & scale.\n\n\nvar Treemap_getAreaOfChildren = function getAreaOfChildren(children, areaValueRatio) {\n  var ratio = areaValueRatio < 0 ? 0 : areaValueRatio;\n  return children.map(function (child) {\n    var area = child.value * ratio;\n    return Treemap_objectSpread({}, child, {\n      area: isNaN_default()(area) || area <= 0 ? 0 : area\n    });\n  });\n}; // Computes the score for the specified row, as the worst aspect ratio.\n\n\nvar getWorstScore = function getWorstScore(row, parentSize, aspectRatio) {\n  var parentArea = parentSize * parentSize;\n  var rowArea = row.area * row.area;\n\n  var _row$reduce = row.reduce(function (result, child) {\n    return {\n      min: Math.min(result.min, child.area),\n      max: Math.max(result.max, child.area)\n    };\n  }, {\n    min: Infinity,\n    max: 0\n  }),\n      min = _row$reduce.min,\n      max = _row$reduce.max;\n\n  return rowArea ? Math.max(parentArea * max * aspectRatio / rowArea, rowArea / (parentArea * min * aspectRatio)) : Infinity;\n};\n\nvar horizontalPosition = function horizontalPosition(row, parentSize, parentRect, isFlush) {\n  var rowHeight = parentSize ? Math.round(row.area / parentSize) : 0;\n\n  if (isFlush || rowHeight > parentRect.height) {\n    rowHeight = parentRect.height;\n  }\n\n  var curX = parentRect.x;\n  var child;\n\n  for (var _i = 0, len = row.length; _i < len; _i++) {\n    child = row[_i];\n    child.x = curX;\n    child.y = parentRect.y;\n    child.height = rowHeight;\n    child.width = Math.min(rowHeight ? Math.round(child.area / rowHeight) : 0, parentRect.x + parentRect.width - curX);\n    curX += child.width;\n  } // what\'s z\n\n\n  child.z = true; // add the remain x to the last one of row\n\n  child.width += parentRect.x + parentRect.width - curX;\n  return Treemap_objectSpread({}, parentRect, {\n    y: parentRect.y + rowHeight,\n    height: parentRect.height - rowHeight\n  });\n};\n\nvar verticalPosition = function verticalPosition(row, parentSize, parentRect, isFlush) {\n  var rowWidth = parentSize ? Math.round(row.area / parentSize) : 0;\n\n  if (isFlush || rowWidth > parentRect.width) {\n    rowWidth = parentRect.width;\n  }\n\n  var curY = parentRect.y;\n  var child;\n\n  for (var _i2 = 0, len = row.length; _i2 < len; _i2++) {\n    child = row[_i2];\n    child.x = parentRect.x;\n    child.y = curY;\n    child.width = rowWidth;\n    child.height = Math.min(rowWidth ? Math.round(child.area / rowWidth) : 0, parentRect.y + parentRect.height - curY);\n    curY += child.height;\n  }\n\n  if (child) {\n    child.z = false;\n    child.height += parentRect.y + parentRect.height - curY;\n  }\n\n  return Treemap_objectSpread({}, parentRect, {\n    x: parentRect.x + rowWidth,\n    width: parentRect.width - rowWidth\n  });\n};\n\nvar Treemap_position = function position(row, parentSize, parentRect, isFlush) {\n  if (parentSize === parentRect.width) {\n    return horizontalPosition(row, parentSize, parentRect, isFlush);\n  }\n\n  return verticalPosition(row, parentSize, parentRect, isFlush);\n}; // Recursively arranges the specified node\'s children into squarified rows.\n\n\nvar squarify = function squarify(node, aspectRatio) {\n  var children = node.children;\n\n  if (children && children.length) {\n    var rect = filterRect(node); // maybe a bug\n\n    var row = [];\n    var best = Infinity; // the best row score so far\n\n    var child, score; // the current row score\n\n    var size = Math.min(rect.width, rect.height); // initial orientation\n\n    var scaleChildren = Treemap_getAreaOfChildren(children, rect.width * rect.height / node.value);\n    var tempChildren = scaleChildren.slice();\n    row.area = 0;\n\n    while (tempChildren.length > 0) {\n      // row first\n      // eslint-disable-next-line prefer-destructuring\n      row.push(child = tempChildren[0]);\n      row.area += child.area;\n      score = getWorstScore(row, size, aspectRatio);\n\n      if (score <= best) {\n        // continue with this orientation\n        tempChildren.shift();\n        best = score;\n      } else {\n        // abort, and try a different orientation\n        row.area -= row.pop().area;\n        rect = Treemap_position(row, size, rect, false);\n        size = Math.min(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n    }\n\n    if (row.length) {\n      rect = Treemap_position(row, size, rect, true);\n      row.length = row.area = 0;\n    }\n\n    return Treemap_objectSpread({}, node, {\n      children: scaleChildren.map(function (c) {\n        return squarify(c, aspectRatio);\n      })\n    });\n  }\n\n  return node;\n};\n\nvar Treemap_defaultState = {\n  isTooltipActive: false,\n  isAnimationFinished: false,\n  activeNode: null,\n  formatRoot: null,\n  currentRoot: null,\n  nestIndex: []\n};\n\nvar Treemap_Treemap = /*#__PURE__*/function (_PureComponent) {\n  Treemap_inherits(Treemap, _PureComponent);\n\n  var _super = Treemap_createSuper(Treemap);\n\n  function Treemap() {\n    var _this;\n\n    Treemap_classCallCheck(this, Treemap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = Treemap_objectSpread({}, Treemap_defaultState);\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (isFunction_default()(onAnimationEnd)) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (isFunction_default()(onAnimationStart)) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  Treemap_createClass(Treemap, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          width = _this$props.width,\n          height = _this$props.height,\n          data = _this$props.data,\n          dataKey = _this$props.dataKey,\n          aspectRatio = _this$props.aspectRatio;\n\n      var _this$computeRoot = this.computeRoot({\n        type: type,\n        width: width,\n        height: height,\n        data: data,\n        dataKey: dataKey,\n        aspectRatio: aspectRatio\n      }),\n          formatRoot = _this$computeRoot.formatRoot,\n          currentRoot = _this$computeRoot.currentRoot,\n          nestIndex = _this$computeRoot.nestIndex;\n\n      this.setState({\n        formatRoot: formatRoot,\n        currentRoot: currentRoot,\n        nestIndex: nestIndex\n      });\n    }\n  }, {\n    key: "computeRoot",\n    value: function computeRoot(_ref2) {\n      var type = _ref2.type,\n          width = _ref2.width,\n          height = _ref2.height,\n          data = _ref2.data,\n          dataKey = _ref2.dataKey,\n          aspectRatio = _ref2.aspectRatio;\n      var root = Treemap_computeNode({\n        depth: 0,\n        node: {\n          children: data,\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        },\n        index: 0,\n        valueKey: dataKey\n      });\n      var formatRoot = squarify(root, aspectRatio);\n      var nestIndex = this.state.nestIndex;\n\n      if (type === \'nest\') {\n        nestIndex.push(root);\n      }\n\n      return {\n        formatRoot: formatRoot,\n        currentRoot: root,\n        nestIndex: nestIndex\n      };\n    } // eslint-disable-next-line camelcase\n\n  }, {\n    key: "UNSAFE_componentWillReceiveProps",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var type = nextProps.type,\n          width = nextProps.width,\n          height = nextProps.height,\n          data = nextProps.data,\n          dataKey = nextProps.dataKey,\n          aspectRatio = nextProps.aspectRatio;\n\n      if (data !== this.props.data || type !== this.props.type || width !== this.props.width || height !== this.props.height || dataKey !== this.props.dataKey || aspectRatio !== this.props.aspectRatio) {\n        var nextRoot = this.computeRoot({\n          type: type,\n          width: width,\n          height: height,\n          data: data,\n          dataKey: dataKey,\n          aspectRatio: aspectRatio\n        });\n        this.setState(Treemap_objectSpread({}, Treemap_defaultState, {}, nextRoot, {\n          nestIndex: [nextRoot.currentRoot]\n        }));\n      }\n    }\n  }, {\n    key: "handleMouseEnter",\n    value: function handleMouseEnter(node, e) {\n      var _this$props2 = this.props,\n          onMouseEnter = _this$props2.onMouseEnter,\n          children = _this$props2.children;\n      var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n\n      if (tooltipItem) {\n        this.setState({\n          isTooltipActive: true,\n          activeNode: node\n        }, function () {\n          if (onMouseEnter) {\n            onMouseEnter(node, e);\n          }\n        });\n      } else if (onMouseEnter) {\n        onMouseEnter(node, e);\n      }\n    }\n  }, {\n    key: "handleMouseLeave",\n    value: function handleMouseLeave(node, e) {\n      var _this$props3 = this.props,\n          onMouseLeave = _this$props3.onMouseLeave,\n          children = _this$props3.children;\n      var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n\n      if (tooltipItem) {\n        this.setState({\n          isTooltipActive: false,\n          activeNode: null\n        }, function () {\n          if (onMouseLeave) {\n            onMouseLeave(node, e);\n          }\n        });\n      } else if (onMouseLeave) {\n        onMouseLeave(node, e);\n      }\n    }\n  }, {\n    key: "handleClick",\n    value: function handleClick(node) {\n      var _this$props4 = this.props,\n          onClick = _this$props4.onClick,\n          type = _this$props4.type;\n\n      if (type === \'nest\' && node.children) {\n        var _this$props5 = this.props,\n            width = _this$props5.width,\n            height = _this$props5.height,\n            dataKey = _this$props5.dataKey,\n            aspectRatio = _this$props5.aspectRatio;\n        var root = Treemap_computeNode({\n          depth: 0,\n          node: Treemap_objectSpread({}, node, {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          }),\n          index: 0,\n          valueKey: dataKey\n        });\n        var formatRoot = squarify(root, aspectRatio);\n        var nestIndex = this.state.nestIndex;\n        nestIndex.push(node);\n        this.setState({\n          formatRoot: formatRoot,\n          currentRoot: root,\n          nestIndex: nestIndex\n        });\n      }\n\n      if (onClick) {\n        onClick(node);\n      }\n    }\n  }, {\n    key: "handleNestIndex",\n    value: function handleNestIndex(node, i) {\n      var nestIndex = this.state.nestIndex;\n      var _this$props6 = this.props,\n          width = _this$props6.width,\n          height = _this$props6.height,\n          dataKey = _this$props6.dataKey,\n          aspectRatio = _this$props6.aspectRatio;\n      var root = Treemap_computeNode({\n        depth: 0,\n        node: Treemap_objectSpread({}, node, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        }),\n        index: 0,\n        valueKey: dataKey\n      });\n      var formatRoot = squarify(root, aspectRatio);\n      nestIndex = nestIndex.slice(0, i + 1);\n      this.setState({\n        formatRoot: formatRoot,\n        currentRoot: node,\n        nestIndex: nestIndex\n      });\n    }\n  }, {\n    key: "renderItem",\n    value: function renderItem(content, nodeProps, isLeaf) {\n      var _this2 = this;\n\n      var _this$props7 = this.props,\n          isAnimationActive = _this$props7.isAnimationActive,\n          animationBegin = _this$props7.animationBegin,\n          animationDuration = _this$props7.animationDuration,\n          animationEasing = _this$props7.animationEasing,\n          isUpdateAnimationActive = _this$props7.isUpdateAnimationActive,\n          type = _this$props7.type,\n          animationId = _this$props7.animationId,\n          colorPanel = _this$props7.colorPanel;\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var width = nodeProps.width,\n          height = nodeProps.height,\n          x = nodeProps.x,\n          y = nodeProps.y,\n          depth = nodeProps.depth;\n      var translateX = parseInt("".concat((Math.random() * 2 - 1) * width), 10);\n      var event = {};\n\n      if (isLeaf || type === \'nest\') {\n        event = {\n          onMouseEnter: this.handleMouseEnter.bind(this, nodeProps),\n          onMouseLeave: this.handleMouseLeave.bind(this, nodeProps),\n          onClick: this.handleClick.bind(this, nodeProps)\n        };\n      }\n\n      if (!isAnimationActive) {\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, event, this.constructor.renderContentItem(content, Treemap_objectSpread({}, nodeProps, {\n          isAnimationActive: false,\n          isUpdateAnimationActive: false,\n          width: width,\n          height: height,\n          x: x,\n          y: y\n        }), type, colorPanel));\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        key: "treemap-".concat(animationId),\n        from: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        to: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        onAnimationStart: this.handleAnimationStart,\n        onAnimationEnd: this.handleAnimationEnd\n      }, function (_ref3) {\n        var currX = _ref3.x,\n            currY = _ref3.y,\n            currWidth = _ref3.width,\n            currHeight = _ref3.height;\n        return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n          from: "translate(".concat(translateX, "px, ").concat(translateX, "px)"),\n          to: "translate(0, 0)",\n          attributeName: "transform",\n          begin: animationBegin,\n          easing: animationEasing,\n          isActive: isAnimationActive,\n          duration: animationDuration\n        }, /*#__PURE__*/react_default.a.createElement(container_Layer, event, function () {\n          // when animation Duration , only render depth=1 nodes\n          if (depth > 2 && !isAnimationFinished) {\n            return null;\n          }\n\n          return _this2.constructor.renderContentItem(content, Treemap_objectSpread({}, nodeProps, {\n            isAnimationActive: isAnimationActive,\n            isUpdateAnimationActive: !isUpdateAnimationActive,\n            width: currWidth,\n            height: currHeight,\n            x: currX,\n            y: currY\n          }), type, colorPanel);\n        }()));\n      });\n    }\n  }, {\n    key: "renderNode",\n    value: function renderNode(root, node, i) {\n      var _this3 = this;\n\n      var _this$props8 = this.props,\n          content = _this$props8.content,\n          type = _this$props8.type;\n\n      var nodeProps = Treemap_objectSpread({}, types_filterProps(this.props), {}, node, {\n        root: root\n      });\n\n      var isLeaf = !node.children || !node.children.length;\n      var currentRoot = this.state.currentRoot;\n      var isCurrentRootChild = (currentRoot.children || []).filter(function (item) {\n        return item.depth === node.depth && item.name === node.name;\n      });\n\n      if (!isCurrentRootChild.length && root.depth && type === \'nest\') {\n        return null;\n      }\n\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        react_default.a.createElement(container_Layer, {\n          key: "recharts-treemap-node-".concat(i),\n          className: "recharts-treemap-depth-".concat(node.depth)\n        }, this.renderItem(content, nodeProps, isLeaf), node.children && node.children.length ? node.children.map(function (child, index) {\n          return _this3.renderNode(node, child, index);\n        }) : null)\n      );\n    }\n  }, {\n    key: "renderAllNodes",\n    value: function renderAllNodes() {\n      var formatRoot = this.state.formatRoot;\n\n      if (!formatRoot) {\n        return null;\n      }\n\n      return this.renderNode(formatRoot, formatRoot, 0);\n    }\n  }, {\n    key: "renderTooltip",\n    value: function renderTooltip() {\n      var _this$props9 = this.props,\n          children = _this$props9.children,\n          nameKey = _this$props9.nameKey;\n      var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n\n      if (!tooltipItem) {\n        return null;\n      }\n\n      var _this$props10 = this.props,\n          width = _this$props10.width,\n          height = _this$props10.height,\n          dataKey = _this$props10.dataKey;\n      var _this$state = this.state,\n          isTooltipActive = _this$state.isTooltipActive,\n          activeNode = _this$state.activeNode;\n      var viewBox = {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      };\n      var coordinate = activeNode ? {\n        x: activeNode.x + activeNode.width / 2,\n        y: activeNode.y + activeNode.height / 2\n      } : null;\n      var payload = isTooltipActive && activeNode ? [{\n        payload: activeNode,\n        name: getValueByDataKey(activeNode, nameKey, \'\'),\n        value: getValueByDataKey(activeNode, dataKey)\n      }] : [];\n      return react_default.a.cloneElement(tooltipItem, {\n        viewBox: viewBox,\n        active: isTooltipActive,\n        coordinate: coordinate,\n        label: \'\',\n        payload: payload\n      });\n    } // render nest treemap\n\n  }, {\n    key: "renderNestIndex",\n    value: function renderNestIndex() {\n      var _this4 = this;\n\n      var _this$props11 = this.props,\n          nameKey = _this$props11.nameKey,\n          nestIndexContent = _this$props11.nestIndexContent;\n      var nestIndex = this.state.nestIndex;\n      return /*#__PURE__*/react_default.a.createElement("div", {\n        className: "recharts-treemap-nest-index-wrapper",\n        style: {\n          marginTop: \'8px\',\n          textAlign: \'center\'\n        }\n      }, nestIndex.map(function (item, i) {\n        // TODO need to verify nameKey type\n        var name = get_default()(item, nameKey, \'root\');\n\n        var content = null;\n\n        if (react_default.a.isValidElement(nestIndexContent)) {\n          content = react_default.a.cloneElement(nestIndexContent, item, i);\n        }\n\n        if (isFunction_default()(nestIndexContent)) {\n          content = nestIndexContent(item, i);\n        } else {\n          content = name;\n        }\n\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n          react_default.a.createElement("div", {\n            onClick: _this4.handleNestIndex.bind(_this4, item, i),\n            key: "nest-index-".concat(uniqueId()),\n            className: "recharts-treemap-nest-index-box",\n            style: {\n              cursor: \'pointer\',\n              display: \'inline-block\',\n              padding: \'0 7px\',\n              background: \'#000\',\n              color: \'#fff\',\n              marginRight: \'3px\'\n            }\n          }, content)\n        );\n      }));\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (!ReactUtils_validateWidthHeight(this)) {\n        return null;\n      }\n\n      var _this$props12 = this.props,\n          width = _this$props12.width,\n          height = _this$props12.height,\n          className = _this$props12.className,\n          style = _this$props12.style,\n          children = _this$props12.children,\n          type = _this$props12.type,\n          others = Treemap_objectWithoutProperties(_this$props12, ["width", "height", "className", "style", "children", "type"]);\n\n      var attrs = types_filterProps(others);\n      return /*#__PURE__*/react_default.a.createElement("div", {\n        className: classnames_default()(\'recharts-wrapper\', className),\n        style: Treemap_objectSpread({}, style, {\n          position: \'relative\',\n          cursor: \'default\',\n          width: width,\n          height: height\n        })\n      }, /*#__PURE__*/react_default.a.createElement(container_Surface, Treemap_extends({}, attrs, {\n        width: width,\n        height: type === \'nest\' ? height - 30 : height\n      }), this.renderAllNodes(), ReactUtils_filterSvgElements(children)), this.renderTooltip(), type === \'nest\' && this.renderNestIndex());\n    }\n  }], [{\n    key: "renderContentItem",\n    value: function renderContentItem(content, nodeProps, type, colorPanel) {\n      if (react_default.a.isValidElement(content)) {\n        return react_default.a.cloneElement(content, nodeProps);\n      }\n\n      if (isFunction_default()(content)) {\n        return content(nodeProps);\n      } // optimize default shape\n\n\n      var x = nodeProps.x,\n          y = nodeProps.y,\n          width = nodeProps.width,\n          height = nodeProps.height,\n          index = nodeProps.index;\n      var arrow = null;\n\n      if (width > 10 && height > 10 && nodeProps.children && type === \'nest\') {\n        arrow = /*#__PURE__*/react_default.a.createElement(shape_Polygon, {\n          points: [{\n            x: x + 2,\n            y: y + height / 2\n          }, {\n            x: x + 6,\n            y: y + height / 2 + 3\n          }, {\n            x: x + 2,\n            y: y + height / 2 + 6\n          }]\n        });\n      }\n\n      var text = null;\n      var nameSize = DOMUtils_getStringSize(nodeProps.name);\n\n      if (width > 20 && height > 20 && nameSize.width < width && nameSize.height < height) {\n        text = /*#__PURE__*/react_default.a.createElement("text", {\n          x: x + 8,\n          y: y + height / 2 + 7,\n          fontSize: 14\n        }, nodeProps.name);\n      }\n\n      var colors = colorPanel || COLOR_PANEL;\n      return /*#__PURE__*/react_default.a.createElement("g", null, /*#__PURE__*/react_default.a.createElement(shape_Rectangle, Treemap_extends({\n        fill: nodeProps.depth < 2 ? colors[index % colors.length] : \'rgba(255,255,255,0)\',\n        stroke: "#fff"\n      }, omit_default()(nodeProps, \'children\'))), arrow, text);\n    }\n  }]);\n\n  return Treemap;\n}(react["PureComponent"]);\n\nTreemap_Treemap.displayName = \'Treemap\';\nTreemap_Treemap.defaultProps = {\n  aspectRatio: 0.5 * (1 + Math.sqrt(5)),\n  dataKey: \'value\',\n  type: \'flat\',\n  isAnimationActive: !util_Global.isSsr,\n  isUpdateAnimationActive: !util_Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: \'linear\'\n};\n/* harmony default export */ var chart_Treemap = (Treemap_Treemap);\n// EXTERNAL MODULE: ./node_modules/lodash/sumBy.js\nvar sumBy = __webpack_require__("a9jo");\nvar sumBy_default = /*#__PURE__*/__webpack_require__.n(sumBy);\n\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/Sankey.js\n\n\n\n\n\n\nfunction Sankey_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Sankey_typeof = function _typeof(obj) { return typeof obj; }; } else { Sankey_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Sankey_typeof(obj); }\n\nfunction Sankey_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Sankey_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Sankey_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Sankey_extends() { Sankey_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Sankey_extends.apply(this, arguments); }\n\nfunction Sankey_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Sankey_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Sankey_createClass(Constructor, protoProps, staticProps) { if (protoProps) Sankey_defineProperties(Constructor.prototype, protoProps); if (staticProps) Sankey_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Sankey_createSuper(Derived) { return function () { var Super = Sankey_getPrototypeOf(Derived), result; if (Sankey_isNativeReflectConstruct()) { var NewTarget = Sankey_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Sankey_possibleConstructorReturn(this, result); }; }\n\nfunction Sankey_possibleConstructorReturn(self, call) { if (call && (Sankey_typeof(call) === "object" || typeof call === "function")) { return call; } return Sankey_assertThisInitialized(self); }\n\nfunction Sankey_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Sankey_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Sankey_getPrototypeOf(o) { Sankey_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Sankey_getPrototypeOf(o); }\n\nfunction Sankey_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Sankey_setPrototypeOf(subClass, superClass); }\n\nfunction Sankey_setPrototypeOf(o, p) { Sankey_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Sankey_setPrototypeOf(o, p); }\n\nfunction Sankey_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Sankey_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Sankey_ownKeys(Object(source), true).forEach(function (key) { Sankey_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Sankey_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Sankey_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * @file TreemapChart\n */\n\n\n\n\n\n\n\n\n\n\nvar defaultCoordinateOfTooltip = {\n  x: 0,\n  y: 0\n};\n\nvar interpolationGenerator = function interpolationGenerator(a, b) {\n  var ka = +a;\n  var kb = b - ka;\n  return function (t) {\n    return ka + kb * t;\n  };\n};\n\nvar centerY = function centerY(node) {\n  return node.y + node.dy / 2;\n};\n\nvar getValue = function getValue(entry) {\n  return entry && entry.value || 0;\n};\n\nvar getSumOfIds = function getSumOfIds(links, ids) {\n  return ids.reduce(function (result, id) {\n    return result + getValue(links[id]);\n  }, 0);\n};\n\nvar getSumWithWeightedSource = function getSumWithWeightedSource(tree, links, ids) {\n  return ids.reduce(function (result, id) {\n    var link = links[id];\n    var sourceNode = tree[link.source];\n    return result + centerY(sourceNode) * getValue(links[id]);\n  }, 0);\n};\n\nvar getSumWithWeightedTarget = function getSumWithWeightedTarget(tree, links, ids) {\n  return ids.reduce(function (result, id) {\n    var link = links[id];\n    var targetNode = tree[link.target];\n    return result + centerY(targetNode) * getValue(links[id]);\n  }, 0);\n};\n\nvar ascendingY = function ascendingY(a, b) {\n  return a.y - b.y;\n};\n\nvar searchTargetsAndSources = function searchTargetsAndSources(links, id) {\n  var sourceNodes = [];\n  var sourceLinks = [];\n  var targetNodes = [];\n  var targetLinks = [];\n\n  for (var i = 0, len = links.length; i < len; i++) {\n    var link = links[i];\n\n    if (link.source === id) {\n      targetNodes.push(link.target);\n      targetLinks.push(i);\n    }\n\n    if (link.target === id) {\n      sourceNodes.push(link.source);\n      sourceLinks.push(i);\n    }\n  }\n\n  return {\n    sourceNodes: sourceNodes,\n    sourceLinks: sourceLinks,\n    targetLinks: targetLinks,\n    targetNodes: targetNodes\n  };\n};\n\nvar updateDepthOfTargets = function updateDepthOfTargets(tree, curNode) {\n  var targetNodes = curNode.targetNodes;\n\n  for (var i = 0, len = targetNodes.length; i < len; i++) {\n    var target = tree[targetNodes[i]];\n\n    if (target) {\n      target.depth = Math.max(curNode.depth + 1, target.depth);\n      updateDepthOfTargets(tree, target);\n    }\n  }\n};\n\nvar Sankey_getNodesTree = function getNodesTree(_ref, width, nodeWidth) {\n  var nodes = _ref.nodes,\n      links = _ref.links;\n  var tree = nodes.map(function (entry, index) {\n    var result = searchTargetsAndSources(links, index);\n    return Sankey_objectSpread({}, entry, {}, result, {\n      value: Math.max(getSumOfIds(links, result.sourceLinks), getSumOfIds(links, result.targetLinks)),\n      depth: 0\n    });\n  });\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var node = tree[i];\n\n    if (!node.sourceNodes.length) {\n      updateDepthOfTargets(tree, node);\n    }\n  }\n\n  var maxDepth = maxBy_default()(tree, function (entry) {\n    return entry.depth;\n  }).depth;\n\n  if (maxDepth >= 1) {\n    var childWidth = (width - nodeWidth) / maxDepth;\n\n    for (var _i = 0, _len = tree.length; _i < _len; _i++) {\n      var _node = tree[_i];\n\n      if (!_node.targetNodes.length) {\n        _node.depth = maxDepth;\n      }\n\n      _node.x = _node.depth * childWidth;\n      _node.dx = nodeWidth;\n    }\n  }\n\n  return {\n    tree: tree,\n    maxDepth: maxDepth\n  };\n};\n\nvar getDepthTree = function getDepthTree(tree) {\n  var result = [];\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var node = tree[i];\n\n    if (!result[node.depth]) {\n      result[node.depth] = [];\n    }\n\n    result[node.depth].push(node);\n  }\n\n  return result;\n};\n\nvar Sankey_updateYOfTree = function updateYOfTree(depthTree, height, nodePadding, links) {\n  var yRatio = min_default()(depthTree.map(function (nodes) {\n    return (height - (nodes.length - 1) * nodePadding) / sumBy_default()(nodes, getValue);\n  }));\n\n  for (var d = 0, maxDepth = depthTree.length; d < maxDepth; d++) {\n    for (var i = 0, len = depthTree[d].length; i < len; i++) {\n      var node = depthTree[d][i];\n      node.y = i;\n      node.dy = node.value * yRatio;\n    }\n  }\n\n  return links.map(function (link) {\n    return Sankey_objectSpread({}, link, {\n      dy: getValue(link) * yRatio\n    });\n  });\n};\n\nvar resolveCollisions = function resolveCollisions(depthTree, height, nodePadding) {\n  for (var i = 0, len = depthTree.length; i < len; i++) {\n    var nodes = depthTree[i];\n    var n = nodes.length; // Sort by the value of y\n\n    nodes.sort(ascendingY);\n    var y0 = 0;\n\n    for (var j = 0; j < n; j++) {\n      var node = nodes[j];\n      var dy = y0 - node.y;\n\n      if (dy > 0) {\n        node.y += dy;\n      }\n\n      y0 = node.y + node.dy + nodePadding;\n    }\n\n    y0 = height + nodePadding;\n\n    for (var _j = n - 1; _j >= 0; _j--) {\n      var _node2 = nodes[_j];\n\n      var _dy = _node2.y + _node2.dy + nodePadding - y0;\n\n      if (_dy > 0) {\n        _node2.y -= _dy;\n        y0 = _node2.y;\n      } else {\n        break;\n      }\n    }\n  }\n};\n\nvar relaxLeftToRight = function relaxLeftToRight(tree, depthTree, links, alpha) {\n  for (var i = 0, maxDepth = depthTree.length; i < maxDepth; i++) {\n    var nodes = depthTree[i];\n\n    for (var j = 0, len = nodes.length; j < len; j++) {\n      var node = nodes[j];\n\n      if (node.sourceLinks.length) {\n        var sourceSum = getSumOfIds(links, node.sourceLinks);\n        var weightedSum = getSumWithWeightedSource(tree, links, node.sourceLinks);\n        var y = weightedSum / sourceSum;\n        node.y += (y - centerY(node)) * alpha;\n      }\n    }\n  }\n};\n\nvar relaxRightToLeft = function relaxRightToLeft(tree, depthTree, links, alpha) {\n  for (var i = depthTree.length - 1; i >= 0; i--) {\n    var nodes = depthTree[i];\n\n    for (var j = 0, len = nodes.length; j < len; j++) {\n      var node = nodes[j];\n\n      if (node.targetLinks.length) {\n        var targetSum = getSumOfIds(links, node.targetLinks);\n        var weightedSum = getSumWithWeightedTarget(tree, links, node.targetLinks);\n        var y = weightedSum / targetSum;\n        node.y += (y - centerY(node)) * alpha;\n      }\n    }\n  }\n};\n\nvar updateYOfLinks = function updateYOfLinks(tree, links) {\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var node = tree[i];\n    var sy = 0;\n    var ty = 0;\n    node.targetLinks.sort(function (a, b) {\n      return tree[links[a].target].y - tree[links[b].target].y;\n    });\n    node.sourceLinks.sort(function (a, b) {\n      return tree[links[a].source].y - tree[links[b].source].y;\n    });\n\n    for (var j = 0, tLen = node.targetLinks.length; j < tLen; j++) {\n      var link = links[node.targetLinks[j]];\n\n      if (link) {\n        link.sy = sy;\n        sy += link.dy;\n      }\n    }\n\n    for (var _j2 = 0, sLen = node.sourceLinks.length; _j2 < sLen; _j2++) {\n      var _link = links[node.sourceLinks[_j2]];\n\n      if (_link) {\n        _link.ty = ty;\n        ty += _link.dy;\n      }\n    }\n  }\n};\n\nvar computeData = function computeData(_ref2) {\n  var data = _ref2.data,\n      width = _ref2.width,\n      height = _ref2.height,\n      iterations = _ref2.iterations,\n      nodeWidth = _ref2.nodeWidth,\n      nodePadding = _ref2.nodePadding;\n  var links = data.links;\n\n  var _getNodesTree = Sankey_getNodesTree(data, width, nodeWidth),\n      tree = _getNodesTree.tree;\n\n  var depthTree = getDepthTree(tree);\n  var newLinks = Sankey_updateYOfTree(depthTree, height, nodePadding, links);\n  resolveCollisions(depthTree, height, nodePadding);\n  var alpha = 1;\n\n  for (var i = 1; i <= iterations; i++) {\n    relaxRightToLeft(tree, depthTree, newLinks, alpha *= 0.99);\n    resolveCollisions(depthTree, height, nodePadding);\n    relaxLeftToRight(tree, depthTree, newLinks, alpha);\n    resolveCollisions(depthTree, height, nodePadding);\n  }\n\n  updateYOfLinks(tree, newLinks);\n  return {\n    nodes: tree,\n    links: newLinks\n  };\n};\n\nvar getCoordinateOfTooltip = function getCoordinateOfTooltip(el, type) {\n  if (type === \'node\') {\n    return {\n      x: el.x + el.width / 2,\n      y: el.y + el.height / 2\n    };\n  }\n\n  return {\n    x: (el.sourceX + el.targetX) / 2,\n    y: (el.sourceY + el.targetY) / 2\n  };\n};\n\nvar Sankey_getPayloadOfTooltip = function getPayloadOfTooltip(el, type, nameKey) {\n  var payload = el.payload;\n\n  if (type === \'node\') {\n    return [{\n      payload: el,\n      name: getValueByDataKey(payload, nameKey, \'\'),\n      value: getValueByDataKey(payload, \'value\')\n    }];\n  }\n\n  if (payload.source && payload.target) {\n    var sourceName = getValueByDataKey(payload.source, nameKey, \'\');\n    var targetName = getValueByDataKey(payload.target, nameKey, \'\');\n    return [{\n      payload: el,\n      name: "".concat(sourceName, " - ").concat(targetName),\n      value: getValueByDataKey(payload, \'value\')\n    }];\n  }\n\n  return [];\n};\n\nvar Sankey_Sankey = /*#__PURE__*/function (_PureComponent) {\n  Sankey_inherits(Sankey, _PureComponent);\n\n  var _super = Sankey_createSuper(Sankey);\n\n  function Sankey(props) {\n    var _this;\n\n    Sankey_classCallCheck(this, Sankey);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeElement: null,\n      activeElementType: null,\n      isTooltipActive: false,\n      nodes: [],\n      links: []\n    };\n    _this.state = _this.constructor.createDefaultState(props);\n    return _this;\n  } // eslint-disable-next-line camelcase\n\n\n  Sankey_createClass(Sankey, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          data = _this$props.data,\n          width = _this$props.width,\n          height = _this$props.height,\n          margin = _this$props.margin,\n          iterations = _this$props.iterations,\n          nodeWidth = _this$props.nodeWidth,\n          nodePadding = _this$props.nodePadding,\n          nameKey = _this$props.nameKey;\n\n      if (nextProps.data !== data || nextProps.width !== width || nextProps.height !== height || !shallowEqual(nextProps.margin, margin) || nextProps.iterations !== iterations || nextProps.nodeWidth !== nodeWidth || nextProps.nodePadding !== nodePadding || nextProps.nameKey !== nameKey) {\n        this.setState(this.constructor.createDefaultState(nextProps));\n      }\n    }\n    /**\n     * Returns default, reset state for the sankey chart.\n     * @param  {Object} props The latest props\n     * @return {Object} Whole new state\n     */\n\n  }, {\n    key: "handleMouseEnter",\n    value: function handleMouseEnter(el, type, e) {\n      var _this$props2 = this.props,\n          onMouseEnter = _this$props2.onMouseEnter,\n          children = _this$props2.children;\n      var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n\n      if (tooltipItem) {\n        this.setState({\n          activeElement: el,\n          activeElementType: type,\n          isTooltipActive: true\n        }, function () {\n          if (onMouseEnter) {\n            onMouseEnter(el, type, e);\n          }\n        });\n      } else if (onMouseEnter) {\n        onMouseEnter(el, type, e);\n      }\n    }\n  }, {\n    key: "handleMouseLeave",\n    value: function handleMouseLeave(el, type, e) {\n      var _this$props3 = this.props,\n          onMouseLeave = _this$props3.onMouseLeave,\n          children = _this$props3.children;\n      var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n\n      if (tooltipItem) {\n        this.setState({\n          isTooltipActive: false\n        }, function () {\n          if (onMouseLeave) {\n            onMouseLeave(el, type, e);\n          }\n        });\n      } else if (onMouseLeave) {\n        onMouseLeave(el, type, e);\n      }\n    }\n  }, {\n    key: "handleClick",\n    value: function handleClick(el, type, e) {\n      var onClick = this.props.onClick;\n      if (onClick) onClick(el, type, e);\n    }\n  }, {\n    key: "renderLinks",\n    value: function renderLinks(links, nodes) {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          linkCurvature = _this$props4.linkCurvature,\n          linkContent = _this$props4.link,\n          margin = _this$props4.margin;\n      var top = get_default()(margin, \'top\') || 0;\n      var left = get_default()(margin, \'left\') || 0;\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-sankey-links",\n        key: "recharts-sankey-links"\n      }, links.map(function (link, i) {\n        var sourceRelativeY = link.sy,\n            targetRelativeY = link.ty,\n            linkWidth = link.dy;\n        var source = nodes[link.source];\n        var target = nodes[link.target];\n        var sourceX = source.x + source.dx + left;\n        var targetX = target.x + left;\n        var interpolationFunc = interpolationGenerator(sourceX, targetX);\n        var sourceControlX = interpolationFunc(linkCurvature);\n        var targetControlX = interpolationFunc(1 - linkCurvature);\n        var sourceY = source.y + sourceRelativeY + linkWidth / 2 + top;\n        var targetY = target.y + targetRelativeY + linkWidth / 2 + top;\n\n        var linkProps = Sankey_objectSpread({\n          sourceX: sourceX,\n          targetX: targetX,\n          sourceY: sourceY,\n          targetY: targetY,\n          sourceControlX: sourceControlX,\n          targetControlX: targetControlX,\n          sourceRelativeY: sourceRelativeY,\n          targetRelativeY: targetRelativeY,\n          linkWidth: linkWidth,\n          index: i,\n          payload: Sankey_objectSpread({}, link, {\n            source: source,\n            target: target\n          })\n        }, types_filterProps(linkContent));\n\n        var events = {\n          onMouseEnter: _this2.handleMouseEnter.bind(_this2, linkProps, \'link\'),\n          onMouseLeave: _this2.handleMouseLeave.bind(_this2, linkProps, \'link\'),\n          onClick: _this2.handleClick.bind(_this2, linkProps, \'link\')\n        };\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/no-array-index-key\n          react_default.a.createElement(container_Layer, Sankey_extends({\n            key: "link".concat(i)\n          }, events), _this2.constructor.renderLinkItem(linkContent, linkProps))\n        );\n      }));\n    }\n  }, {\n    key: "renderNodes",\n    value: function renderNodes(nodes) {\n      var _this3 = this;\n\n      var _this$props5 = this.props,\n          nodeContent = _this$props5.node,\n          margin = _this$props5.margin;\n      var top = get_default()(margin, \'top\') || 0;\n      var left = get_default()(margin, \'left\') || 0;\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: "recharts-sankey-nodes",\n        key: "recharts-sankey-nodes"\n      }, nodes.map(function (node, i) {\n        var x = node.x,\n            y = node.y,\n            dx = node.dx,\n            dy = node.dy;\n\n        var nodeProps = Sankey_objectSpread({}, types_filterProps(nodeContent), {\n          x: x + left,\n          y: y + top,\n          width: dx,\n          height: dy,\n          index: i,\n          payload: node\n        });\n\n        var events = {\n          onMouseEnter: _this3.handleMouseEnter.bind(_this3, nodeProps, \'node\'),\n          onMouseLeave: _this3.handleMouseLeave.bind(_this3, nodeProps, \'node\'),\n          onClick: _this3.handleClick.bind(_this3, nodeProps, \'node\')\n        };\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/no-array-index-key\n          react_default.a.createElement(container_Layer, Sankey_extends({\n            key: "node".concat(i)\n          }, events), _this3.constructor.renderNodeItem(nodeContent, nodeProps))\n        );\n      }));\n    }\n  }, {\n    key: "renderTooltip",\n    value: function renderTooltip() {\n      var _this$props6 = this.props,\n          children = _this$props6.children,\n          width = _this$props6.width,\n          height = _this$props6.height,\n          nameKey = _this$props6.nameKey;\n      var tooltipItem = findChildByType(children, component_Tooltip.displayName);\n\n      if (!tooltipItem) {\n        return null;\n      }\n\n      var _this$state = this.state,\n          isTooltipActive = _this$state.isTooltipActive,\n          activeElement = _this$state.activeElement,\n          activeElementType = _this$state.activeElementType;\n      var viewBox = {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      };\n      var coordinate = activeElement ? getCoordinateOfTooltip(activeElement, activeElementType) : defaultCoordinateOfTooltip;\n      var payload = activeElement ? Sankey_getPayloadOfTooltip(activeElement, activeElementType, nameKey) : [];\n      return react_default.a.cloneElement(tooltipItem, {\n        viewBox: viewBox,\n        active: isTooltipActive,\n        coordinate: coordinate,\n        label: \'\',\n        payload: payload\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (!ReactUtils_validateWidthHeight(this)) {\n        return null;\n      }\n\n      var _this$props7 = this.props,\n          width = _this$props7.width,\n          height = _this$props7.height,\n          className = _this$props7.className,\n          style = _this$props7.style,\n          children = _this$props7.children,\n          others = Sankey_objectWithoutProperties(_this$props7, ["width", "height", "className", "style", "children"]);\n\n      var _this$state2 = this.state,\n          links = _this$state2.links,\n          nodes = _this$state2.nodes;\n      var attrs = types_filterProps(others);\n      return /*#__PURE__*/react_default.a.createElement("div", {\n        className: classnames_default()(\'recharts-wrapper\', className),\n        style: Sankey_objectSpread({}, style, {\n          position: \'relative\',\n          cursor: \'default\',\n          width: width,\n          height: height\n        })\n      }, /*#__PURE__*/react_default.a.createElement(container_Surface, Sankey_extends({}, attrs, {\n        width: width,\n        height: height\n      }), ReactUtils_filterSvgElements(children), this.renderLinks(links, nodes), this.renderNodes(nodes)), this.renderTooltip());\n    }\n  }], [{\n    key: "createDefaultState",\n    value: function createDefaultState(props) {\n      var data = props.data,\n          width = props.width,\n          height = props.height,\n          margin = props.margin,\n          iterations = props.iterations,\n          nodeWidth = props.nodeWidth,\n          nodePadding = props.nodePadding;\n      var contentWidth = width - (margin && margin.left || 0) - (margin && margin.right || 0);\n      var contentHeight = height - (margin && margin.top || 0) - (margin && margin.bottom || 0);\n\n      var _computeData = computeData({\n        data: data,\n        width: contentWidth,\n        height: contentHeight,\n        iterations: iterations,\n        nodeWidth: nodeWidth,\n        nodePadding: nodePadding\n      }),\n          links = _computeData.links,\n          nodes = _computeData.nodes;\n\n      return {\n        activeElement: null,\n        activeElementType: null,\n        isTooltipActive: false,\n        nodes: nodes,\n        links: links\n      };\n    }\n  }, {\n    key: "renderLinkItem",\n    value: function renderLinkItem(option, props) {\n      if (react_default.a.isValidElement(option)) {\n        return react_default.a.cloneElement(option, props);\n      }\n\n      if (isFunction_default()(option)) {\n        return option(props);\n      }\n\n      var sourceX = props.sourceX,\n          sourceY = props.sourceY,\n          sourceControlX = props.sourceControlX,\n          targetX = props.targetX,\n          targetY = props.targetY,\n          targetControlX = props.targetControlX,\n          linkWidth = props.linkWidth,\n          others = Sankey_objectWithoutProperties(props, ["sourceX", "sourceY", "sourceControlX", "targetX", "targetY", "targetControlX", "linkWidth"]);\n\n      return /*#__PURE__*/react_default.a.createElement("path", Sankey_extends({\n        className: "recharts-sankey-link",\n        d: "\\n          M".concat(sourceX, ",").concat(sourceY, "\\n          C").concat(sourceControlX, ",").concat(sourceY, " ").concat(targetControlX, ",").concat(targetY, " ").concat(targetX, ",").concat(targetY, "\\n        "),\n        fill: "none",\n        stroke: "#333",\n        strokeWidth: linkWidth,\n        strokeOpacity: "0.2"\n      }, types_filterProps(others)));\n    }\n  }, {\n    key: "renderNodeItem",\n    value: function renderNodeItem(option, props) {\n      if (react_default.a.isValidElement(option)) {\n        return react_default.a.cloneElement(option, props);\n      }\n\n      if (isFunction_default()(option)) {\n        return option(props);\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(shape_Rectangle, Sankey_extends({\n        className: "recharts-sankey-node",\n        fill: "#0088fe",\n        fillOpacity: "0.8"\n      }, types_filterProps(props)));\n    }\n  }]);\n\n  return Sankey;\n}(react["PureComponent"]);\n\nSankey_Sankey.displayName = \'Sankey\';\nSankey_Sankey.defaultProps = {\n  nameKey: \'name\',\n  dataKey: \'value\',\n  nodePadding: 10,\n  nodeWidth: 10,\n  linkCurvature: 0.5,\n  iterations: 32,\n  margin: {\n    top: 5,\n    right: 5,\n    bottom: 5,\n    left: 5\n  }\n};\n/* harmony default export */ var chart_Sankey = (Sankey_Sankey);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/RadarChart.js\n/**\n * @fileOverview Radar Chart\n */\n\n\n\n\n\n/* harmony default export */ var RadarChart = (chart_generateCategoricalChart({\n  chartName: \'RadarChart\',\n  GraphicalChild: polar_Radar,\n  axisComponents: [{\n    axisType: \'angleAxis\',\n    AxisComp: polar_PolarAngleAxis\n  }, {\n    axisType: \'radiusAxis\',\n    AxisComp: polar_PolarRadiusAxis\n  }],\n  formatAxisMap: PolarUtils_formatAxisMap,\n  defaultProps: {\n    layout: \'centric\',\n    startAngle: 90,\n    endAngle: -270,\n    cx: \'50%\',\n    cy: \'50%\',\n    innerRadius: 0,\n    outerRadius: \'80%\'\n  }\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/ScatterChart.js\n/**\n * @fileOverview Scatter Chart\n */\n\n\n\n\n\n\n/* harmony default export */ var ScatterChart = (chart_generateCategoricalChart({\n  chartName: \'ScatterChart\',\n  GraphicalChild: cartesian_Scatter,\n  eventType: \'single\',\n  axisComponents: [{\n    axisType: \'xAxis\',\n    AxisComp: cartesian_XAxis\n  }, {\n    axisType: \'yAxis\',\n    AxisComp: cartesian_YAxis\n  }, {\n    axisType: \'zAxis\',\n    AxisComp: cartesian_ZAxis\n  }],\n  formatAxisMap: CartesianUtils_formatAxisMap\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/AreaChart.js\n/**\n * @fileOverview Area Chart\n */\n\n\n\n\n\n/* harmony default export */ var AreaChart = (chart_generateCategoricalChart({\n  chartName: \'AreaChart\',\n  GraphicalChild: cartesian_Area,\n  axisComponents: [{\n    axisType: \'xAxis\',\n    AxisComp: cartesian_XAxis\n  }, {\n    axisType: \'yAxis\',\n    AxisComp: cartesian_YAxis\n  }],\n  formatAxisMap: CartesianUtils_formatAxisMap\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/RadialBarChart.js\n/**\n * @fileOverview Radar Bar Chart\n */\n\n\n\n\n\n/* harmony default export */ var RadialBarChart = (chart_generateCategoricalChart({\n  chartName: \'RadialBarChart\',\n  GraphicalChild: polar_RadialBar,\n  legendContent: \'children\',\n  axisComponents: [{\n    axisType: \'angleAxis\',\n    AxisComp: polar_PolarAngleAxis\n  }, {\n    axisType: \'radiusAxis\',\n    AxisComp: polar_PolarRadiusAxis\n  }],\n  formatAxisMap: PolarUtils_formatAxisMap,\n  defaultProps: {\n    layout: \'radial\',\n    startAngle: 0,\n    endAngle: 360,\n    cx: \'50%\',\n    cy: \'50%\',\n    innerRadius: 0,\n    outerRadius: \'80%\'\n  }\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/ComposedChart.js\n/**\n * @fileOverview Composed Chart\n */\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var ComposedChart = (chart_generateCategoricalChart({\n  chartName: \'ComposedChart\',\n  GraphicalChild: [cartesian_Line, cartesian_Area, cartesian_Bar, cartesian_Scatter],\n  axisComponents: [{\n    axisType: \'xAxis\',\n    AxisComp: cartesian_XAxis\n  }, {\n    axisType: \'yAxis\',\n    AxisComp: cartesian_YAxis\n  }, {\n    axisType: \'zAxis\',\n    AxisComp: cartesian_ZAxis\n  }],\n  formatAxisMap: CartesianUtils_formatAxisMap\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/shape/Trapezoid.js\nfunction Trapezoid_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Trapezoid_typeof = function _typeof(obj) { return typeof obj; }; } else { Trapezoid_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Trapezoid_typeof(obj); }\n\nfunction Trapezoid_extends() { Trapezoid_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Trapezoid_extends.apply(this, arguments); }\n\nfunction Trapezoid_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Trapezoid_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Trapezoid_createClass(Constructor, protoProps, staticProps) { if (protoProps) Trapezoid_defineProperties(Constructor.prototype, protoProps); if (staticProps) Trapezoid_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Trapezoid_createSuper(Derived) { return function () { var Super = Trapezoid_getPrototypeOf(Derived), result; if (Trapezoid_isNativeReflectConstruct()) { var NewTarget = Trapezoid_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Trapezoid_possibleConstructorReturn(this, result); }; }\n\nfunction Trapezoid_possibleConstructorReturn(self, call) { if (call && (Trapezoid_typeof(call) === "object" || typeof call === "function")) { return call; } return Trapezoid_assertThisInitialized(self); }\n\nfunction Trapezoid_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Trapezoid_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Trapezoid_getPrototypeOf(o) { Trapezoid_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Trapezoid_getPrototypeOf(o); }\n\nfunction Trapezoid_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Trapezoid_setPrototypeOf(subClass, superClass); }\n\nfunction Trapezoid_setPrototypeOf(o, p) { Trapezoid_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Trapezoid_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Rectangle\n */\n\n\n\n\n\nvar getTrapezoidPath = function getTrapezoidPath(x, y, upperWidth, lowerWidth, height) {\n  var widthGap = upperWidth - lowerWidth;\n  var path;\n  path = "M ".concat(x, ",").concat(y);\n  path += "L ".concat(x + upperWidth, ",").concat(y);\n  path += "L ".concat(x + upperWidth - widthGap / 2, ",").concat(y + height);\n  path += "L ".concat(x + upperWidth - widthGap / 2 - lowerWidth, ",").concat(y + height);\n  path += "L ".concat(x, ",").concat(y, " Z");\n  return path;\n};\n\nvar Trapezoid_Trapezoid = /*#__PURE__*/function (_PureComponent) {\n  Trapezoid_inherits(Trapezoid, _PureComponent);\n\n  var _super = Trapezoid_createSuper(Trapezoid);\n\n  function Trapezoid() {\n    var _this;\n\n    Trapezoid_classCallCheck(this, Trapezoid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      totalLength: -1\n    };\n    _this.node = void 0;\n    return _this;\n  }\n\n  Trapezoid_createClass(Trapezoid, [{\n    key: "componentDidMount",\n\n    /* eslint-disable  react/no-did-mount-set-state */\n    value: function componentDidMount() {\n      if (this.node && this.node.getTotalLength) {\n        try {\n          var totalLength = this.node.getTotalLength();\n\n          if (totalLength) {\n            this.setState({\n              totalLength: totalLength\n            });\n          }\n        } catch (err) {// calculate total length error\n        }\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          x = _this$props.x,\n          y = _this$props.y,\n          upperWidth = _this$props.upperWidth,\n          lowerWidth = _this$props.lowerWidth,\n          height = _this$props.height,\n          className = _this$props.className;\n      var totalLength = this.state.totalLength;\n      var _this$props2 = this.props,\n          animationEasing = _this$props2.animationEasing,\n          animationDuration = _this$props2.animationDuration,\n          animationBegin = _this$props2.animationBegin,\n          isUpdateAnimationActive = _this$props2.isUpdateAnimationActive;\n\n      if (x !== +x || y !== +y || upperWidth !== +upperWidth || lowerWidth !== +lowerWidth || height !== +height || upperWidth === 0 && lowerWidth === 0 || height === 0) {\n        return null;\n      }\n\n      var layerClass = classnames_default()(\'recharts-trapezoid\', className);\n\n      if (!isUpdateAnimationActive) {\n        return /*#__PURE__*/react_default.a.createElement("g", null, /*#__PURE__*/react_default.a.createElement("path", Trapezoid_extends({}, types_filterProps(this.props, true), {\n          className: layerClass,\n          d: getTrapezoidPath(x, y, upperWidth, lowerWidth, height)\n        })));\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        canBegin: totalLength > 0,\n        from: {\n          upperWidth: 0,\n          lowerWidth: 0,\n          height: height,\n          x: x,\n          y: y\n        },\n        to: {\n          upperWidth: upperWidth,\n          lowerWidth: lowerWidth,\n          height: height,\n          x: x,\n          y: y\n        },\n        duration: animationDuration,\n        animationEasing: animationEasing,\n        isActive: isUpdateAnimationActive\n      }, function (_ref) {\n        var currUpperWidth = _ref.upperWidth,\n            currLowerWidth = _ref.lowerWidth,\n            currHeight = _ref.height,\n            currX = _ref.x,\n            currY = _ref.y;\n        return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n          canBegin: totalLength > 0,\n          from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),\n          to: "".concat(totalLength, "px 0px"),\n          attributeName: "strokeDasharray",\n          begin: animationBegin,\n          duration: animationDuration,\n          easing: animationEasing\n        }, /*#__PURE__*/react_default.a.createElement("path", Trapezoid_extends({}, types_filterProps(_this2.props, true), {\n          className: layerClass,\n          d: getTrapezoidPath(currX, currY, currUpperWidth, currLowerWidth, currHeight),\n          ref: function ref(node) {\n            _this2.node = node;\n          }\n        })));\n      });\n    }\n  }]);\n\n  return Trapezoid;\n}(react["PureComponent"]);\n\nTrapezoid_Trapezoid.defaultProps = {\n  x: 0,\n  y: 0,\n  upperWidth: 0,\n  lowerWidth: 0,\n  height: 0,\n  isUpdateAnimationActive: false,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: \'ease\'\n};\n/* harmony default export */ var shape_Trapezoid = (Trapezoid_Trapezoid);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/numberAxis/Funnel.js\n\n\n\n\n\n\n\nfunction Funnel_slicedToArray(arr, i) { return Funnel_arrayWithHoles(arr) || Funnel_iterableToArrayLimit(arr, i) || Funnel_unsupportedIterableToArray(arr, i) || Funnel_nonIterableRest(); }\n\nfunction Funnel_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction Funnel_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Funnel_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Funnel_arrayLikeToArray(o, minLen); }\n\nfunction Funnel_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Funnel_iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction Funnel_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction Funnel_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Funnel_typeof = function _typeof(obj) { return typeof obj; }; } else { Funnel_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Funnel_typeof(obj); }\n\nfunction Funnel_extends() { Funnel_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Funnel_extends.apply(this, arguments); }\n\nfunction Funnel_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Funnel_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Funnel_ownKeys(Object(source), true).forEach(function (key) { Funnel_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Funnel_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Funnel_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Funnel_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Funnel_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Funnel_createClass(Constructor, protoProps, staticProps) { if (protoProps) Funnel_defineProperties(Constructor.prototype, protoProps); if (staticProps) Funnel_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Funnel_createSuper(Derived) { return function () { var Super = Funnel_getPrototypeOf(Derived), result; if (Funnel_isNativeReflectConstruct()) { var NewTarget = Funnel_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Funnel_possibleConstructorReturn(this, result); }; }\n\nfunction Funnel_possibleConstructorReturn(self, call) { if (call && (Funnel_typeof(call) === "object" || typeof call === "function")) { return call; } return Funnel_assertThisInitialized(self); }\n\nfunction Funnel_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Funnel_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Funnel_getPrototypeOf(o) { Funnel_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Funnel_getPrototypeOf(o); }\n\nfunction Funnel_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Funnel_setPrototypeOf(subClass, superClass); }\n\nfunction Funnel_setPrototypeOf(o, p) { Funnel_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Funnel_setPrototypeOf(o, p); }\n\n/**\n * @fileOverview Render sectors of a funnel\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Funnel_Funnel = /*#__PURE__*/function (_PureComponent) {\n  Funnel_inherits(Funnel, _PureComponent);\n\n  var _super = Funnel_createSuper(Funnel);\n\n  function Funnel() {\n    var _this;\n\n    Funnel_classCallCheck(this, Funnel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isAnimationFinished: false\n    };\n\n    _this.cachePrevData = function (trapezoids) {\n      _this.setState({\n        prevTrapezoids: trapezoids\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      var onAnimationEnd = _this.props.onAnimationEnd;\n\n      _this.setState({\n        isAnimationFinished: true\n      });\n\n      if (isFunction_default()(onAnimationEnd)) {\n        onAnimationEnd();\n      }\n    };\n\n    _this.handleAnimationStart = function () {\n      var onAnimationStart = _this.props.onAnimationStart;\n\n      _this.setState({\n        isAnimationFinished: false\n      });\n\n      if (isFunction_default()(onAnimationStart)) {\n        onAnimationStart();\n      }\n    };\n\n    return _this;\n  }\n\n  Funnel_createClass(Funnel, [{\n    key: "UNSAFE_componentWillReceiveProps",\n    // eslint-disable-next-line camelcase\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          trapezoids = _this$props.trapezoids;\n\n      if (nextProps.isAnimationActive !== this.props.isAnimationActive) {\n        this.cachePrevData([]);\n      } else if (nextProps.animationId !== animationId) {\n        this.cachePrevData(trapezoids);\n      }\n    }\n  }, {\n    key: "isActiveIndex",\n    value: function isActiveIndex(i) {\n      var activeIndex = this.props.activeIndex;\n\n      if (Array.isArray(activeIndex)) {\n        return activeIndex.indexOf(i) !== -1;\n      }\n\n      return i === activeIndex;\n    }\n  }, {\n    key: "renderTrapezoidsStatically",\n    value: function renderTrapezoidsStatically(trapezoids) {\n      var _this2 = this;\n\n      var activeShape = this.props.activeShape;\n      return trapezoids.map(function (entry, i) {\n        var trapezoidOptions = _this2.isActiveIndex(i) ? activeShape : null;\n\n        var trapezoidProps = Funnel_objectSpread({}, entry, {\n          stroke: entry.stroke\n        });\n\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, Funnel_extends({\n          className: "recharts-funnel-trapezoid"\n        }, types_adaptEventsOfChild(_this2.props, entry, i), {\n          key: "trapezoid-".concat(i) // eslint-disable-line react/no-array-index-key\n\n        }), Funnel.renderTrapezoidItem(trapezoidOptions, trapezoidProps));\n      });\n    }\n  }, {\n    key: "renderTrapezoidsWithAnimation",\n    value: function renderTrapezoidsWithAnimation() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          trapezoids = _this$props2.trapezoids,\n          isAnimationActive = _this$props2.isAnimationActive,\n          animationBegin = _this$props2.animationBegin,\n          animationDuration = _this$props2.animationDuration,\n          animationEasing = _this$props2.animationEasing,\n          animationId = _this$props2.animationId;\n      var prevTrapezoids = this.state.prevTrapezoids;\n      return /*#__PURE__*/react_default.a.createElement(es6["a" /* default */], {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: "funnel-".concat(animationId),\n        onAnimationStart: this.handleAnimationStart,\n        onAnimationEnd: this.handleAnimationEnd\n      }, function (_ref) {\n        var t = _ref.t;\n        var stepData = trapezoids.map(function (entry, index) {\n          var prev = prevTrapezoids && prevTrapezoids[index];\n\n          if (prev) {\n            var _interpolatorX = interpolateNumber(prev.x, entry.x);\n\n            var _interpolatorY = interpolateNumber(prev.y, entry.y);\n\n            var _interpolatorUpperWidth = interpolateNumber(prev.upperWidth, entry.upperWidth);\n\n            var _interpolatorLowerWidth = interpolateNumber(prev.lowerWidth, entry.lowerWidth);\n\n            var _interpolatorHeight = interpolateNumber(prev.height, entry.height);\n\n            return Funnel_objectSpread({}, entry, {\n              x: _interpolatorX(t),\n              y: _interpolatorY(t),\n              upperWidth: _interpolatorUpperWidth(t),\n              lowerWidth: _interpolatorLowerWidth(t),\n              height: _interpolatorHeight(t)\n            });\n          }\n\n          var interpolatorX = interpolateNumber(entry.x + entry.upperWidth / 2, entry.x);\n          var interpolatorY = interpolateNumber(entry.y + entry.height / 2, entry.y);\n          var interpolatorUpperWidth = interpolateNumber(0, entry.upperWidth);\n          var interpolatorLowerWidth = interpolateNumber(0, entry.lowerWidth);\n          var interpolatorHeight = interpolateNumber(0, entry.height);\n          return Funnel_objectSpread({}, entry, {\n            x: interpolatorX(t),\n            y: interpolatorY(t),\n            upperWidth: interpolatorUpperWidth(t),\n            lowerWidth: interpolatorLowerWidth(t),\n            height: interpolatorHeight(t)\n          });\n        });\n        return /*#__PURE__*/react_default.a.createElement(container_Layer, null, _this3.renderTrapezoidsStatically(stepData));\n      });\n    }\n  }, {\n    key: "renderTrapezoids",\n    value: function renderTrapezoids() {\n      var _this$props3 = this.props,\n          trapezoids = _this$props3.trapezoids,\n          isAnimationActive = _this$props3.isAnimationActive;\n      var prevTrapezoids = this.state.prevTrapezoids;\n\n      if (isAnimationActive && trapezoids && trapezoids.length && (!prevTrapezoids || !isEqual_default()(prevTrapezoids, trapezoids))) {\n        return this.renderTrapezoidsWithAnimation();\n      }\n\n      return this.renderTrapezoidsStatically(trapezoids);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props4 = this.props,\n          hide = _this$props4.hide,\n          trapezoids = _this$props4.trapezoids,\n          className = _this$props4.className,\n          isAnimationActive = _this$props4.isAnimationActive;\n      var isAnimationFinished = this.state.isAnimationFinished;\n\n      if (hide || !trapezoids || !trapezoids.length) {\n        return null;\n      }\n\n      var layerClass = classnames_default()(\'recharts-trapezoids\', className);\n      return /*#__PURE__*/react_default.a.createElement(container_Layer, {\n        className: layerClass\n      }, this.renderTrapezoids(), (!isAnimationActive || isAnimationFinished) && component_LabelList.renderCallByParent(this.props, trapezoids));\n    }\n  }], [{\n    key: "renderTrapezoidItem",\n    value: function renderTrapezoidItem(option, props) {\n      if (react_default.a.isValidElement(option)) {\n        return react_default.a.cloneElement(option, props);\n      }\n\n      if (isFunction_default()(option)) {\n        return option(props);\n      }\n\n      if (isPlainObject_default()(option)) {\n        return /*#__PURE__*/react_default.a.createElement(shape_Trapezoid, Funnel_extends({}, props, option));\n      }\n\n      return /*#__PURE__*/react_default.a.createElement(shape_Trapezoid, props);\n    }\n  }]);\n\n  return Funnel;\n}(react["PureComponent"]);\n\nFunnel_Funnel.displayName = \'Funnel\';\nFunnel_Funnel.defaultProps = {\n  stroke: \'#fff\',\n  fill: \'#808080\',\n  legendType: \'rect\',\n  labelLine: true,\n  hide: false,\n  isAnimationActive: !util_Global.isSsr,\n  animationBegin: 400,\n  animationDuration: 1500,\n  animationEasing: \'ease\',\n  nameKey: \'name\'\n};\n\nFunnel_Funnel.getRealFunnelData = function (item) {\n  var _item$props = item.props,\n      data = _item$props.data,\n      children = _item$props.children;\n  var presentationProps = types_filterProps(item.props);\n  var cells = ReactUtils_findAllByType(children, component_Cell.displayName);\n\n  if (data && data.length) {\n    return data.map(function (entry, index) {\n      return Funnel_objectSpread({\n        payload: entry\n      }, presentationProps, {}, entry, {}, cells && cells[index] && cells[index].props);\n    });\n  }\n\n  if (cells && cells.length) {\n    return cells.map(function (cell) {\n      return Funnel_objectSpread({}, presentationProps, {}, cell.props);\n    });\n  }\n\n  return [];\n};\n\nFunnel_Funnel.getRealWidthHeight = function (item, offset) {\n  var customWidth = item.props.width;\n  var width = offset.width,\n      height = offset.height,\n      left = offset.left,\n      right = offset.right,\n      top = offset.top,\n      bottom = offset.bottom;\n  var realHeight = height;\n  var realWidth = width;\n\n  if (isNumber_default()(customWidth)) {\n    realWidth = customWidth;\n  } else if (isString_default()(customWidth)) {\n    realWidth = realWidth * parseFloat(customWidth) / 100;\n  }\n\n  return {\n    realWidth: realWidth - left - right - 50,\n    realHeight: realHeight - bottom - top,\n    offsetX: (width - realWidth) / 2,\n    offsetY: (height - realHeight) / 2\n  };\n};\n\nFunnel_Funnel.getComposedData = function (_ref2) {\n  var item = _ref2.item,\n      offset = _ref2.offset,\n      onItemMouseLeave = _ref2.onItemMouseLeave,\n      onItemMouseEnter = _ref2.onItemMouseEnter,\n      onItemClick = _ref2.onItemClick;\n  var funnelData = Funnel_Funnel.getRealFunnelData(item);\n  var _item$props2 = item.props,\n      dataKey = _item$props2.dataKey,\n      nameKey = _item$props2.nameKey,\n      tooltipType = _item$props2.tooltipType;\n  var left = offset.left,\n      top = offset.top;\n\n  var _Funnel$getRealWidthH = Funnel_Funnel.getRealWidthHeight(item, offset),\n      realHeight = _Funnel$getRealWidthH.realHeight,\n      realWidth = _Funnel$getRealWidthH.realWidth,\n      offsetX = _Funnel$getRealWidthH.offsetX,\n      offsetY = _Funnel$getRealWidthH.offsetY;\n\n  var maxValue = getValueByDataKey(funnelData[0], dataKey, 0);\n  var len = funnelData.length;\n  var rowHeight = realHeight / len;\n  var trapezoids = funnelData.map(function (entry, i) {\n    var rawVal = getValueByDataKey(entry, dataKey, 0);\n    var name = getValueByDataKey(entry, nameKey, i);\n    var val = rawVal;\n    var nextVal;\n\n    if (i !== len - 1) {\n      nextVal = getValueByDataKey(funnelData[i + 1], dataKey, 0);\n\n      if (nextVal instanceof Array) {\n        var _nextVal = nextVal;\n\n        var _nextVal2 = Funnel_slicedToArray(_nextVal, 1);\n\n        nextVal = _nextVal2[0];\n      }\n    } else if (rawVal instanceof Array && rawVal.length === 2) {\n      var _rawVal = Funnel_slicedToArray(rawVal, 2);\n\n      val = _rawVal[0];\n      nextVal = _rawVal[1];\n    } else {\n      nextVal = 0;\n    }\n\n    var x = (maxValue - val) * realWidth / (2 * maxValue) + top + 25 + offsetX;\n    var y = realHeight / len * i + left + offsetY;\n    var upperWidth = val / maxValue * realWidth;\n    var lowerWidth = nextVal / maxValue * realWidth;\n    var tooltipPayload = [{\n      name: name,\n      value: val,\n      payload: entry,\n      dataKey: dataKey,\n      type: tooltipType\n    }];\n    var tooltipPosition = {\n      x: x + upperWidth / 2,\n      y: y + rowHeight / 2\n    };\n    return Funnel_objectSpread({\n      x: x,\n      y: y,\n      width: Math.max(upperWidth, lowerWidth),\n      upperWidth: upperWidth,\n      lowerWidth: lowerWidth,\n      height: rowHeight,\n      name: name,\n      val: val,\n      tooltipPayload: tooltipPayload,\n      tooltipPosition: tooltipPosition\n    }, omit_default()(entry, \'width\'), {\n      payload: entry\n    });\n  });\n  return {\n    trapezoids: trapezoids,\n    data: funnelData,\n    onMouseLeave: isFunction_default()(onItemMouseLeave) ? onItemMouseLeave : item.props.onMouseLeave,\n    onMouseEnter: isFunction_default()(onItemMouseEnter) ? onItemMouseEnter : item.props.onMouseEnter,\n    onClick: isFunction_default()(onItemClick) ? onItemClick : item.props.onClick\n  };\n};\n\n/* harmony default export */ var numberAxis_Funnel = (Funnel_Funnel);\n// CONCATENATED MODULE: ./node_modules/recharts/es6/chart/FunnelChart.js\n/**\n * @fileOverview Funnel Chart\n */\n\n\n/* harmony default export */ var FunnelChart = (chart_generateCategoricalChart({\n  chartName: \'FunnelChart\',\n  GraphicalChild: numberAxis_Funnel,\n  eventType: \'item\',\n  axisComponents: [],\n  defaultProps: {\n    layout: \'centric\'\n  }\n}));\n// CONCATENATED MODULE: ./node_modules/recharts/es6/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/recharts/es6/index.js_+_68_modules?')}}]);